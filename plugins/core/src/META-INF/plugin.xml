<idea-plugin version="2">
  <id>com.intellij</id>
  <name>IDEA CORE</name>

  <actions>
    <group id="LookupActions">
      <!-- these must be declared before standard EnterAction and TabAction -->
      <action id="EditorChooseLookupItem" class="com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction$FocusedOnly"/>
      <action id="EditorChooseLookupItemAlways" class="com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction$Always"/>
      <action id="EditorChooseLookupItemReplace" class="com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction$Replacing"/>
      <action id="EditorChooseLookupItemCompleteStatement"
              class="com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction$CompletingStatement"/>
      <action id="EditorChooseLookupItemDot" class="com.intellij.codeInsight.lookup.impl.actions.ChooseItemAction$ChooseWithDot"/>

      <action id="ExpandLiveTemplateByTab" class="com.intellij.codeInsight.template.impl.editorActions.ExpandLiveTemplateByTabAction"
              use-shortcut-of="EditorTab"/>

      <action id="NextTemplateVariable" class="com.intellij.codeInsight.template.impl.actions.NextVariableAction"/>
      <action id="PreviousTemplateVariable" class="com.intellij.codeInsight.template.impl.actions.PreviousVariableAction"/>

      <action id="NextParameter" class="com.intellij.codeInsight.hint.actions.NextParameterAction"/>
      <action id="PrevParameter" class="com.intellij.codeInsight.hint.actions.PrevParameterAction"/>
    </group>

    <action id="EditorIndentSelection" class="com.intellij.openapi.editor.actions.LangIndentSelectionAction"/>

    <group id="SwitchViewActions">
      <action id="SwitchUp" class="com.intellij.ui.switcher.SwitchAction$Up"/>
      <action id="SwitchDown" class="com.intellij.ui.switcher.SwitchAction$Down"/>
      <action id="SwitchLeft" class="com.intellij.ui.switcher.SwitchAction$Left"/>
      <action id="SwitchRight" class="com.intellij.ui.switcher.SwitchAction$Right"/>
      <action id="SwitchApply" class="com.intellij.ui.switcher.ApplySwitchAction"/>
    </group>

    <action id="ContextHelp" class="com.intellij.ide.actions.ContextHelpAction"/>
    <action id="RunGc" class="com.intellij.ide.actions.RunGcAction"/>
    <action id="ShowPopupMenu" class="com.intellij.ide.actions.ShowPopupMenuAction"/>
    <action id="ShowColorPicker" class="com.intellij.ui.ShowColorPickerAction" text="Show Color Picker"/>

    <action id="NextEditorTab" class="com.intellij.openapi.fileEditor.impl.SelectNextEditorTabAction"/>
    <action id="PreviousEditorTab" class="com.intellij.openapi.fileEditor.impl.SelectPreviousEditorTabAction"/>

    <action id="TextComponent.ClearAction" class="com.intellij.ui.ClearTextAction"/>
    <action id="Switcher" class="com.intellij.ide.actions.Switcher" text="Switcher"/>
    <action id="QuickDocCopy" class="com.intellij.codeInsight.documentation.actions.CopyQuickDocAction" use-shortcut-of="$Copy"/>
    <action id="EditSourceInNewWindow" class="com.intellij.ide.actions.EditSourceInNewWindowAction"/>
    <action id="SearchEverywhere" class="com.intellij.ide.actions.SearchEverywhereAction" />

    <group id="TemplateParametersNavigation">
      <action id="NextTemplateParameter" class="com.intellij.codeInsight.completion.NextPrevParameterAction$Next" text="Next Parameter">
        <keyboard-shortcut first-keystroke="TAB" keymap="$default"/>
      </action>
      <action id="PrevTemplateParameter" class="com.intellij.codeInsight.completion.NextPrevParameterAction$Prev" text="Previous Parameter">
        <keyboard-shortcut first-keystroke="shift TAB" keymap="$default"/>
      </action>
    </group>

    <group id="EditorActions">
      <action id="EditorPageUp" class="com.intellij.openapi.editor.actions.PageUpAction"/>
      <action id="EditorPageDown" class="com.intellij.openapi.editor.actions.PageDownAction"/>
      <action id="EditorPageUpWithSelection" class="com.intellij.openapi.editor.actions.PageUpWithSelectionAction"/>
      <action id="EditorPageDownWithSelection" class="com.intellij.openapi.editor.actions.PageDownWithSelectionAction"/>
      <action id="EditorCopy" class="com.intellij.openapi.editor.actions.CopyAction" use-shortcut-of="$Copy"/>
      <action id="EditorCut" class="com.intellij.openapi.editor.actions.CutAction" use-shortcut-of="$Cut"/>
      <action id="EditorPaste" class="com.intellij.openapi.editor.actions.PasteAction" use-shortcut-of="$Paste"/>
      <action id="EditorPasteSimple" class="com.intellij.openapi.editor.actions.SimplePasteAction"/>
      <action id="EditorPasteFromX11" class="com.intellij.openapi.editor.actions.PasteFromX11Action"/>
      <action id="EditorDelete" class="com.intellij.openapi.editor.actions.DeleteAction" use-shortcut-of="$Delete"/>
      <action id="EditorBackSpace" class="com.intellij.openapi.editor.actions.BackspaceAction"/>
      <action id="EditorHungryBackSpace" class="com.intellij.openapi.editor.actions.HungryBackspaceAction"/>
      <action id="EditorMoveToPageTop" class="com.intellij.openapi.editor.actions.PageTopAction"/>
      <action id="EditorMoveToPageBottom" class="com.intellij.openapi.editor.actions.PageBottomAction"/>
      <action id="EditorMoveToPageTopWithSelection" class="com.intellij.openapi.editor.actions.PageTopWithSelectionAction"/>
      <action id="EditorMoveToPageBottomWithSelection" class="com.intellij.openapi.editor.actions.PageBottomWithSelectionAction"/>
      <action id="EditorEnter" class="com.intellij.openapi.editor.actions.EnterAction"/>
      <action id="EditorEscape" class="com.intellij.openapi.editor.actions.EscapeAction"/>
      <action id="EditorUp" class="com.intellij.openapi.editor.actions.MoveCaretUpAction"/>
      <action id="EditorDown" class="com.intellij.openapi.editor.actions.MoveCaretDownAction"/>
      <action id="EditorLeft" class="com.intellij.openapi.editor.actions.MoveCaretLeftAction"/>
      <action id="EditorRight" class="com.intellij.openapi.editor.actions.MoveCaretRightAction"/>
      <action id="EditorUpWithSelection" class="com.intellij.openapi.editor.actions.MoveCaretUpWithSelectionAction"/>
      <action id="EditorDownWithSelection" class="com.intellij.openapi.editor.actions.MoveCaretDownWithSelectionAction"/>
      <action id="EditorLeftWithSelection" class="com.intellij.openapi.editor.actions.MoveCaretLeftWithSelectionAction"/>
      <action id="EditorRightWithSelection" class="com.intellij.openapi.editor.actions.MoveCaretRightWithSelectionAction"/>
      <action id="EditorUnindentSelection" class="com.intellij.openapi.editor.actions.UnindentSelectionAction"/>
      <action id="EditorTab" class="com.intellij.openapi.editor.actions.TabAction"/>
      <action id="EditorResetFontSize" class="com.intellij.openapi.editor.actions.ResetFontSizeAction"/>
      <action id="EditorScrollUp" class="com.intellij.openapi.editor.actions.ScrollUpAction"/>
      <action id="EditorScrollDown" class="com.intellij.openapi.editor.actions.ScrollDownAction"/>
      <action id="EditorScrollUpAndMove" class="com.intellij.openapi.editor.actions.ScrollUpAndMoveAction"/>
      <action id="EditorScrollDownAndMove" class="com.intellij.openapi.editor.actions.ScrollDownAndMoveAction"/>
      <action id="EditorScrollRight" class="com.intellij.openapi.editor.actions.ScrollRightAction"/>
      <action id="EditorScrollLeft" class="com.intellij.openapi.editor.actions.ScrollLeftAction"/>
      <action id="EditorScrollTop" class="com.intellij.openapi.editor.actions.ScrollToTopAction"/>
      <action id="EditorScrollBottom" class="com.intellij.openapi.editor.actions.ScrollToBottomAction"/>
      <action id="EditorMoveUpAndScroll" class="com.intellij.openapi.editor.actions.MoveUpAndScrollAction"/>
      <action id="EditorMoveDownAndScroll" class="com.intellij.openapi.editor.actions.MoveDownAndScrollAction"/>
      <action id="EditorMoveUpAndScrollWithSelection" class="com.intellij.openapi.editor.actions.MoveUpWithSelectionAndScrollAction"/>
      <action id="EditorMoveDownAndScrollWithSelection" class="com.intellij.openapi.editor.actions.MoveDownWithSelectionAndScrollAction"/>
      <action id="EditorToggleStickySelection" class="com.intellij.openapi.editor.actions.ToggleStickySelectionModeAction"/>
      <action id="EditorSwapSelectionBoundaries" class="com.intellij.openapi.editor.actions.SwapSelectionBoundariesAction"/>
      <action id="EditorLineStart" class="com.intellij.openapi.editor.actions.LineStartAction"/>
      <action id="EditorLineEnd" class="com.intellij.openapi.editor.actions.LineEndAction"/>
      <action id="EditorCutLineBackward" class="com.intellij.openapi.editor.actions.CutLineBackwardAction"/>
      <action id="EditorCutLineEnd" class="com.intellij.openapi.editor.actions.CutLineEndAction"/>
      <action id="EditorDeleteToLineEnd" class="com.intellij.openapi.editor.actions.DeleteToLineEndAction"/>
      <action id="EditorTextStart" class="com.intellij.openapi.editor.actions.TextStartAction"/>
      <action id="EditorTextEnd" class="com.intellij.openapi.editor.actions.TextEndAction"/>
      <action id="EditorLineStartWithSelection" class="com.intellij.openapi.editor.actions.LineStartWithSelectionAction"/>
      <action id="EditorLineEndWithSelection" class="com.intellij.openapi.editor.actions.LineEndWithSelectionAction"/>
      <action id="EditorTextStartWithSelection" class="com.intellij.openapi.editor.actions.TextStartWithSelectionAction"/>
      <action id="EditorTextEndWithSelection" class="com.intellij.openapi.editor.actions.TextEndWithSelectionAction"/>
      <action id="EditorNextWord" class="com.intellij.openapi.editor.actions.NextWordAction"/>
      <action id="EditorNextWordInDifferentHumpsMode" class="com.intellij.openapi.editor.actions.NextWordInDifferentHumpsModeAction"/>
      <action id="EditorNextWordWithSelection" class="com.intellij.openapi.editor.actions.NextWordWithSelectionAction"/>
      <action id="EditorNextWordInDifferentHumpsModeWithSelection"
              class="com.intellij.openapi.editor.actions.NextWordInDifferentHumpsModeWithSelectionAction"/>
      <action id="EditorPreviousWord" class="com.intellij.openapi.editor.actions.PreviousWordAction"/>
      <action id="EditorPreviousWordInDifferentHumpsMode"
              class="com.intellij.openapi.editor.actions.PreviousWordInDifferentHumpsModeAction"/>
      <action id="EditorPreviousWordWithSelection" class="com.intellij.openapi.editor.actions.PreviousWordWithSelectionAction"/>
      <action id="EditorPreviousWordInDifferentHumpsModeWithSelection"
              class="com.intellij.openapi.editor.actions.PreviousWordInDifferentHumpsModeWithSelectionAction"/>
      <action id="EditorDeleteToWordStart" class="com.intellij.openapi.editor.actions.DeleteToWordStartAction"/>
      <action id="EditorDeleteToWordStartInDifferentHumpsMode"
              class="com.intellij.openapi.editor.actions.DeleteToWordStartInDifferentHumpsModeAction"/>
      <action id="EditorDeleteToWordEnd" class="com.intellij.openapi.editor.actions.DeleteToWordEndAction"/>
      <action id="EditorDeleteToWordEndInDifferentHumpsMode"
              class="com.intellij.openapi.editor.actions.DeleteToWordEndInDifferentHumpsModeAction"/>
      <action id="EditorDeleteLine" class="com.intellij.openapi.editor.actions.DeleteLineAction"/>
      <action id="EditorKillToWordStart" class="com.intellij.openapi.editor.actions.KillToWordStartAction"/>
      <action id="EditorKillToWordEnd" class="com.intellij.openapi.editor.actions.KillToWordEndAction"/>
      <action id="EditorKillRegion" class="com.intellij.openapi.editor.actions.KillRegionAction"/>
      <action id="EditorKillRingSave" class="com.intellij.openapi.editor.actions.KillRingSaveAction"/>
      <action id="EditorDuplicate" class="com.intellij.openapi.editor.actions.DuplicateAction"/>
      <action id="EditorDuplicateLines" class="com.intellij.openapi.editor.actions.DuplicateLinesAction"/>
      <action id="EditorToggleInsertState" class="com.intellij.openapi.editor.actions.ToggleInsertStateAction"/>
      <action id="EditorToggleColumnMode" class="com.intellij.openapi.editor.actions.ToggleColumnModeAction"/>
      <action id="EditorIncreaseFontSize" class="com.intellij.openapi.editor.actions.ChangeEditorFontSizeAction$IncreaseEditorFontSize"/>
      <action id="EditorDecreaseFontSize" class="com.intellij.openapi.editor.actions.ChangeEditorFontSizeAction$DecreaseEditorFontSize"/>

      <action id="EditorScrollToCenter" class="com.intellij.openapi.editor.actions.ScrollToCenterAction"/>
      <action id="EditorToggleCase" class="com.intellij.openapi.editor.actions.ToggleCaseAction"/>
      <action id="EditorJoinLines" class="com.intellij.openapi.editor.actions.JoinLinesAction"/>
      <action id="FillParagraph" class="com.intellij.codeInsight.editorActions.fillParagraph.FillParagraphAction"/>
      <action id="EditorSelectLine" class="com.intellij.openapi.editor.actions.SelectLineAction"/>
      <action id="EditorSplitLine" class="com.intellij.openapi.editor.actions.SplitLineAction"/>
      <action id="EditorStartNewLine" class="com.intellij.openapi.editor.actions.StartNewLineAction"/>
      <action id="EditorStartNewLineBefore" class="com.intellij.openapi.editor.actions.StartNewLineBeforeAction"/>
    </group>

    <action id="ExpandAll" class="com.intellij.ide.actions.ExpandAllAction" icon="AllIcons.Actions.Expandall"/>
    <action id="CollapseAll" class="com.intellij.ide.actions.CollapseAllAction" icon="AllIcons.Actions.Collapseall"/>
    <action id="ExportToTextFile" class="com.intellij.ide.actions.ExportToTextFileAction" icon="AllIcons.Actions.Export"/>
    <action id="ExpandTreeNode" class="com.intellij.ide.actions.tree.ExpandTreeNodeAction"/>
    <action id="CollapseTreeNode" class="com.intellij.ide.actions.tree.CollapseTreeNodeAction"/>
    <action id="FullyExpandTreeNode" class="com.intellij.ide.actions.tree.FullyExpandTreeNodeAction"/>

    <action id="NextDiff" class="com.intellij.openapi.diff.actions.NextDiffAction" icon="AllIcons.Actions.MoveDown"/>
    <action id="PreviousDiff" class="com.intellij.openapi.diff.actions.PreviousDiffAction" icon="AllIcons.Actions.MoveUp"/>

    <action id="Refresh" class="com.intellij.ide.actions.RefreshAction"/>

    <action id="CompareTwoFiles" class="com.intellij.openapi.diff.actions.CompareFiles"/>
    <action id="CompareFileWithEditor" class="com.intellij.openapi.diff.actions.CompareFileWithEditor"/>
    <action id="CompareDirs" class="com.intellij.openapi.diff.actions.CompareDirectoriesAction" text="Compare Directories"/>
    <action id="CompareJars" class="com.intellij.openapi.diff.actions.CompareJarsAction" text="Compare Jars" use-shortcut-of="CompareDirs"/>

    <action id="ScrollTreeToCenter" class="com.intellij.ide.actions.ScrollTreeToCenterAction" use-shortcut-of="EditorScrollToCenter"/>

    <action id="PinToolwindowTab" class="com.intellij.ui.content.tabs.PinToolwindowTabAction"/>

    <action id="CloseEditor" class="com.intellij.ide.actions.CloseEditorAction"/>

    <action id="WelcomeScreen.ReopenRecent" class="com.intellij.openapi.wm.impl.welcomeScreen.RecentProjectsAction"/>

    <group id="MainMenu">
      <group id="FileMenu" popup="true">
        <group id="FileOpenGroup">
          <action id="OpenFile" class="com.intellij.ide.actions.OpenFileAction" icon="AllIcons.Actions.Menu_open"/>
          <group id="$LRU" class="com.intellij.ide.actions.RecentProjectsGroup" popup="true"/>
          <action id="CloseProject" class="com.intellij.ide.actions.CloseProjectAction"/>
        </group>
        <separator/>
        <group id="FileMainSettingsGroup">
          <action id="ShowSettings" class="com.intellij.ide.actions.ShowSettingsAction"/>
          <action id="ShowProjectStructureSettings" class="com.intellij.ide.actions.ShowStructureSettingsAction"
                  icon="AllIcons.General.ProjectStructure"/>
          <group id="FileOtherSettingsGroup" class="com.intellij.ide.actions.SmartPopupActionGroup">
            <action id="TemplateProjectProperties" class="com.intellij.ide.actions.TemplateProjectPropertiesAction"/>
            <action id="TemplateProjectStructure" class="com.intellij.ide.actions.TemplateProjectStructureAction"/>
            <group id="FileSettingsGroup"/>
          </group>
          <separator/>
          <group id="ExportImportGroup">
            <action id="ImportSettings" class="com.intellij.ide.actions.ImportSettingsAction"/>
            <action id="ExportSettings" class="com.intellij.ide.actions.ExportSettingsAction"/>
          </group>
        </group>
        <separator/>
        <action id="SaveAll" class="com.intellij.ide.actions.SaveAllAction" icon="AllIcons.Actions.Menu_saveall"/>
        <action id="Synchronize" class="com.intellij.ide.actions.SynchronizeAction" icon="AllIcons.Actions.Refresh"/>
        <action id="InvalidateCaches" class="com.intellij.ide.actions.InvalidateCachesAction"/>

        <action id="ChangeFileEncodingAction" class="com.intellij.openapi.vfs.encoding.ChangeFileEncodingAction"/>

        <group id="ChangeLineSeparators" text="Line Separators" popup="true">
          <action id="ConvertToWindowsLineSeparators" class="com.intellij.codeStyle.ConvertToWindowsLineSeparatorsAction"/>
          <action id="ConvertToUnixLineSeparators" class="com.intellij.codeStyle.ConvertToUnixLineSeparatorsAction"/>
          <action id="ConvertToMacLineSeparators" class="com.intellij.codeStyle.ConvertToMacLineSeparatorsAction"/>
        </group>

        <action id="ToggleReadOnlyAttribute" class="com.intellij.ide.actions.ToggleReadOnlyAttributeAction"/>
        <separator/>
        <action id="Exit" class="com.intellij.ide.actions.ExitAction"/>
      </group>

      <!-- Edit -->
      <group id="EditMenu" popup="true">
        <action id="$Undo" class="com.intellij.ide.actions.UndoAction" icon="AllIcons.Actions.Undo" text="Undo"/>
        <action id="$Redo" class="com.intellij.ide.actions.RedoAction" icon="AllIcons.Actions.Redo" text="Redo"/>
        <separator/>
        <group id="CutCopyPasteGroup">
          <action id="$Cut" class="com.intellij.ide.actions.CutAction" icon="AllIcons.Actions.Menu_cut"/>
          <action id="$Copy" class="com.intellij.ide.actions.CopyAction" icon="AllIcons.Actions.Copy"/>
          <action id="CopyPaths" class="com.intellij.ide.actions.CopyPathsAction"/>
          <action id="$Paste" class="com.intellij.ide.actions.PasteAction" icon="AllIcons.Actions.Menu_paste"/>
          <action id="PasteMultiple" class="com.intellij.openapi.editor.actions.MultiplePasteAction"/>
          <reference ref="EditorPasteSimple"/>
        </group>
        <group id="EditCreateDeleteGroup">
          <action id="$Delete" class="com.intellij.ide.actions.DeleteAction"/>
        </group>
        <separator/>
        <group id="FindMenuGroup" popup="true">
          <action id="Find" class="com.intellij.openapi.editor.actions.IncrementalFindAction" icon="AllIcons.Actions.Menu_find"/>
          <action id="Replace" class="com.intellij.openapi.editor.actions.ReplaceAction" icon="AllIcons.Actions.Menu_replace"/>
          <action id="FindNext" class="com.intellij.ide.actions.SearchAgainAction"/>
          <action id="FindPrevious" class="com.intellij.ide.actions.SearchBackAction"/>
          <action id="FindWordAtCaret" class="com.intellij.openapi.editor.actions.FindWordAtCaretAction"/>
          <separator/>
          <action id="FindInPath" class="com.intellij.find.actions.FindInPathAction"/>
          <action id="ReplaceInPath" class="com.intellij.find.actions.ReplaceInPathAction"/>
          <separator/>
          <action id="FindUsages" class="com.intellij.find.actions.FindUsagesAction"/>
          <action id="ShowSettingsAndFindUsages" class="com.intellij.find.actions.FindUsagesAction$ShowSettingsAndFindUsages"/>
          <action id="ShowUsages" class="com.intellij.find.actions.ShowUsagesAction"/>
          <action id="FindUsagesInFile" class="com.intellij.find.actions.FindUsagesInFileAction"/>
          <action id="HighlightUsagesInFile" class="com.intellij.codeInsight.highlighting.actions.HighlightUsagesAction"/>
          <group id="ShowRecentFindUsagesGroup" class="com.intellij.find.impl.ShowRecentFindUsagesGroup" popup="true"/>
        </group>
        <group id="Macros" popup="true">
          <group id="StandardMacroActions">
            <action id="PlaybackLastMacro" class="com.intellij.ide.actionMacro.actions.PlaybackLastMacroAction"/>
            <action id="StartStopMacroRecording" class="com.intellij.ide.actionMacro.actions.StartStopMacroRecordingAction"/>
            <action id="EditMacros" class="com.intellij.ide.actionMacro.actions.EditMacrosAction"/>
            <action id="PlaySavedMacrosAction" class="com.intellij.ide.actionMacro.actions.PlaySavedMacros"/>
          </group>
          <separator/>
          <group id="MacrosGroup" class="com.intellij.ide.actionMacro.actions.MacrosGroup"/>
        </group>
        <reference ref="EditorToggleColumnMode"/>
        <group id="EditSelectGroup">
          <action id="$SelectAll" class="com.intellij.ide.actions.SelectAllAction"/>
        </group>
        <separator/>
        <group id="EditSmartGroup">
          <reference ref="EditorJoinLines"/>
          <reference ref="FillParagraph"/>
          <reference ref="EditorDuplicate"/>
          <reference ref="EditorIndentSelection"/>
          <reference ref="EditorUnindentSelection"/>
          <reference ref="EditorToggleCase"/>
          <group id="ConvertIndentsGroup" popup="true">
            <action id="ConvertIndentsToSpaces" class="com.intellij.openapi.editor.actions.ConvertIndentsToSpacesAction"/>
            <action id="ConvertIndentsToTabs" class="com.intellij.openapi.editor.actions.ConvertIndentsToTabsAction"/>
          </group>
        </group>
        <reference ref="TemplateParametersNavigation"/>
      </group>

      <!-- View -->
      <group id="ViewMenu" popup="true">
        <group id="ToolWindowsGroup" class="com.intellij.ide.actions.ToolWindowsGroup" popup="true"/>

        <action id="EditSource" class="com.intellij.ide.actions.EditSourceAction"/>
        <action id="ViewSource" class="com.intellij.ide.actions.ViewSourceAction"/>
        <separator/>
        <group id="ViewRecentActions">
          <action id="RecentFiles" class="com.intellij.ide.actions.ShowRecentFilesAction"/>
          <action id="RecentChangedFiles" class="com.intellij.ide.actions.ShowRecentlyEditedFilesAction"/>
        </group>
        <separator/>
        <group id="CompareActions">
          <group id="PairFileActions">
            <reference ref="CompareTwoFiles"/>
            <reference ref="CompareFileWithEditor"/>
          </group>
          <action id="CompareClipboardWithSelection" class="com.intellij.openapi.diff.actions.CompareClipboardWithSelection"/>
        </group>
        <separator/>
        <action id="QuickChangeScheme" class="com.intellij.ide.actions.QuickChangeSchemesAction"/>
        <group id="UIToggleActions">
          <separator/>
          <action id="ViewToolBar" class="com.intellij.ide.actions.ViewToolbarAction"/>
          <action id="ViewToolButtons" class="com.intellij.ide.actions.ViewToolWindowButtonsAction"/>
          <action id="ViewStatusBar" class="com.intellij.ide.actions.ViewStatusBarAction"/>
        </group>

        <group id="EditorToggleActions" popup="true">
          <action id="EditorToggleShowWhitespaces" class="com.intellij.openapi.editor.actions.ToggleShowWhitespacesAction"/>
          <action id="EditorToggleShowLineNumbers" class="com.intellij.openapi.editor.actions.ToggleShowLineNumbersAction"/>
          <action id="EditorToggleShowIndentLines" class="com.intellij.openapi.editor.actions.ToggleShowIndentLinesAction"/>
          <action id="EditorToggleUseSoftWraps" class="com.intellij.openapi.editor.actions.ToggleUseSoftWrapsMenuAction"
                  icon="AllIcons.Actions.ToggleSoftWrap"/>
        </group>

        <!-- Mac OS Lion: In native apps toggle full screen mode is the last action in "View" menu -->
        <group id="ToggleFullScreenGroup">
          <separator/>
          <action id="TogglePresentationMode" class="com.intellij.ide.actions.TogglePresentationModeAction"/>
          <action id="ToggleFullScreen" class="com.intellij.ide.actions.ToggleFullScreenAction"/>
        </group>
      </group>

      <!-- Go to -->
      <group id="GoToMenu" popup="true">
        <action id="GotoLine" class="com.intellij.ide.actions.GotoLineAction"/>
        <separator/>
        <action id="Back" class="com.intellij.ide.actions.BackAction" icon="AllIcons.Actions.Back"/>
        <action id="Forward" class="com.intellij.ide.actions.ForwardAction" icon="AllIcons.Actions.Forward"/>
        <action id="JumpToLastChange" class="com.intellij.ide.actions.JumpToLastEditAction"/>
        <separator/>
        <action id="PreviousOccurence" class="com.intellij.ide.actions.PreviousOccurenceAction" icon="AllIcons.Actions.PreviousOccurence"/>
        <action id="NextOccurence" class="com.intellij.ide.actions.NextOccurenceAction" icon="AllIcons.Actions.NextOccurence"/>
        <separator/>
      </group>

      <!-- Tools -->
      <group id="ToolsMenu" configurable="true" popup="true">
        <action id="PsiViewer" class="com.intellij.internal.psiView.PsiViewerAction"/>
        <action id="PsiViewerForContext" class="com.intellij.internal.psiView.PsiViewerForContextAction"/>
        <separator/>
        <action id="CreateLauncherScript" class="com.intellij.ide.actions.CreateLauncherScriptAction"/>
        <action id="CreateDesktopEntry" class="com.intellij.ide.actions.CreateDesktopEntryAction"/>
        <separator/>
      </group>

      <group id="WindowMenu" popup="true">
        <action id="MinimizeCurrentWindow" class="com.intellij.ide.actions.MinimizeCurrentWindowAction"/>
        <action id="StoreDefaultLayout" class="com.intellij.ide.actions.StoreDefaultLayoutAction"/>
        <action id="RestoreDefaultLayout" class="com.intellij.ide.actions.RestoreDefaultLayoutAction"/>
        <separator/>
        <group id="ActiveToolwindowGroup" popup="true">
          <action id="HideActiveWindow" class="com.intellij.ide.actions.HideToolWindowAction"/>
          <action id="HideSideWindows" class="com.intellij.ide.actions.HideSideWindowsAction"/>
          <action id="HideAllWindows" class="com.intellij.ide.actions.HideAllToolWindowsAction"/>
          <action id="CloseActiveTab" class="com.intellij.ide.actions.CloseActiveTabAction"/>
          <action id="JumpToLastWindow" class="com.intellij.ide.actions.JumpToLastWindowAction"/>
          <separator/>
          <action id="TogglePinnedMode" class="com.intellij.ide.actions.TogglePinnedModeAction"/>
          <action id="ToggleDockMode" class="com.intellij.ide.actions.ToggleDockModeAction"/>
          <action id="ToggleFloatingMode" class="com.intellij.ide.actions.ToggleFloatingModeAction"/>
          <action id="ToggleSideMode" class="com.intellij.ide.actions.ToggleSideModeAction"/>
          <action id="ToggleContentUiTypeMode" class="com.intellij.ide.actions.ToggleContentUiTypeAction"/>
          <action id="ShowContent" class="com.intellij.ide.actions.ShowContentAction"/>
          <group id="ResizeToolWindowGroup" popup="true">
            <action id="ResizeToolWindowLeft" class="com.intellij.ide.actions.ResizeToolWindowAction$Left"/>
            <action id="ResizeToolWindowRight" class="com.intellij.ide.actions.ResizeToolWindowAction$Right"/>
            <action id="ResizeToolWindowUp" class="com.intellij.ide.actions.ResizeToolWindowAction$Up"/>
            <action id="ResizeToolWindowDown" class="com.intellij.ide.actions.ResizeToolWindowAction$Down"/>
          </group>
        </group>

        <group id="EditorTabsGroup" popup="true">
          <action id="NextTab" class="com.intellij.ide.actions.NextTabAction"/>
          <action id="PreviousTab" class="com.intellij.ide.actions.PreviousTabAction"/>
          <action id="PinActiveTab" class="com.intellij.ide.actions.PinActiveTabAction"/>
          <action id="TabList" class="com.intellij.ide.actions.TabListAction"/>
          <separator/>
          <group id="CloseEditorsGroup">
            <action id="CloseContent" class="com.intellij.ide.actions.CloseAction"/>
            <action id="CloseAllEditorsButActive" class="com.intellij.ide.actions.CloseAllEditorsButActiveAction"/>
            <action id="CloseAllEditors" class="com.intellij.ide.actions.CloseAllEditorsAction"/>
            <action id="CloseAllUnpinnedEditors" class="com.intellij.ide.actions.CloseAllUnpinnedEditorsAction"/>
          </group>
          <separator/>
          <action id="ReopenClosedTab" class="com.intellij.openapi.fileEditor.impl.ReopenClosedTabAction"/>
          <action id="SplitVertically" class="com.intellij.ide.actions.SplitVerticallyAction" icon="AllIcons.Actions.SplitVertically"/>
          <action id="SplitHorizontally" class="com.intellij.ide.actions.SplitHorizontallyAction"
                  icon="AllIcons.Actions.SplitHorizontally"/>
          <action id="ChangeSplitOrientation" class="com.intellij.ide.actions.ChangeSplitterOrientationAction"/>
          <action id="Unsplit" class="com.intellij.ide.actions.UnsplitAction"/>
          <action id="UnsplitAll" class="com.intellij.ide.actions.UnsplitAllAction"/>
          <action id="NextSplitter" class="com.intellij.ide.actions.NextSplitAction"/>
          <action id="PrevSplitter" class="com.intellij.ide.actions.PrevSplitAction"/>
          <group id="TabsPlacementGroup" popup="true" text="Tabs Placement">
            <action id="TabsPlacementTop" text="Top" class="com.intellij.ide.actions.TabsPlacementAction$Top"/>
            <action id="TabsPlacementBottom" text="Bottom" class="com.intellij.ide.actions.TabsPlacementAction$Bottom"/>
            <action id="TabsPlacementLeft" text="Left" class="com.intellij.ide.actions.TabsPlacementAction$Left"/>
            <action id="TabsPlacementRight" text="Right" class="com.intellij.ide.actions.TabsPlacementAction$Right"/>
          </group>
          <action id="TabsAlphabeticalMode" class="com.intellij.ide.actions.TabsAlphabeticalModeSwitcher" text="Alphabetical Mode"/>
        </group>

        <group id="BackgroundTasks" popup="true">
          <action id="ShowProcessWindow" class="com.intellij.openapi.wm.impl.status.ShowProcessWindowAction"/>
          <action id="AutoShowProcessWindow" class="com.intellij.openapi.wm.impl.status.AutoShowProcessPopupAction"/>
        </group>

        <separator/>
        <group id="OpenProjectWindows" class="com.intellij.openapi.wm.impl.ProjectWindowActionGroup">
          <action id="NextProjectWindow" class="com.intellij.openapi.wm.impl.NextProjectWindow"/>
          <action id="PreviousProjectWindow" class="com.intellij.openapi.wm.impl.PreviousProjectWindow"/>
          <separator/>
        </group>
      </group>

      <!-- Help -->
      <group id="HelpMenu" popup="true">
        <action id="GotoAction" class="com.intellij.ide.actions.GotoActionAction"/>
        <separator/>
        <action id="HelpTopics" class="com.intellij.ide.actions.HelpTopicsAction" icon="AllIcons.Actions.Help"/>
        <action id="ShowTips" class="com.intellij.ide.actions.ShowTipsAction"/>
        <action id="ProductivityGude" class="com.intellij.featureStatistics.actions.ShowFeatureUsageStatisticsAction"/>
        <separator/>
        <action id="TechnicalSupport" class="com.intellij.ide.actions.TechnicalSupportAction"/>
        <action id="SendFeedback" class="com.intellij.ide.actions.SendFeedbackAction"/>
        <action id="ShowLog" class="com.intellij.ide.actions.ShowLogAction"/>
        <separator/>
        <action id="OnlineDocAction" class="com.intellij.ide.actions.OnlineDocAction"/>
        <action id="Help.KeymapReference" class="com.intellij.ide.actions.RefCardAction" icon="AllIcons.General.DefaultKeymap"/>
        <action id="Help.JetBrainsTV" class="com.intellij.openapi.wm.impl.welcomeScreen.JetBrainsTvAction"/>
        <separator/>
        <action id="CheckForUpdate" class="com.intellij.openapi.updateSettings.impl.CheckForUpdateAction"/>
        <action id="About" class="com.intellij.ide.actions.AboutAction"/>
      </group>

      <group id="OtherMenu" class="com.intellij.ide.actions.NonEmptyActionGroup"/>
    </group>

    <group id="MainToolBar" configurable="true">
      <reference ref="OpenFile"/>
      <reference ref="SaveAll"/>
      <reference ref="Synchronize"/>
      <separator/>
      <reference ref="$Undo"/>
      <reference ref="$Redo"/>
      <separator/>
      <reference ref="$Cut"/>
      <reference ref="$Copy"/>
      <reference ref="$Paste"/>
      <separator/>
      <reference ref="Back"/>
      <reference ref="Forward"/>
      <separator/>
      <group id="MainToolBarSettings">
        <reference ref="ShowSettings"/>
      </group>
      <separator/>
      <reference ref="HelpTopics"/>
    </group>

    <group id="EditorPopupMenu" configurable="true">
      <reference ref="$Cut"/>
      <reference ref="$Copy"/>
      <reference ref="$Paste"/>
      <reference ref="PasteMultiple"/>
      <reference ref="EditorPasteSimple"/>
      <reference ref="EditorToggleColumnMode"/>
      <action id="$SearchWeb" class="com.intellij.ide.actions.SearchWebAction"/>
      <separator/>
      <reference ref="CompareClipboardWithSelection"/>
      <reference ref="ChangeFileEncodingAction"/>
    </group>

    <group id="ConsoleEditorPopupMenu">
      <reference ref="CutCopyPasteGroup"/>
      <separator/>
      <reference ref="CompareClipboardWithSelection"/>
      <reference ref="$SearchWeb"/>
    </group>

    <group id="EditorTabPopupMenu">
      <reference ref="CloseEditorsGroup"/>
      <separator/>
      <reference ref="CopyPaths"/>
      <separator/>
      <reference ref="SplitVertically"/>
      <reference ref="SplitHorizontally"/>
      <action id="MoveEditorToOppositeTabGroup" class="com.intellij.openapi.fileEditor.impl.MoveEditorToOppositeTabGroupAction"/>
      <reference ref="ChangeSplitOrientation"/>
      <reference ref="PinActiveTab"/>
      <reference ref="TabsPlacementGroup"/>
      <reference ref="TabsAlphabeticalMode"/>
      <separator/>
      <reference ref="NextTab"/>
      <reference ref="PreviousTab"/>
      <reference ref="ReopenClosedTab"/>
      <separator/>
      <reference ref="Unsplit"/>
      <reference ref="UnsplitAll"/>
    </group>

    <group id="WelcomeScreen.QuickStart">
    </group>

    <group id="WelcomeScreen.Documentation">
      <action id="WelcomeScreen.ReadHelp" class="com.intellij.ide.actions.HelpTopicsAction"
              icon="AllIcons.General.ReadHelp"/>
      <action id="WelcomeScreen.ShowTips" class="com.intellij.ide.actions.ShowTipsAction"
              icon="AllIcons.General.TipsOfTheDay"/>
      <reference ref="Help.KeymapReference"/>
    </group>

    <group id="WelcomeScreen.Configure">
      <action id="WelcomeScreen.Settings" class="com.intellij.ide.actions.ShowSettingsAction" icon="AllIcons.General.Configure"/>
      <action id="WelcomeScreen.Plugins" class="com.intellij.ide.actions.ShowPluginManagerAction" icon="AllIcons.General.PluginManager"/>

      <action id="WelcomeScreen.Configure.Import" class="com.intellij.ide.actions.ImportSettingsAction"
              icon="AllIcons.General.ImportSettings"/>
      <action id="WelcomeScreen.Configure.Export" class="com.intellij.ide.actions.ExportSettingsAction"
              icon="AllIcons.General.ExportSettings"/>

      <action id="WelcomeScreen.Configure.DesktopEntry" class="com.intellij.ide.actions.CreateDesktopEntryAction"
              icon="AllIcons.Welcome.CreateDesktopEntry"/>
    </group>

    <group id="FileChooser">
      <action id="FileChooser.TogglePathShowing" class="com.intellij.openapi.fileChooser.actions.TogglePathShowingAction"/>
    </group>

    <action id="Diff.FocusOppositePane" class="com.intellij.openapi.diff.actions.FocusOppositePaneAction"
            use-shortcut-of="NextSplitter"/>

    <group id="EditorGutterPopupMenu">
      <reference ref="EditorToggleShowLineNumbers"/>
      <reference ref="EditorToggleShowIndentLines"/>
      <reference ref="EditorToggleUseSoftWraps"/>
    </group>

    <group id="FileChooserToolbar">
      <action id="FileChooser.GotoHome" class="com.intellij.openapi.fileChooser.actions.GotoHomeAction"
              icon="AllIcons.Nodes.HomeFolder"/>
      <action id="FileChooser.GotoProject" class="com.intellij.openapi.fileChooser.actions.GotoProjectDirectory"
              icon="AllIcons.Icon16"/>
      <separator/>
      <action id="FileChooser.NewFile" class="com.intellij.openapi.fileChooser.actions.NewFileAction"
              icon="AllIcons.Actions.New"/>
      <action id="FileChooser.NewFolder" class="com.intellij.openapi.fileChooser.actions.NewFolderAction"
              icon="AllIcons.Actions.NewFolder"/>
      <action id="FileChooser.Delete" class="com.intellij.openapi.fileChooser.actions.FileDeleteAction"
              icon="AllIcons.Actions.Delete"/>
      <separator/>
      <action id="FileChooser.Refresh" class="com.intellij.openapi.fileChooser.actions.RefreshFileChooserAction"
              icon="AllIcons.Actions.Refresh"/>
      <separator/>
      <action id="FileChooser.ShowHiddens" class="com.intellij.openapi.fileChooser.actions.ShowHiddensAction"
              icon="AllIcons.Actions.ShowHiddens"/>
    </group>

    <group id="DiffPanel.Toolbar">
      <reference ref="$Copy"/>
      <reference ref="PreviousDiff"/>
      <reference ref="NextDiff"/>
      <separator/>
      <action id="Diff.IgnoreWhitespace" class="com.intellij.openapi.diff.actions.IgnoreWhiteSpacesAction" text=""/>
    </group>

    <group id="ChangeScheme">
      <action id="ChangeColorScheme" class="com.intellij.ide.actions.QuickChangeColorSchemeAction"/>
      <action id="ChangeKeymap" class="com.intellij.ide.actions.QuickChangeKeymapAction"/>
      <action id="ChangeLaf" class="com.intellij.ide.actions.QuickChangeLookAndFeel"/>
    </group>

    <action id="MaintenanceAction" class="com.intellij.ide.actions.MaintenanceAction"/>

    <group id="MaintenanceGroup">
      <action id="UiDebugger" class="com.intellij.ui.debugger.ShowUiDebuggerAction"/>
      <action id="ShowRegistry" class="com.intellij.openapi.util.registry.ShowRegistryAction"/>
    </group>

    <action id="Console.Execute" class="com.intellij.openapi.actionSystem.EmptyAction"/>
    <group id="Console.HistoryActions">
      <action id="Console.History.Previous" class="com.intellij.openapi.actionSystem.EmptyAction"/>
      <action id="Console.History.Next" class="com.intellij.openapi.actionSystem.EmptyAction"/>
      <action id="Console.History.Browse" class="com.intellij.openapi.actionSystem.EmptyAction" icon="AllIcons.General.MessageHistory"/>
      <action id="Console.History.BrowseTW" class="com.intellij.openapi.actionSystem.EmptyAction" use-shortcut-of="RecentFiles"
              icon="AllIcons.General.MessageHistory"/>
    </group>

    <group id="Internal" text="Internal Actions" internal="true" popup="true">
      <group id="Internal.Errors" popup="true" text="Exceptions">
        <action id="DropAnError" internal="true" class="com.intellij.diagnostic.DropAnErrorAction"/>
        <action id="DropAnErrorWithAttachments" internal="true" class="com.intellij.diagnostic.DropAnErrorWithAttachmentsAction"/>
        <action id="DropAnOutOfMemoryError" internal="true" class="com.intellij.diagnostic.DropAnOutOfMemoryErrorAction"/>
        <action id="DropAnOutOfPermGenMemoryError" internal="true" class="com.intellij.diagnostic.DropAnOutOfPermGenMemoryErrorAction"/>
      </group>
      <separator/>
      <action internal="true" id="ReloadProjectAction" class="com.intellij.internal.ReloadProjectAction"/>
      <action internal="true" id="RestartInfo" class="com.intellij.internal.RestartInfoAction" text="Restart Info"/>
      <action id="DumbMode" internal="true" class="com.intellij.internal.ToggleDumbModeAction" text="Dumb mode"/>
      <action id="LaggingMode" internal="true" class="com.intellij.internal.ToggleLaggingModeAction" text="Lagging mode"/>
      <separator/>
      <group id="Internal.UI" popup="true" text="UI">
        <action id="NotificationTestAction" internal="true" class="com.intellij.notification.impl.actions.NotificationTestAction"
                text="Add Test Notification"/>
        <action id="TestMessageBoxAction" internal="true" class="com.intellij.diagnostic.TestMessageBoxAction" text="Show Test Dialog"/>
        <separator/>
        <action id="FocusDebugger" internal="true" class="com.intellij.internal.focus.FocusDebuggerAction" text="Start Focus Debugger"/>
        <action id="FocusTracer" internal="true" class="com.intellij.internal.focus.FocusTracesAction" text="Start Focus Trace">
          <keyboard-shortcut first-keystroke="control shift F11" keymap="$default"/>
        </action>

        <action id="UiInspector" internal="true" class="com.intellij.internal.inspector.UiInspectorAction" text="UI Inspector"/>
        <action id="ShowSplash" internal="true" class="com.intellij.ui.ShowSplashAction" text="Show Splash"/>
        <action id="ValidationTest" internal="true" class="com.intellij.internal.validation.TestDialogWithValidationAction"
                text="Validation Dialog Test"/>
        <action id="MacMessagesTest" internal="true" class="com.intellij.internal.validation.TestMacMessagesAction"
                text="Test Mac Messages"/>
        <action id="TreeExpandAll" internal="true" class="com.intellij.internal.tree.ExpandAll" text="Expand Tree"/>
        <action id="UIDefaults" internal="true" class="com.intellij.ui.ShowUIDefaultsAction" text="LaF Defaults"/>
        <separator/>
        <action id="AddTestProcessAction" internal="true" class="com.intellij.openapi.wm.impl.status.AddTestProcessAction"
                text="Add Test Process"/>
        <action id="AddTestProcessActionIndefinte" internal="true"
                class="com.intellij.openapi.wm.impl.status.AddTestProcessActionIndefinite" text="Add Test Process Indefinite"/>
        <separator/>
        <action id="TestGestureAction" class="com.intellij.openapi.keymap.impl.ui.TestGestureAction" text="Test Gesture Action"/>
        <action id="TestDndAction" class="com.intellij.internal.validation.TestDnd" text="Test Dnd"/>
      </group>
      <group id="TopAnomalies" internal="true" class="com.intellij.internal.anomalies.TopAnomaliesAction" text="Top Anomalies"
             popup="true"/>
      <action id="ImageDuplicates" internal="true" class="com.intellij.internal.ShowImageDuplicatesAction" text="Find Image Duplicates"/>
      <separator/>
      <reference ref="MaintenanceGroup"/>

      <action internal="true" id="SendStatistics" class="com.intellij.internal.statistic.tmp.SendStatisticsAction" text="Send statistics"/>
      <add-to-group group-id="ToolsMenu" anchor="last"/>
    </group>

    <group id="EditorContextBarMenu">
    </group>

    <group id="DirDiffMenu">
      <action id="DirDiffMenu.SetCopyToRight" class="com.intellij.openapi.diff.impl.dir.actions.popup.SetCopyToRight"
              text="Set Copy to Right" icon="AllIcons.Vcs.Arrow_right"/>
      <action id="DirDiffMenu.SetCopyToLeft" class="com.intellij.openapi.diff.impl.dir.actions.popup.SetCopyToLeft" text="Set Copy to Left"
              icon="AllIcons.Vcs.Arrow_left"/>
      <action id="DirDiffMenu.SetDelete" class="com.intellij.openapi.diff.impl.dir.actions.popup.SetDelete" text="Set Delete"
              icon="AllIcons.Vcs.Remove"/>
      <action id="DirDiffMenu.SetNoOperation" class="com.intellij.openapi.diff.impl.dir.actions.popup.SetNoOperation"
              text="Set Do Nothing"/>
      <separator/>
      <action id="DirDiffMenu.SetDefault" class="com.intellij.openapi.diff.impl.dir.actions.popup.SetDefault" text="Set Default"/>
    </group>

    <action id="Rerun" class="com.intellij.execution.runners.FakeRerunAction" text="Rerun"/>

    <action id="IncrementWindowWidth" class="com.intellij.ide.actions.WindowAction$IncrementWidth" use-shortcut-of="ResizeToolWindowRight"/>
    <action id="DecrementWindowWidth" class="com.intellij.ide.actions.WindowAction$DecrementWidth" use-shortcut-of="ResizeToolWindowLeft"/>
    <action id="IncrementWindowHeight" class="com.intellij.ide.actions.WindowAction$IncrementHeight"
            use-shortcut-of="ResizeToolWindowDown"/>
    <action id="DecrementWindowHeight" class="com.intellij.ide.actions.WindowAction$DecrementHeight" use-shortcut-of="ResizeToolWindowUp"/>

    <action id="ExportTestResults" class="com.intellij.execution.testframework.export.ExportTestResultsAction"
            icon="AllIcons.Actions.Export"/>

    <action id="SaveDocument" class="com.intellij.ide.actions.SaveDocumentAction"/>
    =

    <action id="Vcs.ShowTabbedFileHistory" class="com.intellij.openapi.vcs.actions.TabbedShowHistoryAction"
            icon="AllIcons.Vcs.History"/>

    <action id="CheckinProject" class="com.intellij.openapi.vcs.actions.CommonCheckinProjectAction" icon="AllIcons.Actions.Commit">
      <keyboard-shortcut first-keystroke="control K" keymap="$default"/>
    </action>
    <action id="CheckinFiles" class="com.intellij.openapi.vcs.actions.CommonCheckinFilesAction"/>
    <action id="UpdateFiles" class="com.intellij.openapi.vcs.update.CommonUpdateFileOrDirectoryAction"/>
    <action id="CheckStatusForFiles" class="com.intellij.openapi.vcs.update.CommonStatusFileOrDirectoryAction"/>
    <action id="IntegrateFiles" class="com.intellij.openapi.vcs.update.CommonIntegrateFileOrDirectoryAction"/>
    <action id="Annotate" class="com.intellij.openapi.vcs.actions.AnnotateToggleAction"/>
    <action id="Show.Current.Revision" class="com.intellij.openapi.vcs.actions.ShowBaseRevisionAction" text="Show Current Revision"/>
    <action id="Compare.SameVersion" class="com.intellij.openapi.vcs.actions.CompareWithTheSameVersionAction" icon="AllIcons.Actions.Diff"/>
    <action id="Compare.LastVersion" class="com.intellij.openapi.vcs.actions.CompareWithLastVersion"/>
    <action id="Compare.Selected" class="com.intellij.openapi.vcs.actions.CompareWithSelectedRevisionAction" popup="true"/>
    <action id="Compare.Specified" class="com.intellij.openapi.vcs.actions.SelectAndCompareWithSelectedRevisionAction"
            text="Com_pare with Specified Revision..." popup="true"/>
    <action id="Vcs.ShowHistoryForBlock" class="com.intellij.openapi.vcs.actions.SelectedBlockHistoryAction"/>

    <group class="com.intellij.openapi.vcs.actions.VcsActionGroup" id="VcsGroup"/>

    <group class="com.intellij.openapi.vcs.actions.VcsGroupsWrapper" id="VcsFileGroupPopup" popup="true"/>

    <group id="VersionControlsGroup">
      <reference ref="VcsFileGroupPopup"/>
    </group>

    <group id="GoToChangeMarkerGroup">
      <separator/>
      <action id="VcsShowNextChangeMarker" class="com.intellij.openapi.vcs.actions.ShowNextChangeMarkerAction"
              icon="AllIcons.Actions.NextOccurence"/>
      <action id="VcsShowPrevChangeMarker" class="com.intellij.openapi.vcs.actions.ShowPrevChangeMarkerAction"
              icon="AllIcons.Actions.PreviousOccurence"/>

      <add-to-group group-id="GoToMenu" anchor="last"/>
    </group>

    <!-- Main menu | Version Control -->
    <group id="VcsGroups" popup="true">
      <action id="Start.Use.Vcs" class="com.intellij.ide.actions.StartUseVcsAction"/>
      <separator/>
      <group class="com.intellij.openapi.vcs.actions.VcsActionGroup" id="VcsGlobalGroup">

        <action id="Vcs.QuickListPopupAction"
                class="com.intellij.openapi.vcs.actions.VcsQuickListPopupAction"
                text="VCS Operations Popup..." description="Context aware popup with list of commonly used VCS actions"/>
        <action id="Vcs.ChangesView" class="com.intellij.openapi.vcs.changes.ShowChangesViewAction"/>
        <reference ref="CheckinProject"/>
        <action id="Vcs.UpdateProject" class="com.intellij.openapi.vcs.update.CommonUpdateProjectAction" icon="AllIcons.Actions.CheckOut">
          <keyboard-shortcut first-keystroke="control T" keymap="$default"/>
        </action>
        <action id="Vcs.IntegrateProject" class="com.intellij.openapi.vcs.update.CommonIntegrateProjectAction"/>
        <action id="Vcs.RefreshStatuses" class="com.intellij.openapi.vcs.actions.RefreshStatuses"/>
        <separator/>
        <group id="Vcs.Specific" class="com.intellij.ide.actions.NonEmptyActionGroup"/>
        <separator/>
        <action id="ChangesView.CreatePatch" class="com.intellij.openapi.vcs.changes.actions.CreatePatchAction"/>
        <action id="ChangesView.ApplyPatch" class="com.intellij.openapi.vcs.changes.patch.ApplyPatchAction"/>
        <action id="ChangesView.Shelve" class="com.intellij.openapi.vcs.changes.shelf.ShelveChangesAction"/>
      </group>

      <separator/>
      <group id="Vcs.Checkout" class="com.intellij.openapi.vcs.checkout.CheckoutActionGroup" popup="true"/>
      <group id="Vcs.Import" class="com.intellij.ide.actions.NonEmptyActionGroup" popup="true"/>
      <group id="Vcs.Browse" class="com.intellij.ide.actions.NonEmptyActionGroup" popup="true"/>

      <add-to-group group-id="MainMenu" anchor="after" relative-to-action="ToolsMenu"/>
    </group>

    <action id="ChangesView.Revert" class="com.intellij.openapi.vcs.changes.actions.RollbackAction"
            icon="AllIcons.Actions.Rollback" text="_Revert..." description="Revert selected changes"/>

    <group id="ChangesViewToolbar">
      <action id="ChangesView.Refresh" class="com.intellij.openapi.vcs.changes.actions.RefreshAction"
              icon="AllIcons.Actions.Refresh"/>
      <action id="ChangesView.Commit" class="com.intellij.openapi.vcs.actions.CommonCheckinProjectAction"
              icon="AllIcons.Actions.Commit"/>
      <action id="ChangesView.Rollback" class="com.intellij.openapi.vcs.changes.actions.RollbackAction"
              icon="AllIcons.Actions.Rollback"/>
      <action id="ChangesView.NewChangeList" class="com.intellij.openapi.vcs.changes.actions.AddChangeListAction"
              icon="AllIcons.General.Add"/>
      <action id="ChangesView.RemoveChangeList" class="com.intellij.openapi.vcs.changes.actions.RemoveChangeListAction"
              icon="AllIcons.General.Remove"/>
      <action id="ChangesView.SetDefault" class="com.intellij.openapi.vcs.changes.actions.SetDefaultChangeListAction"
              icon="AllIcons.Actions.Submit1"/>
      <action id="ChangesView.Move" class="com.intellij.openapi.vcs.changes.actions.MoveChangesToAnotherListAction"
              icon="AllIcons.Actions.MoveToAnotherChangelist"/>
      <action id="ChangesView.Diff" class="com.intellij.openapi.vcs.changes.actions.ShowDiffAction"
              icon="AllIcons.Actions.Diff"/>
    </group>

    <group id="AlienCommitChangesDialog.AdditionalActions"/>

    <group id="ChangesViewPopupMenu">
      <reference ref="ChangesView.Commit"/>
      <reference ref="ChangesView.Rollback"/>
      <reference ref="ChangesView.Move"/>
      <reference ref="ChangesView.Diff"/>
      <reference ref="EditSource"/>
      <separator/>
      <action id="ChangesView.DeleteUnversioned" class="com.intellij.openapi.vcs.changes.actions.DeleteUnversionedFilesAction"
              icon="AllIcons.Actions.Cancel"/>
      <action id="ChangesView.AddUnversioned" class="com.intellij.openapi.vcs.changes.actions.ScheduleForAdditionAction">
        <keyboard-shortcut first-keystroke="control alt A" keymap="$default"/>
      </action>
      <action id="ChangesView.Ignore" class="com.intellij.openapi.vcs.changes.actions.IgnoreUnversionedAction"/>
      <action id="ChangesView.RemoveDeleted" class="com.intellij.openapi.vcs.changes.actions.ScheduleForRemovalAction"
              icon="AllIcons.Actions.Exclude"/>
      <action id="ChangesView.Edit" class="com.intellij.openapi.vcs.changes.actions.EditAction"/>
      <separator/>
      <reference ref="ChangesView.NewChangeList"/>
      <reference ref="ChangesView.RemoveChangeList"/>
      <reference ref="ChangesView.SetDefault"/>
      <action id="ChangesView.Rename" class="com.intellij.openapi.vcs.changes.actions.RenameChangeListAction"/>
      <reference ref="ChangesView.CreatePatch"/>
      <reference ref="ChangesView.Shelve"/>
      <separator/>
      <reference ref="ChangesView.Refresh"/>
      <separator/>
      <reference ref="VersionControlsGroup"/>
    </group>

    <!-- There are alternative action presentations for the UnversionedViewDialog. Icon is the difference.  -->
    <group id="Unversioned.Files.Dialog">
      <action id="ChangesView.AddUnversioned.From.Dialog" class="com.intellij.openapi.vcs.changes.actions.ScheduleForAdditionAction"
              icon="AllIcons.General.Add" use-shortcut-of="ChangesView.AddUnversioned"/>
      <reference ref="ChangesView.Move"/>
      <action id="ChangesView.DeleteUnversioned.From.Dialog" class="com.intellij.openapi.vcs.changes.actions.DeleteUnversionedFilesAction"/>
      <reference ref="ChangesView.Ignore"/>
    </group>

    <group id="ShelvedChangesPopupMenu">
      <action id="ShelvedChanges.Unshelve" class="com.intellij.openapi.vcs.changes.shelf.UnshelveChangesAction"/>
      <action id="ShelveChanges.UnshelveWithDialog" class="com.intellij.openapi.vcs.changes.shelf.UnshelveWithDialogAction"
              text="Unshelve..." description="Correct paths where to apply patches and unshelve"/>
      <action id="ShelvedChanges.Restore" class="com.intellij.openapi.vcs.changes.shelf.RestoreShelvedChange"/>
      <action id="ShelvedChanges.Diff" class="com.intellij.openapi.vcs.changes.shelf.DiffShelvedChangesAction"
              icon="AllIcons.Actions.Diff"/>
      <action id="ChangesView.CreatePatchFromChanges" class="com.intellij.openapi.vcs.changes.actions.CreatePatchFromChangesAction"
              icon="AllIcons.Actions.CreatePatch"/>
      <action id="ShelvedChanges.ImportPatches" class="com.intellij.openapi.vcs.changes.shelf.ImportIntoShelfAction"/>
      <separator/>
      <action id="ShelvedChanges.Rename" class="com.intellij.openapi.vcs.changes.shelf.RenameShelvedChangeListAction"
              use-shortcut-of="RenameElement"/>
      <reference ref="$Delete"/>
      <separator/>
      <action id="ShelvedChanges.ShowHideDeleted" class="com.intellij.openapi.vcs.changes.shelf.ShowHideRecycledAction"/>
      <action id="ShelvedChanges.DeleteDeleted" class="com.intellij.openapi.vcs.changes.shelf.DeleteAlreadyUnshelvedAction"/>
    </group>

    <group id="VcsHistoryActionsGroup"/>

    <group id="CommittedChangesToolbar">
      <action id="CommittedChanges.Refresh" class="com.intellij.openapi.vcs.changes.committed.RefreshCommittedAction"
              icon="AllIcons.Actions.Refresh"/>
      <action id="CommittedChanges.Filter" class="com.intellij.openapi.vcs.changes.committed.FilterCommittedAction"
              icon="AllIcons.General.Filter"/>
      <action id="CommittedChanges.Details" class="com.intellij.openapi.vcs.changes.committed.ChangeListDetailsAction"
              icon="AllIcons.Actions.ShowChangesOnly"/>
      <reference ref="ChangesView.CreatePatchFromChanges"/>
      <action id="CommittedChanges.Revert" class="com.intellij.openapi.vcs.changes.actions.RevertChangeListAction"
              icon="AllIcons.Actions.Rollback"/>
      <action id="CommittedChanges.Clear" class="com.intellij.openapi.vcs.changes.committed.ClearCommittedAction"
              icon="AllIcons.Vcs.Remove"/>
    </group>

    <group id="RepositoryChangesBrowserToolbar">
    </group>

    <group id="IncomingChangesToolbar">
      <action id="IncomingChanges.Refresh" class="com.intellij.openapi.vcs.changes.committed.RefreshIncomingChangesAction"
              icon="AllIcons.Actions.Refresh"/>
      <reference ref="CommittedChanges.Details"/>
      <!--
      <action id="IncomingChanges.Get" class="com.intellij.openapi.vcs.changes.committed.GetCommittedChangelistAction"
              icon="/actions/get.png"/>
      -->
      <reference ref="Vcs.UpdateProject"/>
    </group>

    <group id="Vcs.History">
      <action id="VcsHistory.ShowAllAffected" class="com.intellij.openapi.vcs.annotate.ShowAllAffectedGenericAction"
              icon="AllIcons.Vcs.AllRevisions"/>
    </group>

    <action id="ChangesView.Browse" class="com.intellij.openapi.vcs.changes.actions.BrowseChangesAction"/>

    <action id="Diff.PrevChange" class="com.intellij.openapi.vcs.changes.actions.ShowPrevChangeAction"
            icon="AllIcons.Actions.Prevfile" use-shortcut-of="PreviousTab"/>
    <action id="Diff.NextChange" class="com.intellij.openapi.vcs.changes.actions.ShowNextChangeAction"
            icon="AllIcons.Actions.Nextfile" use-shortcut-of="NextTab"/>
    <action id="Diff.SelectedChange" class="com.intellij.openapi.vcs.changes.actions.ShowSelectedChangeAction"
            icon="AllIcons.Actions.ShowAsTree" use-shortcut-of="GotoClass"/>

    <group id="EditorGutterVcsPopupMenu">
      <reference ref="Annotate"/>
      <add-to-group group-id="EditorGutterPopupMenu" anchor="last"/>
    </group>

    <group id="Vcs.CheckinProjectPopup">
      <separator/>
    </group>

    <group id="Vcs.CheckinProjectToolbar">
    </group>

    <group id="UpdateActionGroup">
      <reference ref="EditSource"/>
      <reference ref="$Delete"/>
      <action id="Diff.UpdatedFiles" class="com.intellij.openapi.vcs.update.ShowUpdatedDiffAction"
              use-shortcut-of="CompareDirs" icon="AllIcons.Actions.Diff"/>
    </group>

    <group id="Vcs.MessageActionGroup">
      <action id="Vcs.CheckCommitMessageSpelling"
              class="com.intellij.openapi.vcs.actions.CheckCommitMessageSpellingAction"
              icon="AllIcons.Vcs.CheckSpelling"/>
      <action id="Vcs.ShowMessageHistory"
              class="com.intellij.openapi.vcs.actions.ShowMessageHistoryAction"
              icon="AllIcons.General.MessageHistory"/>
    </group>

    <group id="VcsToobarActions">
      <reference ref="Vcs.UpdateProject"/>
      <reference ref="CheckinProject"/>
      <reference ref="Compare.SameVersion"/>
      <reference ref="Vcs.ShowTabbedFileHistory"/>
      <reference ref="ChangesView.Rollback"/>
      <separator/>
      <add-to-group group-id="MainToolBarSettings" relative-to-action="ShowSettings" anchor="before"/>
    </group>

    <!-- Window -->
    <action id="CloseAllUnmodifiedEditors" class="com.intellij.ide.actions.CloseAllUnmodifiedEditorsAction">
      <add-to-group group-id="CloseEditorsGroup" anchor="before" relative-to-action="CloseAllUnpinnedEditors"/>
    </action>

    <action id="WelcomeScreen.GetFromVcs" class="com.intellij.openapi.wm.impl.welcomeScreen.GetFromVcsAction"
            icon="AllIcons.General.GetProjectfromVCS">
      <add-to-group group-id="WelcomeScreen.QuickStart" anchor="first"/>
    </action>

    <group id="DebuggerActions">
    </group>

    <group id="WelcomeScreen.QuickStart.IDEA">
      <action id="WelcomeScreen.CreateNewProject" class="com.intellij.platform.NewDirectoryProjectAction"
              icon="AllIcons.General.CreateNewProject"/>
      <action id="WelcomeScreen.ImportProject" class="com.intellij.ide.actions.ImportProjectAction" icon="AllIcons.General.ImportProject"/>
      <action id="WelcomeScreen.OpenProject" class="com.intellij.ide.actions.OpenProjectAction"
              icon="AllIcons.General.OpenProject"/>
      <add-to-group group-id="WelcomeScreen.QuickStart" anchor="first"/>
    </group>

    <action id="IncrementalSearch" class="com.intellij.codeInsight.navigation.actions.IncrementalSearchAction"/>
    <action id="AddToFavoritesPopup" class="com.intellij.ide.favoritesTreeView.actions.AddToFavoritesPopupAction"/>
    <group id="AddToFavorites" class="com.intellij.ide.favoritesTreeView.actions.AddToFavoritesActionGroup" popup="true"/>
    <group id="AddAllToFavorites" class="com.intellij.ide.favoritesTreeView.actions.AddAllToFavoritesActionGroup" popup="true"/>
    <action id="AddNewFavoritesList" class="com.intellij.ide.favoritesTreeView.actions.AddNewFavoritesListAction"/>
    <group id="SendToFavoritesGroup" class="com.intellij.ide.favoritesTreeView.actions.SendToFavoritesGroup" popup="true"/>

    <action id="RunConfiguration" class="com.intellij.execution.actions.RunConfigurationsComboBoxAction"/>
    <action id="ChooseRunConfiguration" class="com.intellij.execution.actions.ChooseRunConfigurationPopupAction" text="Run..."
            description="Choose and run configuration" icon="AllIcons.Toolwindows.ToolWindowRun"/>
    <action id="ChooseDebugConfiguration" class="com.intellij.execution.actions.ChooseDebugConfigurationPopupAction" text="Debug..."
            description="Choose and debug configuration" icon="AllIcons.General.Debug"/>

    <group id="RunContextGroup" popup="false">
      <action id="CreateRunConfiguration" class="com.intellij.execution.actions.CreateAction"/>
    </group>
    <group id="RunContextPopupGroup" popup="false">
      <reference ref="RunContextGroup"/>
    </group>

    <group id="LangCodeInsightActions">
      <action id="EditorSelectWord" class="com.intellij.openapi.editor.actions.SelectWordAtCaretAction"/>
      <action id="EditorUnSelectWord" class="com.intellij.openapi.editor.actions.UnselectWordAtCaretAction"/>

      <add-to-group group-id="EditorActions" anchor="last"/>
    </group>

    <action id="ClassNameCompletion" class="com.intellij.codeInsight.completion.actions.ClassNameCompletionAction"/>

    <group id="GenerateGroup">
      <action id="OverrideMethods" class="com.intellij.codeInsight.generation.actions.OverrideMethodsAction"/>
      <action id="ImplementMethods" class="com.intellij.codeInsight.generation.actions.ImplementMethodsAction"/>
      <action id="DelegateMethods" class="com.intellij.codeInsight.generation.actions.DelegateMethodsAction"/>
      <action id="GeneratePattern" class="com.intellij.codeInsight.generation.GenerateByPatternAction" text="Generate by Pattern..."/>
    </group>

    <action id="ShowIntentionActions" class="com.intellij.codeInsight.intention.actions.ShowIntentionActionsAction"/>

    <action id="TogglePopupHints" class="com.intellij.ide.actions.TogglePopupHintsAction"/>
    <action id="FindModal" class="com.intellij.openapi.editor.actions.FindAction" icon="AllIcons.Actions.Menu_find"/>

    <action id="CodeInspection.OnEditor" class="com.intellij.codeInspection.actions.CodeInspectionOnEditorAction"/>

    <action id="ActivateNavBar" class="com.intellij.ide.navigationToolbar.ActivateNavigationBarAction" popup="true"/>

    <group id="CodeInsightEditorActions">
      <reference ref="LookupActions"/>
      <action id="EmacsStyleIndent" class="com.intellij.codeInsight.editorActions.EmacsStyleIndentAction"/>
      <action id="EditorCodeBlockStart" class="com.intellij.codeInsight.editorActions.CodeBlockStartAction"/>
      <action id="EditorCodeBlockEnd" class="com.intellij.codeInsight.editorActions.CodeBlockEndAction"/>
      <action id="EditorMatchBrace" class="com.intellij.codeInsight.editorActions.MatchBraceAction"/>
      <action id="EditorCodeBlockStartWithSelection" class="com.intellij.codeInsight.editorActions.CodeBlockStartWithSelectionAction"/>
      <action id="EditorCodeBlockEndWithSelection" class="com.intellij.codeInsight.editorActions.CodeBlockEndWithSelectionAction"/>
      <action id="EditorCompleteStatement" class="com.intellij.codeInsight.editorActions.smartEnter.SmartEnterAction"/>

      <add-to-group group-id="EditorActions" anchor="last"/>
    </group>

    <!-- File -->

    <action id="ReloadFromDisk" class="com.intellij.ide.actions.ReloadFromDiskAction">
      <!--
      <add-to-group group-id="FileMenu" anchor="after" relative-to-action="Synchronize"/>
      -->
    </action>


    <group id="PrintExportGroup">
      <separator/>
      <action id="ExportToHTML" class="com.intellij.codeEditor.printing.ExportToHTMLAction"/>
      <action id="Print" class="com.intellij.codeEditor.printing.PrintAction" icon="AllIcons.Graph.Print"/>
      <reference ref="AddToFavorites"/>

      <add-to-group group-id="FileMenu" anchor="after" relative-to-action="InvalidateCaches"/>
    </group>

    <action id="ChangeTemplateDataLanguage" class="com.intellij.psi.templateLanguages.ChangeTemplateDataLanguageAction">
      <add-to-group group-id="FileMenu" anchor="before" relative-to-action="ToggleReadOnlyAttribute"/>
    </action>

    <group id="PowerSaveGroup">
      <separator/>
      <action id="TogglePowerSave" class="com.intellij.ide.actions.TogglePowerSaveAction"/>
      <add-to-group group-id="FileMenu" anchor="after" relative-to-action="ToggleReadOnlyAttribute"/>
    </group>

    <!-- Edit -->
    <action id="CopyReference" class="com.intellij.ide.actions.CopyReferenceAction">
      <add-to-group group-id="CutCopyPasteGroup" anchor="after" relative-to-action="CopyPaths"/>
      <add-to-group group-id="EditorTabPopupMenu" anchor="after" relative-to-action="CopyPaths"/>
      <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="$Copy"/>
    </action>

    <group id="EditSelectWordGroup">
      <reference ref="EditorSelectWord"/>
      <reference ref="EditorUnSelectWord"/>

      <add-to-group group-id="EditSelectGroup" anchor="last"/>
    </group>

    <group id="EditBookmarksGroup" popup="true">
      <action id="ToggleBookmark" class="com.intellij.ide.bookmarks.actions.ToggleBookmarkAction"/>
      <action id="ToggleBookmarkWithMnemonic" class="com.intellij.ide.bookmarks.actions.ToggleBookmarkWithMnemonicAction"/>
      <action id="ShowBookmarks" class="com.intellij.ide.bookmarks.actions.BookmarksAction"/>
      <action id="GotoNextBookmark" class="com.intellij.ide.bookmarks.actions.NextBookmarkAction"/>
      <action id="GotoPreviousBookmark" class="com.intellij.ide.bookmarks.actions.PreviousBookmarkAction"/>
      <separator/>

      <add-to-group group-id="GoToMenu" anchor="after" relative-to-action="JumpToLastChange"/>
    </group>

    <group id="GoToCodeGroup">
      <separator/>
      <action id="SelectIn" class="com.intellij.ide.actions.SelectInAction"/>
      <action id="ShowNavBar" class="com.intellij.ide.navigationToolbar.ShowNavBarAction"/>
      <action id="GotoDeclaration" class="com.intellij.codeInsight.navigation.actions.GotoDeclarationAction"/>
      <action id="GotoImplementation" class="com.intellij.codeInsight.navigation.actions.GotoImplementationAction"/>
      <action id="GotoTypeDeclaration" class="com.intellij.codeInsight.navigation.actions.GotoTypeDeclarationAction"/>
      <action id="GotoSuperMethod" class="com.intellij.codeInsight.navigation.actions.GotoSuperAction"/>
      <action id="GotoTest" class="com.intellij.testIntegration.GotoTestOrCodeAction"/>
      <action id="GotoRelated" class="com.intellij.ide.actions.GotoRelatedFileAction"/>
      <separator/>
      <action id="FileStructurePopup" class="com.intellij.ide.actions.ViewStructureAction"/>
      <action id="ShowFilePath" class="com.intellij.ide.actions.ShowFilePathAction"/>
      <group id="HierarchyGroup">
        <action id="TypeHierarchy" class="com.intellij.ide.hierarchy.actions.BrowseTypeHierarchyAction"/>
        <action id="MethodHierarchy" class="com.intellij.ide.hierarchy.actions.BrowseMethodHierarchyAction"/>
        <action id="CallHierarchy" class="com.intellij.ide.hierarchy.actions.BrowseCallHierarchyAction"/>
      </group>
      <separator/>

      <add-to-group group-id="GoToMenu" anchor="after" relative-to-action="EditBookmarksGroup"/>
    </group>

    <group id="GoToErrorGroup">
      <separator/>
      <action id="GotoNextError" class="com.intellij.codeInsight.daemon.impl.actions.GotoNextErrorAction"/>
      <action id="GotoPreviousError" class="com.intellij.codeInsight.daemon.impl.actions.GotoPreviousErrorAction"/>

      <add-to-group group-id="GoToMenu" anchor="after" relative-to-action="GoToCodeGroup"/>
    </group>

    <!-- View -->
    <group id="QuickActions">
      <separator/>
      <action id="QuickImplementations" class="com.intellij.codeInsight.hint.actions.ShowImplementationsAction"/>
      <action id="QuickJavaDoc" class="com.intellij.codeInsight.documentation.actions.ShowQuickDocInfoAction"/>

      <add-to-group group-id="ViewMenu" anchor="after" relative-to-action="ToolWindowsGroup"/>
    </group>

    <group id="CodeEditorBaseGroup">
      <group id="CodeEditorViewGroup">
        <action id="ExternalJavaDoc" class="com.intellij.ide.actions.ExternalJavaDocAction"/>
        <action id="ParameterInfo" class="com.intellij.codeInsight.hint.actions.ShowParameterInfoAction"/>
        <action id="EditorContextInfo" class="com.intellij.codeInsight.hint.actions.ShowContainerInfoAction"/>
        <action id="ShowErrorDescription" class="com.intellij.codeInsight.daemon.impl.actions.ShowErrorDescriptionAction"/>
      </group>
      <separator/>

      <add-to-group group-id="ViewMenu" relative-to-action="QuickActions" anchor="after"/>
    </group>

    <action id="FixDocComment" class="com.intellij.codeInsight.editorActions.FixDocCommentAction"/>

    <action id="ViewNavigationBar" class="com.intellij.ide.actions.ViewNavigationBarAction">
      <add-to-group group-id="UIToggleActions" relative-to-action="ViewStatusBar" anchor="after"/>
    </action>

    <action id="ViewImportPopups" class="com.intellij.openapi.editor.actions.ToggleShowImportPopupsAction">
      <add-to-group group-id="EditorToggleActions"/>
    </action>

    <action id="ProjectViewChangeView" class="com.intellij.ide.projectView.actions.ChangeProjectViewAction"/>

    <action id="RecentChanges" class="com.intellij.history.integration.ui.actions.RecentChangesAction">
      <keyboard-shortcut first-keystroke="alt shift C" keymap="$default"/>
      <add-to-group group-id="ViewRecentActions" anchor="last"/>
    </action>

    <!-- Go To -->
    <group id="GoToTargetEx">
      <action id="GotoClass" class="com.intellij.ide.actions.GotoClassAction"/>
      <action id="GotoFile" class="com.intellij.ide.actions.GotoFileAction"/>
      <action id="GotoSymbol" class="com.intellij.ide.actions.GotoSymbolAction"/>
      <action id="GotoCustomRegion" class="com.intellij.lang.customFolding.GotoCustomRegionAction"/>

      <add-to-group group-id="GoToMenu" anchor="first"/>
    </group>

    <group id="GoToMenuEx">
      <separator/>
      <action id="MethodDown" class="com.intellij.codeInsight.navigation.actions.MethodDownAction"/>
      <action id="MethodUp" class="com.intellij.codeInsight.navigation.actions.MethodUpAction"/>
      <separator/>
      <add-to-group group-id="GoToMenu" anchor="after" relative-to-action="GoToPreviousError"/>
    </group>


    <!-- Code -->
    <group id="CodeMenu" popup="true">
      <reference ref="OverrideMethods"/>
      <reference ref="ImplementMethods"/>
      <action id="Generate" class="com.intellij.codeInsight.generation.actions.GenerateAction"/>
      <separator/>
      <action id="SurroundWith" class="com.intellij.codeInsight.generation.actions.SurroundWithAction"/>
      <action id="Unwrap" class="com.intellij.codeInsight.unwrap.UnwrapAction"/>
      <separator/>

      <group id="CodeCompletionGroup" class="com.intellij.codeInsight.completion.actions.CodeCompletionGroup" popup="true">
        <action id="CodeCompletion" class="com.intellij.codeInsight.completion.actions.CodeCompletionAction"/>
        <action id="SmartTypeCompletion" class="com.intellij.codeInsight.completion.actions.SmartCodeCompletionAction"/>
        <separator/>
        <action id="HippieCompletion" class="com.intellij.codeInsight.completion.actions.HippieCompletionAction"/>
        <action id="HippieBackwardCompletion" class="com.intellij.codeInsight.completion.actions.HippieBackwardCompletionAction"/>
      </group>

      <group id="FoldingGroup" popup="true">
        <action id="ExpandRegion" class="com.intellij.codeInsight.folding.impl.actions.ExpandRegionAction"/>
        <action id="CollapseRegion" class="com.intellij.codeInsight.folding.impl.actions.CollapseRegionAction"/>
        <separator/>
        <action id="ExpandAllRegions" class="com.intellij.codeInsight.folding.impl.actions.ExpandAllRegionsAction"/>
        <action id="CollapseAllRegions" class="com.intellij.codeInsight.folding.impl.actions.CollapseAllRegionsAction"/>
        <separator/>
        <group id="LanguageSpecificFoldingGroup">
          <action id="ExpandDocComments" class="com.intellij.codeInsight.folding.impl.actions.ExpandDocCommentsAction"/>
          <action id="CollapseDocComments" class="com.intellij.codeInsight.folding.impl.actions.CollapseDocCommentsAction"/>
        </group>
        <separator/>
        <action id="CollapseSelection" class="com.intellij.codeInsight.folding.impl.actions.CollapseSelectionAction"/>
      </group>

      <separator/>

      <action id="InsertLiveTemplate" class="com.intellij.codeInsight.template.impl.actions.ListTemplatesAction"/>
      <action id="SurroundWithLiveTemplate" class="com.intellij.codeInsight.template.impl.actions.SurroundWithTemplateAction"/>
      <separator/>

      <group id="CommentGroup">
        <action id="CommentByLineComment" class="com.intellij.codeInsight.generation.actions.CommentByLineCommentAction"/>
        <action id="CommentByBlockComment" class="com.intellij.codeInsight.generation.actions.CommentByBlockCommentAction"/>
      </group>

      <group id="CodeFormatGroup">
        <action id="ReformatCode" class="com.intellij.codeInsight.actions.ReformatCodeAction"/>
        <action id="AutoIndentLines" class="com.intellij.codeInsight.generation.actions.AutoIndentLinesAction"/>
        <action id="OptimizeImports" class="com.intellij.codeInsight.actions.OptimizeImportsAction"/>
        <action id="RearrangeCode" class="com.intellij.application.options.codeStyle.arrangement.action.RearrangeCodeAction"/>
      </group>

      <separator/>
      <action id="MoveStatementDown" class="com.intellij.codeInsight.editorActions.moveUpDown.MoveStatementDownAction"/>
      <action id="MoveStatementUp" class="com.intellij.codeInsight.editorActions.moveUpDown.MoveStatementUpAction"/>
      <action id="MoveLineDown" class="com.intellij.codeInsight.editorActions.moveUpDown.MoveLineDownAction"/>
      <action id="MoveLineUp" class="com.intellij.codeInsight.editorActions.moveUpDown.MoveLineUpAction"/>
      <separator/>
      <add-to-group group-id="MainMenu" anchor="after" relative-to-action="GoToMenu"/>
    </group>

    <!-- Refactor -->
    <group id="RefactoringMenu" popup="true">
      <action id="Refactorings.QuickListPopupAction"
              class="com.intellij.refactoring.actions.RefactoringQuickListPopupAction"
              text="Refactor This..." description="Context aware popup with list of refactoring actions"/>
      <action id="RenameElement" class="com.intellij.refactoring.actions.RenameElementAction"/>
      <action id="ChangeSignature" class="com.intellij.refactoring.actions.ChangeSignatureAction"/>
      <separator/>
      <action id="Move" class="com.intellij.refactoring.actions.MoveAction"/>
      <action id="CopyElement" class="com.intellij.ide.actions.CopyElementAction"/>
      <action id="CloneElement" class="com.intellij.ide.actions.CloneElementAction"/>
      <action id="SafeDelete" class="com.intellij.refactoring.actions.SafeDeleteAction"/>
      <separator/>
      <group id="IntroduceActionsGroup" popup="true">
        <action id="IntroduceVariable" class="com.intellij.refactoring.actions.IntroduceVariableAction"/>
        <action id="IntroduceConstant" class="com.intellij.refactoring.actions.IntroduceConstantAction"/>
        <action id="IntroduceField" class="com.intellij.refactoring.actions.IntroduceFieldAction"/>
        <action id="IntroduceParameter" class="com.intellij.refactoring.actions.IntroduceParameterAction"/>
        <separator/>
        <action id="ExtractMethod" class="com.intellij.refactoring.actions.ExtractMethodAction"/>
        <separator/>
        <action id="ExtractClass" class="com.intellij.refactoring.actions.ExtractClassAction"/>
        <action id="ExtractInclude" class="com.intellij.refactoring.actions.ExtractIncludeAction"/>
        <action id="ExtractInterface" class="com.intellij.refactoring.actions.ExtractInterfaceAction"/>
        <action id="ExtractSuperclass" class="com.intellij.refactoring.actions.ExtractSuperclassAction"/>
        <action id="ExtractModule" class="com.intellij.refactoring.actions.ExtractModuleAction"/>
      </group>

      <action id="Inline" class="com.intellij.refactoring.actions.InlineAction"/>
      <separator/>
      <action id="MembersPullUp" class="com.intellij.refactoring.actions.PullUpAction"/>
      <action id="MemberPushDown" class="com.intellij.refactoring.actions.PushDownAction"/>
      <add-to-group group-id="MainMenu" anchor="after" relative-to-action="CodeMenu"/>
    </group>

    <!-- Run -->
    <group id="RunMenu" popup="true">
      <group id="RunnerActions"/>
      <reference ref="ChooseRunConfiguration"/>
      <reference ref="ChooseDebugConfiguration"/>
      <action id="editRunConfigurations" class="com.intellij.execution.actions.EditRunConfigurationsAction"/>
      <action id="Stop" class="com.intellij.execution.actions.StopAction" icon="AllIcons.Actions.Suspend"/>

      <add-to-group group-id="MainMenu" anchor="after" relative-to-action="RefactoringMenu"/>
    </group>


    <!-- Tools -->
    <group id="ToolsBasicGroup">
      <action id="SaveAsTemplate" class="com.intellij.codeInsight.template.actions.SaveAsTemplateAction"/>
      <action id="SaveFileAsTemplate" class="com.intellij.ide.actions.SaveFileAsTemplateAction"/>
      <separator/>

      <add-to-group group-id="ToolsMenu" anchor="first"/>
    </group>

    <group id="ExternalToolsGroup" class="com.intellij.tools.ExternalToolsGroup">
      <add-to-group group-id="ToolsMenu" anchor="last"/>
    </group>

    <group id="NewGroup" popup="true">
      <action id="NewFile" class="com.intellij.ide.actions.CreateFileAction"/>
      <action id="NewDir" class="com.intellij.ide.actions.CreateDirectoryOrPackageAction"/>
      <separator/>
      <action id="NewFromTemplate" class="com.intellij.ide.fileTemplates.actions.CreateFromTemplateGroup"/>
    </group>

    <group id="NewGroup1">
      <action id="NewModuleInGroup" class="com.intellij.openapi.roots.ui.configuration.actions.NewModuleInGroupAction"
              icon="AllIcons.Nodes.Module"/>

      <add-to-group group-id="NewGroup" anchor="first"/>
    </group>

    <group id="WeighingNewGroup" class="com.intellij.ide.actions.WeighingNewActionGroup"/>


    <!-- Toolbar -->
    <!--
    <group id="ToolbarNewElement">
      <action id="NewElementToolbarAction" class="com.intellij.ide.actions.NewElementToolbarAction" icon="/general/add.png"/>
      <add-to-group group-id="MainToolBar" anchor="first"/>
    </group>
    -->

    <group id="ToolbarFindGroup">
      <separator/>

      <reference ref="Find"/>
      <reference ref="Replace"/>

      <add-to-group group-id="MainToolBar" relative-to-action="$Paste" anchor="after"/>
    </group>

    <group id="ToolbarRunGroup">
      <separator/>
      <reference ref="RunConfiguration"/>
      <reference ref="RunnerActions"/>

      <add-to-group group-id="MainToolBar" relative-to-action="Forward" anchor="after"/>
    </group>

    <group id="NavBarToolBar">
      <reference ref="ToolbarRunGroup"/>
    </group>

    <group id="Bookmarks">
      <reference ref="ToggleBookmark"/>
      <reference ref="ShowBookmarks"/>
      <reference ref="GotoNextBookmark"/>
      <reference ref="GotoPreviousBookmark"/>

      <action id="GotoBookmark0" class="com.intellij.ide.bookmarks.actions.GotoBookmark0Action"/>
      <action id="GotoBookmark1" class="com.intellij.ide.bookmarks.actions.GotoBookmark1Action"/>
      <action id="GotoBookmark2" class="com.intellij.ide.bookmarks.actions.GotoBookmark2Action"/>
      <action id="GotoBookmark3" class="com.intellij.ide.bookmarks.actions.GotoBookmark3Action"/>
      <action id="GotoBookmark4" class="com.intellij.ide.bookmarks.actions.GotoBookmark4Action"/>
      <action id="GotoBookmark5" class="com.intellij.ide.bookmarks.actions.GotoBookmark5Action"/>
      <action id="GotoBookmark6" class="com.intellij.ide.bookmarks.actions.GotoBookmark6Action"/>
      <action id="GotoBookmark7" class="com.intellij.ide.bookmarks.actions.GotoBookmark7Action"/>
      <action id="GotoBookmark8" class="com.intellij.ide.bookmarks.actions.GotoBookmark8Action"/>
      <action id="GotoBookmark9" class="com.intellij.ide.bookmarks.actions.GotoBookmark9Action"/>

      <action id="ToggleBookmark0" class="com.intellij.ide.bookmarks.actions.ToggleBookmark0Action"/>
      <action id="ToggleBookmark1" class="com.intellij.ide.bookmarks.actions.ToggleBookmark1Action"/>
      <action id="ToggleBookmark2" class="com.intellij.ide.bookmarks.actions.ToggleBookmark2Action"/>
      <action id="ToggleBookmark3" class="com.intellij.ide.bookmarks.actions.ToggleBookmark3Action"/>
      <action id="ToggleBookmark4" class="com.intellij.ide.bookmarks.actions.ToggleBookmark4Action"/>
      <action id="ToggleBookmark5" class="com.intellij.ide.bookmarks.actions.ToggleBookmark5Action"/>
      <action id="ToggleBookmark6" class="com.intellij.ide.bookmarks.actions.ToggleBookmark6Action"/>
      <action id="ToggleBookmark7" class="com.intellij.ide.bookmarks.actions.ToggleBookmark7Action"/>
      <action id="ToggleBookmark8" class="com.intellij.ide.bookmarks.actions.ToggleBookmark8Action"/>
      <action id="ToggleBookmark9" class="com.intellij.ide.bookmarks.actions.ToggleBookmark9Action"/>

    </group>

    <group id="ProjectViewPopupMenuRefactoringGroup">
      <reference ref="RefactoringMenu"/>
    </group>

    <group id="ProjectViewPopupMenuModifyGroup">
      <reference ref="$Delete"/>
      <action id="ExcludeFromProject" class="com.intellij.openapi.file.exclude.ui.ExcludeFromProjectAction"/>
      <group id="MarkFileAs" class="com.intellij.openapi.file.exclude.ui.MarkFileGroup">
        <action id="MarkAsPlainTextAction" class="com.intellij.openapi.file.exclude.ui.MarkAsPlainTextAction"/>
        <action id="MarkAsOriginalTypeAction" class="com.intellij.openapi.file.exclude.ui.MarkAsOriginalTypeAction"/>
      </group>
    </group>

    <group id="ProjectViewPopupMenuRunGroup">
      <reference ref="RunContextPopupGroup"/>
    </group>

    <group id="ProjectViewPopupMenuSettingsGroup">
      <group id="MarkRootGroup" class="com.intellij.ide.projectView.actions.MarkRootGroup" popup="true">
      </group>
    </group>

    <group id="ProjectViewPopupMenu">
      <reference ref="WeighingNewGroup"/>
      <action id="AssociateWithFileType" class="com.intellij.ide.actions.AssociateFileType"/>
      <separator/>
      <reference ref="CutCopyPasteGroup"/>
      <reference ref="EditSource"/>
      <reference ref="ChangesView.ApplyPatch"/>
      <separator/>
      <reference ref="FindUsages"/>
      <reference ref="FindInPath"/>
      <reference ref="ReplaceInPath"/>
      <separator/>
      <reference ref="ProjectViewPopupMenuRefactoringGroup"/>
      <separator/>
      <reference ref="AddToFavorites"/>
      <separator/>
      <reference ref="ProjectViewPopupMenuModifyGroup"/>
      <separator/>
      <reference ref="ProjectViewPopupMenuRunGroup"/>
      <separator/>
      <reference ref="VersionControlsGroup"/>
      <action id="SynchronizeCurrentFile" class="com.intellij.ide.actions.SynchronizeCurrentFileAction" icon="AllIcons.Actions.Refresh"/>
      <separator/>
      <action id="RevealIn" class="com.intellij.ide.actions.RevealFileAction"/>
      <reference ref="ShowFilePath"/>
      <separator/>
      <reference ref="CompareTwoFiles"/>
      <reference ref="CompareFileWithEditor"/>
      <reference ref="CompareDirs"/>
      <reference ref="CompareJars"/>
      <separator/>
      <reference ref="ExternalToolsGroup"/>
      <separator/>
      <reference ref="ProjectViewPopupMenuSettingsGroup"/>
    </group>

    <group id="NavbarPopupMenu">
      <reference ref="WeighingNewGroup"/>
      <reference ref="AssociateWithFileType"/>
      <separator/>
      <reference ref="CutCopyPasteGroup"/>
      <reference ref="EditSource"/>
      <reference ref="ChangesView.ApplyPatch"/>
      <separator/>
      <reference ref="FindUsages"/>
      <reference ref="FindInPath"/>
      <reference ref="ReplaceInPath"/>
      <separator/>
      <reference ref="ProjectViewPopupMenuRefactoringGroup"/>
      <separator/>
      <reference ref="AddToFavorites"/>
      <separator/>
      <reference ref="ProjectViewPopupMenuModifyGroup"/>
      <separator/>
      <reference ref="ProjectViewPopupMenuRunGroup"/>
      <separator/>
      <reference ref="VersionControlsGroup"/>
      <reference ref="SynchronizeCurrentFile"/>
      <separator/>
      <reference ref="ExternalToolsGroup"/>
      <separator/>
      <reference ref="ProjectViewPopupMenuSettingsGroup"/>
    </group>

    <group id="FavoritesViewPopupMenu">
      <reference ref="NewGroup"/>
      <reference ref="AssociateWithFileType"/>
      <separator/>
      <reference ref="CutCopyPasteGroup"/>
      <reference ref="EditSource"/>
      <reference ref="ChangesView.ApplyPatch"/>
      <separator/>
      <reference ref="FindUsages"/>
      <reference ref="FindInPath"/>
      <reference ref="ReplaceInPath"/>
      <separator/>
      <reference ref="ProjectViewPopupMenuRefactoringGroup"/>
      <separator/>
      <action id="RenameFavoritesList" class="com.intellij.ide.favoritesTreeView.actions.RenameFavoritesListAction"
              use-shortcut-of="RenameElement"/>
      <action id="RemoveFromFavorites" class="com.intellij.ide.favoritesTreeView.actions.DeleteFromFavoritesAction"/>
      <action id="EditFavorites" class="com.intellij.ide.favoritesTreeView.actions.EditFavoritesAction"/>
      <reference ref="AddToFavorites"/>
      <reference ref="SendToFavoritesGroup"/>
      <separator/>
      <reference ref="ProjectViewPopupMenuModifyGroup"/>
      <separator/>
      <reference ref="ProjectViewPopupMenuRunGroup"/>
      <separator/>
      <reference ref="VersionControlsGroup"/>
      <reference ref="SynchronizeCurrentFile"/>
      <separator/>
      <reference ref="RevealIn"/>
      <reference ref="ShowFilePath"/>
      <separator/>
      <reference ref="CompareTwoFiles"/>
      <reference ref="CompareFileWithEditor"/>
      <separator/>
      <reference ref="ExternalToolsGroup"/>
      <separator/>
      <reference ref="ProjectViewPopupMenuSettingsGroup"/>
    </group>

    <group id="ScopeViewPopupMenu">
      <reference ref="ProjectViewPopupMenu"/>
      <separator/>
      <action id="ScopeView.EditScopes" class="com.intellij.ide.scopeView.EditScopesAction"/>
    </group>

    <group id="StructureViewPopupMenu">
      <reference ref="EditSource"/>
      <separator/>
      <reference ref="FindUsages"/>
      <reference ref="RefactoringMenu"/>
      <separator/>
      <reference ref="AddToFavorites"/>
      <separator/>
      <reference ref="CutCopyPasteGroup"/>
      <separator/>
      <reference ref="RunContextPopupGroup"/>
      <reference ref="VersionControlsGroup"/>
      <separator/>
      <reference ref="CompareTwoFiles"/>
    </group>

    <group id="EditorPopupMenu1">
      <separator/>
      <reference ref="FindUsages"/>
      <reference ref="RefactoringMenu"/>
      <separator/>
      <reference ref="FoldingGroup"/>
      <separator/>

      <add-to-group group-id="EditorPopupMenu" relative-to-action="EditorToggleColumnMode" anchor="after"/>
    </group>

    <group id="EditorLangPopupMenu">
      <separator/>
      <group id="EditorPopupMenu.GoTo" popup="true">
        <reference ref="ShowNavBar"/>
        <reference ref="GotoDeclaration"/>
        <reference ref="GotoImplementation"/>
        <reference ref="GotoTypeDeclaration"/>
        <reference ref="GotoSuperMethod"/>
        <reference ref="GotoTest"/>
      </group>
      <reference ref="Generate"/>
      <separator/>

      <group id="EditorPopupMenu.Run">
        <reference ref="RunContextPopupGroup"/>
      </group>
      <separator/>
      <reference ref="VersionControlsGroup"/>
      <separator/>
      <reference ref="ExternalToolsGroup"/>

      <add-to-group group-id="EditorPopupMenu" relative-to-action="CompareClipboardWithSelection" anchor="before"/>
    </group>

    <group id="EditorTabPopupMenuEx">
      <separator/>
      <reference ref="AddToFavorites"/>
      <reference ref="AddAllToFavorites"/>
      <separator/>
      <reference ref="RunContextPopupGroup"/>
      <reference ref="VersionControlsGroup"/>
      <separator/>
      <reference ref="ExternalToolsGroup"/>

      <add-to-group group-id="EditorTabPopupMenu" anchor="last"/>
    </group>

    <reference ref="ChangeTemplateDataLanguage">
      <add-to-group group-id="EditorPopupMenu" anchor="before" relative-to-action="ToggleReadOnlyAttribute"/>
    </reference>

    <group id="UsageView.Popup">
      <reference ref="EditSource"/>
      <action id="UsageView.Include" class="com.intellij.usages.actions.IncludeUsageAction"/>
      <action id="UsageView.Exclude" class="com.intellij.usages.actions.ExcludeUsageAction" use-shortcut-of="$Delete"/>
      <separator/>
      <action id="UsageView.ShowRecentFindUsages" class="com.intellij.find.impl.ShowRecentFindUsagesAction" icon="AllIcons.Actions.Back"
              use-shortcut-of="RecentFiles"/>
    </group>

    <!-- <action id="UsageView.ImportToFavorites" class="com.intellij.ide.favoritesTreeView.ImportUsagesAction"/> -->
    <action id="NewElementSamePlace" class="com.intellij.ide.actions.NewElementSamePlaceAction"/>

    <action id="ChangeCodeStyleScheme" class="com.intellij.ide.actions.QuickChangeCodeStyleSchemeAction">
      <add-to-group group-id="ChangeScheme" anchor="after" relative-to-action="ChangeColorScheme"/>
    </action>

    <action id="TypeHierarchyBase.BaseOnThisType" text="Base on This Type"
            class="com.intellij.ide.hierarchy.TypeHierarchyBrowserBase$BaseOnThisTypeAction"/>
    <action id="TypeHierarchy.Class" class="com.intellij.ide.hierarchy.ViewClassHierarchyAction"/>
    <action id="TypeHierarchy.Subtypes" class="com.intellij.ide.hierarchy.ViewSubtypesHierarchyAction"/>
    <action id="TypeHierarchy.Supertypes" class="com.intellij.ide.hierarchy.ViewSupertypesHierarchyAction"/>

    <action id="EditBreakpoint" class="com.intellij.xdebugger.impl.actions.EditBreakpointAction"/>
    <group id="DebugMainMenu">
      <separator/>
      <action id="StepOver" class="com.intellij.xdebugger.impl.actions.StepOverAction" icon="AllIcons.Actions.TraceOver"/>
      <action id="ForceStepOver" class="com.intellij.xdebugger.impl.actions.ForceStepOverAction"
              icon="AllIcons.Debugger.Actions.Force_step_over"/>
      <action id="StepInto" class="com.intellij.xdebugger.impl.actions.StepIntoAction" icon="AllIcons.Actions.TraceInto"/>
      <action id="ForceStepInto" class="com.intellij.xdebugger.impl.actions.ForceStepIntoAction"
              icon="AllIcons.Debugger.Actions.Force_step_into"/>
      <action id="SmartStepInto" class="com.intellij.xdebugger.impl.actions.SmartStepIntoAction" icon="AllIcons.Actions.TraceInto"/>
      <action id="StepOut" class="com.intellij.xdebugger.impl.actions.StepOutAction" icon="AllIcons.Actions.StepOut"/>
      <action id="RunToCursor" class="com.intellij.xdebugger.impl.actions.RunToCursorAction" icon="AllIcons.Actions.RunToCursor"/>
      <action id="ForceRunToCursor" class="com.intellij.xdebugger.impl.actions.ForceRunToCursorAction"
              icon="AllIcons.Debugger.Actions.Force_run_to_cursor"/>
      <action id="Pause" class="com.intellij.xdebugger.impl.actions.PauseAction" icon="AllIcons.Actions.Pause"/>
      <action id="Resume" class="com.intellij.xdebugger.impl.actions.ResumeAction" icon="AllIcons.Actions.Resume"/>
      <separator/>
      <action id="EvaluateExpression" class="com.intellij.xdebugger.impl.actions.EvaluateAction"
              icon="AllIcons.Debugger.EvaluateExpression"/>
      <action id="QuickEvaluateExpression" class="com.intellij.xdebugger.impl.actions.QuickEvaluateAction"/>
      <action id="ShowExecutionPoint" class="com.intellij.xdebugger.impl.actions.ShowExecutionPointAction"
              icon="AllIcons.Debugger.ShowCurrentFrame"/>
      <separator/>
      <action id="ToggleLineBreakpoint" class="com.intellij.xdebugger.impl.actions.ToggleLineBreakpointAction"/>
      <action id="ToggleTemporaryLineBreakpoint" class="com.intellij.xdebugger.impl.actions.ToggleTemporaryLineBreakpointAction"/>
      <action id="ViewBreakpoints" class="com.intellij.xdebugger.impl.actions.ViewBreakpointsAction"
              icon="AllIcons.Debugger.ViewBreakpoints"/>
      <separator/>

      <add-to-group group-id="RunMenu" anchor="last"/>
    </group>

    <action id="Debugger.AddToWatch" class="com.intellij.xdebugger.impl.actions.AddToWatchesAction" icon="AllIcons.Debugger.AddToWatch"/>

    <group id="EditorPopupMenuDebug">
      <separator/>
      <reference ref="EvaluateExpression"/>
      <reference ref="RunToCursor"/>
      <reference ref="ForceRunToCursor"/>
      <reference ref="Debugger.AddToWatch"/>
      <separator/>

      <add-to-group group-id="EditorLangPopupMenu" relative-to-action="EditorPopupMenu.Run" anchor="before"/>
    </group>


    <group id="XDebugger.Actions">
      <action id="XDebugger.SetValue" class="com.intellij.xdebugger.impl.ui.tree.actions.XSetValueAction"/>
      <action id="XDebugger.CopyValue" class="com.intellij.xdebugger.impl.ui.tree.actions.XCopyValueAction"/>
      <action id="XDebugger.CompareValueWithClipboard" class="com.intellij.xdebugger.impl.ui.tree.actions.XCompareWithClipboardAction"/>
      <action id="XDebugger.CopyName" class="com.intellij.xdebugger.impl.ui.tree.actions.XCopyNameAction"/>
      <action id="XDebugger.Inspect" class="com.intellij.xdebugger.impl.ui.tree.actions.XInspectAction"/>
      <action id="XDebugger.JumpToSource" class="com.intellij.xdebugger.impl.ui.tree.actions.XJumpToSourceAction"/>
      <action id="XDebugger.AddToWatches" class="com.intellij.xdebugger.impl.ui.tree.actions.XAddToWatchesAction"
              icon="AllIcons.Debugger.AddToWatch"/>
      <action id="XDebugger.NewWatch" class="com.intellij.xdebugger.impl.frame.actions.XNewWatchAction" icon="AllIcons.Debugger.NewWatch"/>
      <action id="XDebugger.EditWatch" class="com.intellij.xdebugger.impl.frame.actions.XEditWatchAction"/>
      <action id="XDebugger.RemoveWatch" class="com.intellij.xdebugger.impl.frame.actions.XRemoveWatchAction"
              icon="AllIcons.Actions.Delete"/>
      <action id="XDebugger.RemoveAllWatches" class="com.intellij.xdebugger.impl.frame.actions.XRemoveAllWatchesAction"/>
      <action id="XDebugger.MuteBreakpoints" class="com.intellij.xdebugger.impl.actions.MuteBreakpointAction"
              icon="AllIcons.Debugger.MuteBreakpoints"/>
      <action id="XDebugger.AutoTooltip" class="com.intellij.xdebugger.impl.actions.ValueTooltipAutoShowAction"/>
      <action id="XDebugger.ToggleSortValues" class="com.intellij.xdebugger.impl.ui.tree.actions.SortValuesToggleAction"
              icon="AllIcons.ObjectBrowser.Sorted"/>
      <action id="Debugger.MarkObject" class="com.intellij.xdebugger.impl.actions.MarkObjectAction"/>
    </group>

    <group id="XDebugger.ToolWindow.TopToolbar">
      <reference ref="ShowExecutionPoint"/>
      <separator/>
      <reference ref="StepOver"/>
      <reference ref="StepInto"/>
      <reference ref="ForceStepInto"/>
      <reference ref="StepOut"/>
      <reference ref="RunToCursor"/>
      <separator/>
      <reference ref="EvaluateExpression"/>
    </group>

    <group id="XDebugger.ToolWindow.LeftToolbar">
      <reference ref="Resume"/>
      <reference ref="Pause"/>
      <reference ref="Stop"/>
      <separator/>
      <reference ref="ViewBreakpoints"/>
      <reference ref="XDebugger.MuteBreakpoints"/>
    </group>

    <group id="XDebugger.ValueGroup" popup="false">
      <reference ref="XDebugger.Inspect"/>
      <reference ref="XDebugger.SetValue"/>
      <reference ref="XDebugger.CopyValue"/>
      <reference ref="XDebugger.CompareValueWithClipboard"/>
      <reference ref="XDebugger.CopyName"/>
      <reference ref="Debugger.MarkObject"/>
    </group>

    <group id="XDebugger.Evaluation.Dialog.Tree.Popup">
      <reference ref="XDebugger.ValueGroup"/>
    </group>

    <group id="XDebugger.Variables.Tree.Popup">
      <reference ref="XDebugger.ValueGroup"/>
      <reference ref="XDebugger.JumpToSource"/>
      <reference ref="XDebugger.AddToWatches"/>
    </group>

    <group id="XDebugger.Variables.Tree.Toolbar">
    </group>

    <group id="XDebugger.Watches.Tree.Popup">
      <reference ref="XDebugger.NewWatch"/>
      <reference ref="XDebugger.RemoveWatch"/>
      <reference ref="XDebugger.RemoveAllWatches"/>
      <reference ref="XDebugger.EditWatch"/>
      <reference ref="XDebugger.ValueGroup"/>
    </group>

    <group id="XDebugger.Watches.Tree.Toolbar">
      <reference ref="XDebugger.NewWatch"/>
      <reference ref="XDebugger.RemoveWatch"/>
    </group>

    <group id="XDebugger.Inspect.Tree.Popup">
      <reference ref="XDebugger.ValueGroup"/>
    </group>

    <group id="XDebugger.Value.Hint.Tree.Popup">
      <reference ref="XDebugger.ValueGroup"/>
      <reference ref="XDebugger.AddToWatches"/>
    </group>

    <group id="XDebugger.Settings" icon="AllIcons.General.SecondaryGroup" popup="true">

    </group>

    <group id="RunnerLayoutActions">
      <group id="Runner.Layout">
        <action id="Runner.RestoreLayout" class="com.intellij.execution.ui.layout.actions.RestoreLayoutAction"
                icon="AllIcons.Debugger.RestoreLayout"/>
      </group>

      <group id="Runner.View.Popup">
        <action id="Runner.MinimizeView" class="com.intellij.execution.ui.layout.actions.MinimizeViewAction"
                icon="AllIcons.Actions.Minimize"/>
        <separator/>
        <action id="Runner.CloseView" class="com.intellij.execution.ui.layout.actions.CloseViewAction" icon="AllIcons.Actions.Cross"/>
        <action id="Runner.CloseOtherViews" class="com.intellij.execution.ui.layout.actions.CloseOtherViewsAction"
                icon="AllIcons.Actions.Cross"/>
        <action id="Runner.CloseAllViews" class="com.intellij.execution.ui.layout.actions.CloseAllViewsAction"
                icon="AllIcons.Actions.Cross"/>
        <separator/>
        <group id="Runner.Focus">
          <action id="Runner.FocusOnStartup" class="com.intellij.execution.ui.actions.FocusOnStartAction"/>
        </group>
      </group>


      <group id="Runner.View.Toolbar">
        <reference ref="Runner.MinimizeView"/>
        <reference ref="Runner.CloseView"/>
      </group>
    </group>

    <group id="LocalHistory" class="com.intellij.history.integration.ui.actions.LocalHistoryGroup" popup="true">
      <action id="LocalHistory.ShowHistory" class="com.intellij.history.integration.ui.actions.ShowHistoryAction"/>
      <action id="LocalHistory.ShowSelectionHistory" class="com.intellij.history.integration.ui.actions.ShowSelectionHistoryAction"/>
      <action id="LocalHistory.PutLabel" class="com.intellij.history.integration.ui.actions.PutLabelAction"/>

      <add-to-group group-id="VersionControlsGroup" anchor="first"/>
      <add-to-group group-id="VcsGroups" anchor="first"/>
    </group>

    <group id="TestTreePopupMenu">
      <reference ref="RunContextGroup"/>
      <separator/>
      <reference ref="EditSource"/>
      <reference ref="ViewSource"/>
    </group>

    <group id="ConsoleView.PopupMenu">
      <reference ref="ConsoleEditorPopupMenu"/>
      <separator/>
      <action id="ConsoleView.ClearAll" class="com.intellij.execution.impl.ConsoleViewImpl$ClearAllAction"/>
    </group>

    <group>
      <action class="com.intellij.execution.testframework.actions.ViewAssertEqualsDiffAction" text="View assertEquals Difference"
              id="openAssertEqualsDiff"/>
      <separator/>
      <add-to-group anchor="first" group-id="TestTreePopupMenu"/>
    </group>
    <!-- SM Test Runner Actions -->
    <group id="SMTestRunnerTestsTree">
      <separator/>
      <action id="com.intellij.execution.testframework.sm.runner.ui.statistics.ShowStatisticsAction"
              class="com.intellij.execution.testframework.sm.runner.ui.statistics.ShowStatisticsAction"
              text="Show Statistics"/>
      <add-to-group group-id="TestTreePopupMenu" anchor="last"/>
    </group>
    <group id="SMTestRunnerStatistics">
      <separator/>
      <action id="com.intellij.execution.testframework.sm.runner.ui.statistics.ShowTestProxy"
              class="com.intellij.execution.testframework.sm.runner.ui.statistics.ShowTestProxy"
              text="Navigate to Test"/>
      <add-to-group group-id="TestTreePopupMenu" anchor="last"/>
    </group>

    <action id="DumpLookupElementWeights" class="com.intellij.internal.DumpLookupElementWeights" text="Dump lookup element weights to log">
      <add-to-group group-id="MaintenanceGroup" anchor="last"/>
    </action>

    <action id="Arrangement.Rule.Add" class="com.intellij.application.options.codeStyle.arrangement.action.AddArrangementRuleAction"/>
    <action id="Arrangement.Rule.Remove" class="com.intellij.application.options.codeStyle.arrangement.action.RemoveArrangementRuleAction"/>
    <action id="Arrangement.Rule.Edit"
            class="com.intellij.application.options.codeStyle.arrangement.action.EditArrangementRuleAction"
            icon="AllIcons.Actions.Edit"/>
    <action id="Arrangement.Rule.Match.Condition.Move.Up"
            class="com.intellij.application.options.codeStyle.arrangement.action.MoveArrangementMatchingRuleUpAction"
            icon="AllIcons.ToolbarDecorator.MoveUp"/>
    <action id="Arrangement.Rule.Match.Condition.Move.Down"
            class="com.intellij.application.options.codeStyle.arrangement.action.MoveArrangementMatchingRuleDownAction"
            icon="AllIcons.ToolbarDecorator.MoveDown"/>
    <action id="Arrangement.Rule.Group.Condition.Move.Up"
            class="com.intellij.application.options.codeStyle.arrangement.action.MoveArrangementGroupingRuleUpAction"
            icon="AllIcons.ToolbarDecorator.MoveUp"/>
    <action id="Arrangement.Rule.Group.Condition.Move.Down"
            class="com.intellij.application.options.codeStyle.arrangement.action.MoveArrangementGroupingRuleDownAction"
            icon="AllIcons.ToolbarDecorator.MoveDown"/>

    <group id="Arrangement.Rule.Match.Control.Context.Menu">
      <reference ref="Arrangement.Rule.Add"/>
      <reference ref="Arrangement.Rule.Remove"/>
      <reference ref="Arrangement.Rule.Edit"/>
    </group>

    <group id="Arrangement.Rule.Match.Control.ToolBar">
      <reference ref="Arrangement.Rule.Add"/>
      <reference ref="Arrangement.Rule.Remove"/>
      <reference ref="Arrangement.Rule.Match.Condition.Move.Up"/>
      <reference ref="Arrangement.Rule.Match.Condition.Move.Down"/>
    </group>

    <group id="Arrangement.Rule.Group.Control.ToolBar">
      <reference ref="Arrangement.Rule.Group.Condition.Move.Up"/>
      <reference ref="Arrangement.Rule.Group.Condition.Move.Down"/>
    </group>


    <action id="EditorLookupUp" class="com.intellij.codeInsight.lookup.impl.LookupActionHandler$UpAction"/>
    <action id="EditorLookupDown" class="com.intellij.codeInsight.lookup.impl.LookupActionHandler$DownAction"/>

    <action id="RerunFailedTests" class="com.intellij.execution.testframework.actions.AbstractRerunFailedTestsAction"
            icon="AllIcons.RunConfigurations.RerunFailedTests"/>

    <action id="FileChooser.GotoModule" class="com.intellij.openapi.fileChooser.actions.GotoModuleDirectory"
            icon="AllIcons.Nodes.Module">
      <add-to-group group-id="FileChooserToolbar" anchor="after" relative-to-action="FileChooser.GotoProject"/>
    </action>


    <!-- File -->
    <group id="OpenProjectGroup">
      <action id="NewProject" class="com.intellij.platform.NewDirectoryProjectAction"/>
      <action id="NewModule" class="com.intellij.openapi.actionSystem.EmptyAction"/>
      <!--com.intellij.openapi.roots.ui.configuration.actions.NewModuleAction-->
      <action id="ImportProject" class="com.intellij.ide.actions.ImportProjectAction" text="Import Project..."/>
      <action id="ImportModule" class="com.intellij.openapi.actionSystem.EmptyAction" text="Import Module..."/>
      <!--com.intellij.ide.actions.ImportModuleAction-->
      <action id="OpenProject" class="com.intellij.ide.actions.OpenProjectAction"/>

      <add-to-group group-id="FileOpenGroup" anchor="first"/>
    </group>
    <action id="NewElement" class="com.intellij.ide.actions.NewElementAction">
      <add-to-group group-id="OpenProjectGroup" anchor="before" relative-to-action="OpenFile"/>
    </action>

    <group>
      <add-to-group group-id="ExportImportGroup" anchor="first"/>
    </group>
    <action id="SaveAsNewFormat" class="com.intellij.ide.actions.SaveAsDirectoryBasedFormatAction" text="Save as Directory-Based Format...">
      <add-to-group group-id="ExportImportGroup" anchor="last"/>
    </action>

    <!-- Edit -->
    <reference ref="EditorCompleteStatement">
      <add-to-group group-id="EditSmartGroup" anchor="first"/>
    </reference>

    <!-- View -->
    <reference ref="DelegateMethods">
      <add-to-group group-id="CodeMenu" anchor="after" relative-to-action="ImplementMethods"/>
    </reference>

    <!-- Analyze -->
    <group id="AnalyzeActions">
    </group>

    <group id="AnalyzeMenu" popup="true">
      <separator/>
      <reference ref="AnalyzeActions"/>
      <add-to-group group-id="MainMenu" anchor="after" relative-to-action="CodeMenu"/>
    </group>

    <group id="InspectCodeGroup" text="Inspect Code Actions">
      <action id="InspectCode" class="com.intellij.codeInspection.actions.CodeInspectionAction"/>
      <action id="RunInspection" class="com.intellij.codeInspection.actions.RunInspectionAction"/>
      <action id="PopupHector" class="com.intellij.codeInsight.daemon.impl.PopupHectorAction"/>
      <action id="ViewOfflineInspection" class="com.intellij.codeInspection.actions.ViewOfflineResultsAction"/>
      <add-to-group group-id="AnalyzeMenu" anchor="first"/>
    </group>

    <group id="BuildMenu" popup="true">->
      <action id="CompileDirty" class="com.intellij.compiler.actions.CompileDirtyAction" icon="AllIcons.Actions.Compile"/>
      <action id="MakeModule" class="com.intellij.compiler.actions.MakeModuleAction"/>
      <action id="Compile" class="com.intellij.compiler.actions.CompileAction"/>

      <action id="RunAPT" class="com.intellij.openapi.actionSystem.EmptyAction"/>
      <!--com.intellij.compiler.actions.ProcessAnnotationsAction-->
      <separator/>
      <action id="CompileProject" class="com.intellij.compiler.actions.CompileProjectAction"/>
      <separator/>
      <!--<action id="GenerateAntBuild" class="com.intellij.compiler.actions.GenerateAntBuildAction"/>

      <separator/>  -->
      <action id="BuildArtifact" class="com.intellij.compiler.actions.BuildArtifactAction"/>
      <add-to-group group-id="MainMenu" anchor="before" relative-to-action="RunMenu"/>
    </group>

    <group id="CompilerErrorViewPopupMenu">
    </group>

    <!-- Tools -->
    <action id="ConsoleView.FoldLinesLikeThis" class="com.intellij.execution.console.FoldLinesLikeThis" text="Fold Lines Like This">
      <add-to-group group-id="ConsoleEditorPopupMenu" anchor="after" relative-to-action="$SearchWeb"/>
    </action>


    <action id="StartupWizard" class="com.intellij.ide.startupWizard.StartupWizardAction">
      <add-to-group group-id="FileSettingsGroup" anchor="last"/>
    </action>

    <group id="Internal1" text="IDEA Internal Actions" internal="true">
      <separator/>
      <action id="Merge3Files" internal="true" class="com.intellij.openapi.diff.actions.MergeFilesAction"/>
      <separator/>
      <action internal="true" id="DecodeBytesAction" class="com.intellij.internal.encodings.DecodeBytesAction"/>
      <group id="Internal.Dump" text="Dump" internal="true" popup="true">
        <action id="DumpExtensions" internal="true" text="Dump Extensions" class="com.intellij.internal.DumpExtensionsAction"/>
        <action id="DumpInspectionDescriptions" internal="true" class="com.intellij.internal.DumpInspectionDescriptionsAction"/>
        <action id="DumpIntentionsDescriptions" internal="true" class="com.intellij.internal.DumpIntentionsAction"/>
        <action id="DumpConfigurationTypes" internal="true" class="com.intellij.internal.DumpConfigurationTypesAction"/>
        <action id="DumpDirectoryIndex" internal="true" class="com.intellij.internal.DumpDirectoryInfoAction"/>
        <action id="ScanSourceCommentsAction" internal="true" class="com.intellij.tools.ScanSourceCommentsAction"
                text="Dump all comments in the project"/>
      </group>

      <separator/>
      <group id="Internal.VFS" text="VFS" popup="true">
        <action id="VirtualFileInfo" internal="true" class="com.intellij.openapi.vfs.impl.local.VirtualFileInfoAction"/>
        <action id="MarkFileDirty" internal="true" class="com.intellij.openapi.vcs.changes.actions.MarkFileDirtyAction"
                text="Mark File Dirty"/>
        <separator/>
        <action id="CheckVfsSanity" internal="true" class="com.intellij.openapi.vfs.newvfs.persistent.CheckSanityAction"
                text="Check VFS sanity"/>
        <action id="LoadAllContent" internal="true" class="com.intellij.internal.LoadAllContentsAction" text="Load all files content"/>
        <action id="LoadAllVFSContent" internal="true" class="com.intellij.internal.LoadAllVfsStoredContentsAction"
                text="Load all VFS stored files content"/>
        <action id="ComputeVFStatistics" internal="true" class="com.intellij.internal.ComputeVirtualFileNameStatAction"/>
        <separator/>
        <action internal="true" id="PruneEmptyDirectories" class="com.intellij.ide.actions.PruneEmptyDirectoriesAction"
                text="Prune Empty Directories"/>
        <action internal="true" id="FixLineSeparators" class="com.intellij.ide.actions.FixLineSeparatorsAction" text="Fix Line Separators"/>
      </group>

      <separator/>

      <action internal="true" id="CompilerTest" class="com.intellij.openapi.actionSystem.EmptyAction"
              text="Test Rebuild Performance"/>
      <!--com.intellij.compiler.impl.javaCompiler.api.CompilerPerfTestAction-->

      <add-to-group group-id="Internal" anchor="last"/>
    </group>

    <!-- Help -->
    <action id="WhatsNewAction" class="com.intellij.ide.actions.WhatsNewAction">
      <add-to-group group-id="HelpMenu" anchor="after" relative-to-action="OnlineDocAction"/>
    </action>

    <!-- Toolbar -->

    <group id="ToolbarMakeGroup">
      <reference ref="CompileDirty"/>

      <add-to-group group-id="ToolbarRunGroup" relative-to-action="RunConfiguration" anchor="before"/>
    </group>


    <action id="AnalyzeStacktraceOnError" class="com.intellij.unscramble.AnalyzeStacktraceOnErrorAction" text="Analyze _Stacktrace"/>

    <reference ref="Compile">
      <add-to-group group-id="EditorPopupMenu.Run" anchor="first"/>
    </reference>

    <reference ref="RunAPT">
      <add-to-group group-id="EditorPopupMenu.Run" anchor="first"/>
    </reference>

    <group id="EditorTabCompileGroup">
      <reference ref="Compile"/>
      <reference ref="RunAPT"/>
      <add-to-group group-id="EditorTabPopupMenuEx" anchor="before" relative-to-action="RunContextPopupGroup"/>
    </group>

    <action id="ModuleSettings" class="com.intellij.ide.actions.ShowModulePropertiesAction"/>
    <action id="OpenModuleSettings" class="com.intellij.ide.actions.OpenModuleSettingsAction" use-shortcut-of="EditSource"/>
    <group id="MoveModuleToGroup" class="com.intellij.ide.projectView.impl.MoveModuleToGroupTopLevel" popup="true"/>

    <reference ref="AnalyzeMenu">
      <add-to-group group-id="ProjectViewPopupMenu" anchor="after" relative-to-action="ReplaceInPath"/>
      <add-to-group group-id="NavbarPopupMenu" anchor="after" relative-to-action="ReplaceInPath"/>
      <add-to-group group-id="FavoritesViewPopupMenu" anchor="after" relative-to-action="ReplaceInPath"/>
      <add-to-group group-id="EditorPopupMenu1" anchor="after" relative-to-action="FindUsages"/>
    </reference>

    <group id="ProjectViewAnalysisGroup">
      <reference ref="TypeHierarchy"/>
      <reference ref="ReformatCode"/>
      <reference ref="OptimizeImports"/>

      <add-to-group group-id="ProjectViewPopupMenuModifyGroup" anchor="first"/>
    </group>

    <group id="ProjectViewCompileGroup">
      <reference ref="MakeModule"/>
      <reference ref="Compile"/>
      <reference ref="RunAPT"/>

      <add-to-group group-id="ProjectViewPopupMenuRunGroup" anchor="first"/>
    </group>

    <action id="PackageFile" class="com.intellij.packaging.impl.ui.actions.PackageFileAction" use-shortcut-of="Compile">
      <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="Compile"/>
      <add-to-group group-id="ProjectViewPopupMenu" anchor="before" relative-to-action="MakeModule"/>
      <add-to-group group-id="FavoritesViewPopupMenu" anchor="before" relative-to-action="MakeModule"/>
      <add-to-group group-id="ScopeViewPopupMenu" anchor="before" relative-to-action="MakeModule"/>
    </action>


    <reference ref="OpenModuleSettings">
      <add-to-group group-id="ProjectViewPopupMenuSettingsGroup" anchor="first"/>
    </reference>
    <reference ref="MoveModuleToGroup">
      <add-to-group group-id="ProjectViewPopupMenuSettingsGroup" anchor="after" relative-to-action="OpenModuleSettings"/>
    </reference>

    <group id="StructureViewCompileGroup">
      <separator/>
      <reference ref="Compile"/>
      <reference ref="RunAPT"/>

      <add-to-group group-id="StructureViewPopupMenu" anchor="after" relative-to-action="RunContextPopupGroup"/>
    </group>

    <group id="TypeHierarchyPopupMenu">
      <reference ref="TypeHierarchy.Class"/>
      <reference ref="TypeHierarchy.Subtypes"/>
      <reference ref="TypeHierarchy.Supertypes"/>
      <separator/>
      <reference ref="EditSource"/>
      <separator/>
      <reference ref="FindUsages"/>
      <reference ref="RefactoringMenu"/>
      <separator/>
      <reference ref="AddToFavorites"/>
      <separator/>
      <reference ref="RunContextPopupGroup"/>
      <separator/>
      <reference ref="ReformatCode"/>
      <reference ref="OptimizeImports"/>
      <reference ref="$Delete"/>
      <separator/>
      <reference ref="Compile"/>
      <reference ref="RunAPT"/>
      <reference ref="VersionControlsGroup"/>

      <separator/>
      <reference ref="ExternalToolsGroup"/>
      <separator/>
      <reference ref="CompareTwoFiles"/>
      <reference ref="CompareFileWithEditor"/>
    </group>

    <group id="MethodHierarchyPopupMenu">
      <reference ref="EditSource"/>
      <separator/>
      <reference ref="FindUsages"/>
      <reference ref="RefactoringMenu"/>
      <separator/>
      <reference ref="AddToFavorites"/>
      <separator/>
      <reference ref="Compile"/>
      <reference ref="RunContextPopupGroup"/>
      <separator/>
      <reference ref="ReformatCode"/>
      <reference ref="OptimizeImports"/>
      <separator/>
      <reference ref="VersionControlsGroup"/>
      <separator/>
      <reference ref="ExternalToolsGroup"/>
      <separator/>
      <reference ref="CompareTwoFiles"/>
      <reference ref="CompareFileWithEditor"/>
    </group>

    <group id="CallHierarchyPopupMenu">
      <reference ref="EditSource"/>
      <separator/>
      <reference ref="FindUsages"/>
      <reference ref="RefactoringMenu"/>
      <separator/>
      <reference ref="AddToFavorites"/>
      <separator/>
      <reference ref="Compile"/>
      <reference ref="RunAPT"/>
      <reference ref="RunContextPopupGroup"/>
      <separator/>

      <reference ref="ReformatCode"/>
      <reference ref="OptimizeImports"/>
      <separator/>
      <reference ref="VersionControlsGroup"/>

      <separator/>
      <reference ref="ExternalToolsGroup"/>
      <separator/>
      <reference ref="CompareTwoFiles"/>
      <reference ref="CompareFileWithEditor"/>
    </group>

    <group id="ShowPackageDepsGroup"/>

    <group id="CommanderPopupMenu">
      <reference ref="NewGroup"/>
      <reference ref="AssociateWithFileType"/>
      <separator/>
      <reference ref="CutCopyPasteGroup"/>
      <reference ref="EditSource"/>
      <separator/>
      <reference ref="FindUsages"/>
      <reference ref="FindInPath"/>
      <reference ref="ReplaceInPath"/>
      <reference ref="InspectCode"/>
      <reference ref="ShowPackageDepsGroup"/>
      <reference ref="RefactoringMenu"/>
      <separator/>
      <reference ref="AddToFavorites"/>
      <separator/>
      <reference ref="TypeHierarchy"/>
      <reference ref="ReformatCode"/>
      <reference ref="OptimizeImports"/>
      <reference ref="$Delete"/>
      <separator/>
      <reference ref="Compile"/>
      <reference ref="RunAPT"/>
      <reference ref="RunContextPopupGroup"/>
      <separator/>
      <reference ref="VersionControlsGroup"/>

      <reference ref="CompareTwoFiles"/>
      <reference ref="CompareFileWithEditor"/>
      <separator/>
      <reference ref="ExternalToolsGroup"/>
    </group>

    <group id="TestStatisticsTablePopupMenu">
      <reference ref="RunContextGroup"/>
      <separator/>
      <reference ref="EditSource"/>
      <reference ref="ViewSource"/>
      <separator/>
    </group>

    <!--  TODO: fix
      <group id="UsageView.Popup">-->
    <!--<reference ref="EditSource"/>-->
    <!--<action id="UsageView.Include" class="com.intellij.usages.actions.IncludeUsageAction"/>-->
    <!--<action id="UsageView.Exclude" class="com.intellij.usages.actions.ExcludeUsageAction"/>-->
    <!--<separator/>-->
    <!--<reference ref="AddToFavorites"/>-->
    <!--<reference ref="FindUsages"/>-->
    <!--<action id="UsageView.ShowRecentFindUsages" class="com.intellij.find.impl.ShowRecentFindUsagesAction" icon="/actions/back.png"/>-->
    <!--<separator/>-->
    <!--<reference ref="VersionControlsGroup"/>-->
    <!--<separator/>-->
    <!--<reference ref="ExternalToolsGroup"/>-->
    <!--</group>-->

    <!-- ****************************************************************** -->


    <group id="WelcomeScreen.Documentation.IDEA">
      <action id="WelcomeScreen.JetBrainsTV.IDEA" class="com.intellij.openapi.wm.impl.welcomeScreen.IdeaJetBrainsTvAction"
              icon="AllIcons.General.JetbrainsTvIdea"/>
      <action id="WelcomeScreen.DevelopPlugins" class="com.intellij.openapi.wm.impl.welcomeScreen.DevelopPluginsAction"
              icon="AllIcons.General.PluginManager"/>

      <add-to-group group-id="WelcomeScreen.Documentation" anchor="last"/>
    </group>

    <group id="WelcomeScreen.Configure.IDEA">
      <action class="com.intellij.ide.actions.TemplateProjectSettingsGroup"/>
      <add-to-group group-id="WelcomeScreen.Configure" anchor="last"/>
    </group>

    <!-- <action id="AddFrameworkSupport" class="com.intellij.ide.util.frameworkSupport.AddFrameworkSupportAction">
       <add-to-group group-id="ProjectViewPopupMenu" anchor="after" relative-to-action="WeighingNewGroup"/>
       <add-to-group group-id="NavbarPopupMenu" anchor="after" relative-to-action="WeighingNewGroup"/>
     </action>  -->


    <group id="DiffPanel.Toolbar.IDEA">
      <reference ref="Find"/>
      <add-to-group group-id="DiffPanel.Toolbar" anchor="after" relative-to-action="$Copy"/>
    </group>

    <group>
      <action id="MarkSourceRoot" class="com.intellij.ide.projectView.actions.MarkRootAction" icon="AllIcons.Modules.SourceRoot"/>
      <action id="MarkResourceRoot" class="com.intellij.ide.projectView.actions.MarkProductionResourceRootAction"
              icon="AllIcons.Modules.ResourcesRoot"/>
      <action id="MarkTestSourceRoot" class="com.intellij.ide.projectView.actions.MarkTestSourceRootAction"
              icon="AllIcons.Modules.TestRoot"/>
      <action id="MarkTestResourceRoot" class="com.intellij.ide.projectView.actions.MarkTestResourceRootAction"
              icon="AllIcons.Modules.TestResourcesRoot"/>
      <action id="MarkExcludeRoot" class="com.intellij.ide.projectView.actions.MarkExcludeRootAction" icon="AllIcons.Modules.ExcludeRoot"/>
      <action id="UnmarkRoot" class="com.intellij.ide.projectView.actions.UnmarkRootAction"/>
      <add-to-group group-id="MarkRootGroup"/>
    </group>

    <group>
      <action id="CreateLibraryFromFile" class="com.intellij.openapi.actionSystem.EmptyAction"/>
      <!--com.intellij.ide.projectView.actions.MarkLibraryRootAction-->
      <!--<action id="ImportModuleFromImlFile" class="com.intellij.ide.projectView.actions.ImportModuleFromImlFileAction"/> -->
      <add-to-group group-id="ProjectViewPopupMenuSettingsGroup" relative-to-action="MarkRootGroup" anchor="after"/>
    </group>

    <group>
      <action id="SaveProjectAsTemplateAction" class="com.intellij.openapi.actionSystem.EmptyAction" text="Save Project as Template..."/>
      <!--com.intellij.platform.templates.SaveProjectAsTemplateAction-->
      <action id="ManageProjectTemplatesAction" class="com.intellij.openapi.actionSystem.EmptyAction" text="Manage Project Templates..."/>
      <!--com.intellij.platform.templates.ManageProjectTemplatesAction-->
      <add-to-group group-id="ToolsBasicGroup" anchor="after" relative-to-action="SaveFileAsTemplate"/>
    </group>

    <action id="ShowPackageDeps" class="com.intellij.packageDependencies.actions.AnalyzeDependenciesAction">
      <add-to-group group-id="ShowPackageDepsGroup" anchor="first"/>
      <add-to-group group-id="AnalyzeActions" anchor="first"/>
    </action>
    <action id="ShowBackwardPackageDeps" class="com.intellij.packageDependencies.actions.BackwardDependenciesAction">
      <add-to-group group-id="AnalyzeActions" relative-to-action="ShowPackageDeps" anchor="after"/>
    </action>
    <action id="ShowDependenciesOnTarget" class="com.intellij.packageDependencies.actions.AnalyzeDependenciesOnSpecifiedTargetAction">
      <add-to-group group-id="AnalyzeActions" relative-to-action="ShowBackwardPackageDeps" anchor="after"/>
    </action>
    <action id="ShowModulesDependencies" class="com.intellij.moduleDependencies.ShowModuleDependenciesAction">
      <add-to-group group-id="AnalyzeActions" anchor="last"/>
    </action>
  </actions>

  <application-components>
    <component>
      <implementation-class>com.intellij.openapi.components.impl.ServiceManagerImpl</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.util.registry.RegistryState</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.application.ApplicationInfo</interface-class>
      <implementation-class>com.intellij.openapi.application.impl.ApplicationInfoImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.project.ProjectManager</interface-class>
      <implementation-class>com.intellij.openapi.project.impl.ProjectManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.fileTypes.FileTypeManager</interface-class>
      <implementation-class>com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.vfs.VirtualFileManager</interface-class>
      <implementation-class>com.intellij.openapi.vfs.PlatformVirtualFileManager</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.vfs.pointers.VirtualFilePointerManager</interface-class>
      <implementation-class>com.intellij.openapi.vfs.impl.VirtualFilePointerManagerImpl</implementation-class>
      <compiler-server-implementation-class>org.consulo.compiler.server.fileSystem.CompilerServerVirtualFilePointerManager</compiler-server-implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.vfs.newvfs.ManagingFS</interface-class>
      <implementation-class>com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl</implementation-class>
      <compiler-server-implementation-class>org.consulo.compiler.server.fileSystem.CompilerServerManagingFSImpl</compiler-server-implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.vfs.LocalFileSystem</interface-class>
      <implementation-class>com.intellij.openapi.vfs.impl.local.LocalFileSystemImpl</implementation-class>
      <compiler-server-implementation-class>org.consulo.compiler.server.fileSystem.CompilerServerLocalFileSystemImpl</compiler-server-implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.vfs.JarFileSystem</interface-class>
      <implementation-class>com.intellij.openapi.vfs.impl.jar.JarFileSystemImpl</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.openapi.vfs.impl.zip.ZipFileSystemImpl</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.openapi.vfs.ex.temp.TempFileSystem</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.ide.DataManager</interface-class>
      <implementation-class>com.intellij.ide.impl.DataManagerImpl</implementation-class>
      <headless-implementation-class>com.intellij.idea.CommandLineApplication$MyDataManagerImpl</headless-implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.keymap.KeymapManager</interface-class>
      <implementation-class>com.intellij.openapi.keymap.impl.KeymapManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.actionSystem.ActionManager</interface-class>
      <implementation-class>com.intellij.openapi.actionSystem.impl.ActionManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.fileEditor.FileDocumentManager</interface-class>
      <implementation-class>com.intellij.openapi.fileEditor.impl.FileDocumentManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.editor.EditorFactory</interface-class>
      <implementation-class>com.intellij.openapi.editor.impl.EditorFactoryImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.history.LocalHistory</interface-class>
      <implementation-class>com.intellij.history.integration.LocalHistoryImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.command.undo.UndoManager</interface-class>
      <implementation-class>com.intellij.openapi.command.impl.UndoManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.command.undo.DocumentReferenceManager</interface-class>
      <implementation-class>com.intellij.openapi.command.impl.DocumentReferenceManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.application.PathMacros</interface-class>
      <implementation-class>com.intellij.application.options.PathMacrosImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.ide.ui.LafManager</interface-class>
      <implementation-class>com.intellij.ide.ui.laf.LafManagerImpl</implementation-class>
      <headless-implementation-class>com.intellij.ide.ui.laf.HeadlessLafManagerImpl</headless-implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.ide.UiActivityMonitor</interface-class>
      <implementation-class>com.intellij.ide.UiActivityMonitorImpl</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.diagnostic.PerformanceWatcher</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.notification.NotificationsConfiguration</interface-class>
      <implementation-class>com.intellij.notification.impl.NotificationsConfigurationImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.notification.NotificationsManager</interface-class>
      <implementation-class>com.intellij.notification.impl.NotificationsManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.internal.statistic.persistence.UsageStatisticsPersistenceComponent</interface-class>
      <implementation-class>com.intellij.internal.statistic.persistence.UsageStatisticsPersistenceComponent</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.internal.statistic.persistence.ApplicationStatisticsPersistenceComponent</interface-class>
      <implementation-class>com.intellij.internal.statistic.persistence.ApplicationStatisticsPersistenceComponent</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.ide.ClipboardSynchronizer</interface-class>
      <implementation-class>com.intellij.ide.ClipboardSynchronizer</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.openapi.util.FoundationLoader</implementation-class>
      <headless-implementation-class/>
    </component>

    <component>
      <implementation-class>com.intellij.notification.EventLog</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.util.net.HttpConfigurable</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.ide.SwingCleanuper</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.util.DimensionService</interface-class>
      <implementation-class>com.intellij.openapi.util.DimensionService</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.ide.ui.UISettings</interface-class>
      <implementation-class>com.intellij.ide.ui.UISettings</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.ide.IdeTooltipManager</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.openapi.actionSystem.impl.MouseGestureManager</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.ide.SaveAndSyncHandler</interface-class>
      <implementation-class>com.intellij.ide.SaveAndSyncHandlerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.ide.FrameStateManager</interface-class>
      <implementation-class>com.intellij.ide.FrameStateManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.ide.GeneralSettings</interface-class>
      <implementation-class>com.intellij.ide.GeneralSettings</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.ide.MacOSApplicationProvider</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.ui.switcher.QuickAccessSettings</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.updateSettings.impl.UpdateCheckerComponent</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.wm.WindowManager</interface-class>
      <implementation-class>com.intellij.openapi.wm.impl.WindowManagerImpl</implementation-class>
      <headless-implementation-class>com.intellij.openapi.wm.impl.TestWindowManager</headless-implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.ide.RecentProjectsManagerBase</interface-class>
      <implementation-class>com.intellij.ide.RecentDirectoryProjectsManagerEx</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.editor.ex.EditorSettingsExternalizable</interface-class>
      <implementation-class>com.intellij.openapi.editor.ex.EditorSettingsExternalizable</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.ide.actionMacro.ActionMacroManager</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.actionSystem.ex.QuickListsManager</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.editor.impl.VisibleEditorsTracker</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.fileEditor.impl.text.TextEditorProvider</interface-class>
      <implementation-class>com.intellij.openapi.fileEditor.impl.text.PsiAwareTextEditorProvider</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.formatting.FormatterEx</interface-class>
      <implementation-class>com.intellij.formatting.FormatterImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.util.indexing.FileBasedIndex</interface-class>
      <implementation-class>com.intellij.util.indexing.FileBasedIndexImpl</implementation-class>
      <compiler-server-implementation-class>org.consulo.compiler.server.fileSystem.CompilerServerFileBasedIndexImpl</compiler-server-implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.psi.stubs.StubIndex</interface-class>
      <implementation-class>com.intellij.psi.stubs.StubIndexImpl</implementation-class>
      <compiler-server-implementation-class>org.consulo.compiler.server.index.CompilerServerStubIndexImpl</compiler-server-implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.tools.ToolManager</interface-class>
      <implementation-class>com.intellij.tools.ToolManager</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.psi.stubs.SerializationManager</interface-class>
      <implementation-class>com.intellij.psi.stubs.SerializationManagerImpl</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.openapi.roots.impl.libraries.LibraryKindLoader</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.openapi.vcs.changes.VetoSavingCommittingDocumentsAdapter</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.vcs.changes.VcsDirtyScopeVfsListener</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.lifecycle.PeriodicalTasksCloser</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.execution.ExecutorRegistry</interface-class>
      <implementation-class>com.intellij.execution.ExecutorRegistryImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.execution.RunnerRegistry</interface-class>
      <implementation-class>com.intellij.execution.impl.RunnerRegistryImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.wm.IdeFocusManager</interface-class>
      <implementation-class>com.intellij.openapi.wm.impl.FocusManagerImpl</implementation-class>
      <headless-implementation-class>com.intellij.openapi.wm.impl.IdeFocusManagerHeadless</headless-implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.compiler.impl.TranslatingCompilerFilesMonitor</interface-class>
      <implementation-class>com.intellij.compiler.impl.TranslatingCompilerFilesMonitor</implementation-class>
    </component>

    <component>
      <interface-class>org.consulo.compiler.server.rmi.CompilerServerConnector</interface-class>
      <implementation-class>org.consulo.compiler.server.rmi.impl.CompilerServerConnectorImpl</implementation-class>
      <compiler-server-implementation-class></compiler-server-implementation-class>
    </component>

    <!--Remote servers-->
    <component>
      <implementation-class>com.intellij.remoteServer.impl.configuration.deployment.DeployToServerConfigurationTypesRegistrar</implementation-class>
    </component>
  </application-components>

  <project-components>
    <component>
      <implementation-class>com.intellij.openapi.components.impl.ServiceManagerImpl</implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <implementation-class>com.intellij.notification.EventLog$ProjectTracker</implementation-class>
      <skipForDefaultProject/>
    </component>

    <component>
      <interface-class>com.intellij.openapi.command.undo.UndoManager</interface-class>
      <implementation-class>com.intellij.openapi.command.impl.UndoManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.project.ProjectReloadState</interface-class>
      <implementation-class>com.intellij.openapi.project.impl.ProjectReloadStateImpl</implementation-class>
      <option name="workspace" value="true"/>
    </component>

    <component>
      <interface-class>com.intellij.openapi.vcs.FileStatusManager</interface-class>
      <implementation-class>com.intellij.openapi.vcs.impl.FileStatusManagerImpl</implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <implementation-class>com.intellij.ui.EditorNotifications</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.vfs.encoding.EncodingProjectManager</interface-class>
      <implementation-class>com.intellij.openapi.vfs.encoding.EncodingProjectManagerImpl</implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <implementation-class>com.intellij.notification.impl.NotificationsManagerImpl$ProjectNotificationsComponent</implementation-class>
      <skipForDefaultProject/>
    </component>

    <component>
      <implementation-class>com.intellij.ui.switcher.SwitchManager</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.ui.switcher.QuickActionManager</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.ide.bookmarks.BookmarkManager</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.wm.ToolWindowManager</interface-class>
      <implementation-class>com.intellij.openapi.wm.impl.ToolWindowManagerImpl</implementation-class>
      <headless-implementation-class>com.intellij.openapi.wm.impl.ToolWindowHeadlessManagerImpl</headless-implementation-class>
      <option name="workspace" value="true"/>
    </component>
    <component>
      <interface-class>com.intellij.openapi.wm.IdeFocusManager</interface-class>
      <implementation-class>com.intellij.openapi.wm.impl.IdeFocusManagerImpl</implementation-class>
      <headless-implementation-class>com.intellij.openapi.wm.impl.IdeFocusManagerHeadless</headless-implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.wm.impl.WindowDressing</implementation-class>
      <skipForDefaultProject/>
    </component>

    <component>
      <interface-class>com.intellij.ide.impl.convert.ProjectFileVersion</interface-class>
      <implementation-class>com.intellij.ide.impl.convert.ProjectFileVersionImpl</implementation-class>
    </component>

    <!--<component>-->
    <!--<implementation-class>com.intellij.jsp.impl.browserprofile.BrowserProfileProvider</implementation-class>-->
    <!--</component>-->
    <component>
      <implementation-class>com.intellij.openapi.editor.impl.DocumentMarkupModelManager</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.fileEditor.impl.EditorHistoryManager</implementation-class>
      <option name="workspace" value="true"/>
    </component>
    <component>
      <interface-class>com.intellij.openapi.fileEditor.ex.IdeDocumentHistory</interface-class>
      <implementation-class>com.intellij.openapi.fileEditor.impl.IdeDocumentHistoryImpl</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.editor.LazyRangeMarkerFactory</implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <interface-class>com.intellij.codeInsight.highlighting.HighlightManager</interface-class>
      <implementation-class>com.intellij.codeInsight.highlighting.HighlightManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.roots.ProjectRootManager</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.ProjectRootManagerComponent</implementation-class>
      <loadForDefaultProject/>
    </component>
    <component>
      <interface-class>com.intellij.openapi.roots.impl.DirectoryIndex</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.DirectoryIndexImpl</implementation-class>
      <compiler-server-implementation-class>org.consulo.compiler.server.roots.impl.CompilerServerDirectoryIndex</compiler-server-implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <interface-class>com.intellij.psi.PsiManager</interface-class>
      <implementation-class>com.intellij.psi.impl.PsiManagerImpl</implementation-class>
      <loadForDefaultProject/>
    </component>
    <component>
      <interface-class>com.intellij.psi.impl.file.impl.PsiVFSListener</interface-class>
      <implementation-class>com.intellij.psi.impl.file.impl.PsiVFSListener</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.psi.PsiDocumentManager</interface-class>
      <implementation-class>com.intellij.psi.impl.PsiDocumentManagerImpl</implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <interface-class>com.intellij.openapi.module.ModuleManager</interface-class>
      <implementation-class>com.intellij.openapi.module.impl.ModuleManagerComponent</implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <interface-class>com.intellij.codeInsight.folding.CodeFoldingManager</interface-class>
      <implementation-class>com.intellij.codeInsight.folding.impl.CodeFoldingManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.fileEditor.FileEditorManager</interface-class>
      <implementation-class>com.intellij.openapi.fileEditor.impl.PsiAwareFileEditorManagerImpl</implementation-class>
      <headless-implementation-class>com.intellij.openapi.fileEditor.impl.TestEditorManagerImpl</headless-implementation-class>
      <option name="workspace" value="true"/>
    </component>

    <component>
      <interface-class>com.intellij.problems.WolfTheProblemSolver</interface-class>
      <implementation-class>com.intellij.codeInsight.problems.WolfTheProblemSolverImpl</implementation-class>
      <headless-implementation-class>com.intellij.codeInsight.problems.MockWolfTheProblemSolver</headless-implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.pom.tree.TreeAspect</interface-class>
      <implementation-class>com.intellij.pom.tree.TreeAspect</implementation-class>
      <loadForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.psi.impl.source.PostprocessReformattingAspect</implementation-class>
      <loadForDefaultProject/>
      <!-- <skipForDefaultProject/> -->
    </component>

    <component>
      <interface-class>com.intellij.codeInsight.daemon.DaemonCodeAnalyzer</interface-class>
      <implementation-class>com.intellij.codeInsight.daemon.impl.DaemonCodeAnalyzerImpl</implementation-class>
      <option name="workspace" value="true"/>
      <loadForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.DaemonListeners</implementation-class>
      <option name="workspace" value="true"/>
      <!--<loadForDefaultProject/>-->
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.EditorTracker</implementation-class>
      <loadForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.GeneralHighlightingPassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.LineMarkersPassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.VisibleLineMarkersPassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.ShowIntentionsPassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.IdentifierHighlighterPassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.refactoring.changeSignature.ChangeSignaturePassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.CodeFoldingPassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.IndentsPassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.InjectedCodeFoldingPassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.LocalInspectionsPassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.WholeFileLocalInspectionsPassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.ExternalToolPassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.WolfPassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.ShowAutoImportPassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.SlowLineMarkersPassFactory</implementation-class>
      <skipForDefaultProject/>
    </component>

    <component>
      <interface-class>com.intellij.codeInsight.template.TemplateManager</interface-class>
      <implementation-class>com.intellij.codeInsight.template.impl.TemplateManagerImpl</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.util.indexing.FileBasedIndexProjectHandler</implementation-class>
      <compiler-server-implementation-class></compiler-server-implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.codeInsight.navigation.CtrlMouseHandler</interface-class>
      <implementation-class>com.intellij.codeInsight.navigation.CtrlMouseHandler</implementation-class>
      <skipForDefaultProject/>
    </component>

    <component>
      <interface-class>com.intellij.pom.wrappers.PsiEventWrapperAspect</interface-class>
      <implementation-class>com.intellij.pom.wrappers.PsiEventWrapperAspect</implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <implementation-class>com.intellij.openapi.vcs.changes.VcsEventWatcher</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.codeInsight.preview.ImageOrColorPreviewProjectComponent</interface-class>
      <implementation-class>com.intellij.codeInsight.preview.ImageOrColorPreviewProjectComponent</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.openapi.roots.impl.PushedFilePropertiesUpdater</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.refactoring.changeSignature.ChangeSignatureGestureDetector</implementation-class>
      <skipForDefaultProject/>
    </component>

    <component>
      <implementation-class>com.intellij.openapi.vcs.impl.ModuleVcsDetector</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.profile.codeInspection.InspectionProjectProfileManager</interface-class>
      <implementation-class>com.intellij.profile.codeInspection.InspectionProjectProfileManagerImpl</implementation-class>
      <loadForDefaultProject/>
    </component>

    <component>
      <implementation-class>com.intellij.internal.statistic.updater.SendStatisticsProjectComponent</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.ProjectLevelVcsManager</interface-class>
      <implementation-class>com.intellij.openapi.vcs.impl.ProjectLevelVcsManagerImpl</implementation-class>
      <option name="workspace" value="true"/>
      <loadForDefaultProject/>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.changes.VcsChangeDetailsManager</interface-class>
      <implementation-class>com.intellij.openapi.vcs.changes.VcsChangeDetailsManager</implementation-class>
      <option name="workspace" value="true"/>
    </component>
    <!-- <component>
      <implementation-class>com.intellij.openapi.vcs.changes.dbCommitted.HistoryCacheManager</implementation-class>
      <option name="workspace" value="true"/>
    </component> -->
    <component>
      <implementation-class>com.intellij.openapi.vcs.impl.VcsDirectoryMappingStorage</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.impl.LineStatusTrackerManagerI</interface-class>
      <implementation-class>com.intellij.openapi.vcs.impl.LineStatusTrackerManager</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.vcs.update.RestoreUpdateTree</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDefaultProject/>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.changes.ChangeListManager</interface-class>
      <implementation-class>com.intellij.openapi.vcs.changes.ChangeListManagerImpl</implementation-class>
      <option name="workspace" value="true"/>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.changes.ChangesViewI</interface-class>
      <implementation-class>com.intellij.openapi.vcs.changes.ChangesViewManager</implementation-class>
      <headless-implementation-class>com.intellij.openapi.vcs.changes.DummyChangesView</headless-implementation-class>
      <option name="workspace" value="true"/>
      <skipForDefaultProject/>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.changes.VcsDirtyScopeManager</interface-class>
      <implementation-class>com.intellij.openapi.vcs.changes.VcsDirtyScopeManagerImpl</implementation-class>
      <option name="workspace" value="true"/>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.vcs.changes.patch.CreatePatchCommitExecutor</implementation-class>
      <option name="workspace" value="true"/>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.vcs.changes.shelf.ShelveChangesManager</implementation-class>
      <option name="workspace" value="true"/>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.vcs.changes.shelf.ShelvedChangesViewManager</implementation-class>
      <headless-implementation-class></headless-implementation-class>
      <option name="workspace" value="true"/>
      <skipForDefaultProject/>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.changes.ui.ChangesViewContentI</interface-class>
      <implementation-class>com.intellij.openapi.vcs.changes.ui.ChangesViewContentManager</implementation-class>
      <headless-implementation-class>com.intellij.openapi.vcs.changes.ui.DummyChangesViewContentManager</headless-implementation-class>
      <option name="workspace" value="true"/>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.vcs.changes.committed.CommittedChangesCache</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.vcs.changes.committed.OutdatedVersionNotifier</implementation-class>
      <skipForDefaultProject/>
      <headless-implementation-class/>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.vcs.changes.committed.IncomingChangesIndicator</implementation-class>
      <headless-implementation-class/>
      <skipForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.vcs.impl.VcsFileStatusProvider</implementation-class>
      <skipForDefaultProject/>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.impl.VcsBaseContentProvider</interface-class>
      <implementation-class>com.intellij.openapi.vcs.impl.VcsFileStatusProvider</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.contentAnnotation.VcsContentAnnotation</interface-class>
      <implementation-class>com.intellij.openapi.vcs.contentAnnotation.VcsContentAnnotationImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.vcs.contentAnnotation.ContentAnnotationCache</interface-class>
      <implementation-class>com.intellij.openapi.vcs.contentAnnotation.ContentAnnotationCacheImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.execution.RunManager</interface-class>
      <implementation-class>com.intellij.execution.impl.RunManagerImpl</implementation-class>
      <option name="workspace" value="true"/>
      <loadForDefaultProject/>
    </component>
    <component>
      <interface-class>com.intellij.execution.ExecutionTargetManager</interface-class>
      <implementation-class>com.intellij.execution.ExecutionTargetManagerImpl</implementation-class>
      <option name="workspace" value="true"/>
      <loadForDefaultProject/>
    </component>
    <component>
      <implementation-class>com.intellij.execution.impl.ProjectRunConfigurationManager</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.execution.ExecutionManager</interface-class>
      <implementation-class>com.intellij.execution.impl.ExecutionManagerImpl</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.ide.favoritesTreeView.FavoritesManager</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDefaultProject/>
    </component>

    <component>
      <interface-class>com.intellij.xdebugger.XDebuggerManager</interface-class>
      <implementation-class>com.intellij.xdebugger.impl.XDebuggerManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.packaging.artifacts.ArtifactManager</interface-class>
      <implementation-class>com.intellij.packaging.impl.artifacts.ArtifactManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.compiler.impl.CompilerCacheManager</interface-class>
      <implementation-class>com.intellij.compiler.impl.CompilerCacheManager</implementation-class>
    </component>

    <component>
      <interface-class>org.consulo.compiler.server.rmi.CompilerClientConnector</interface-class>
      <implementation-class>org.consulo.compiler.server.rmi.impl.CompilerClientConnectorImpl</implementation-class>
    </component>
  </project-components>

  <module-components>
    <component>
      <interface-class>com.intellij.openapi.roots.ModuleRootManager</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.ModuleRootManagerImpl</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.openapi.components.impl.ModuleServiceManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.vcs.impl.VcsManagerPerModuleConfiguration</interface-class>
      <implementation-class>com.intellij.openapi.vcs.impl.VcsManagerPerModuleConfiguration</implementation-class>
      <option name="workspace" value="true"/>
    </component>
  </module-components>

  <extensionPoints>
    <extensionPoint name="search.topHitProvider" interface="com.intellij.ide.SearchTopHitProvider" />
    <extensionPoint name="referenceInjector" interface="com.intellij.psi.injection.ReferenceInjector" />
    <extensionPoint name="customPropertyScopeProvider" interface="com.intellij.psi.impl.search.CustomPropertyScopeProvider"/>
    <extensionPoint name="sdkResolveScopeProvider" interface="com.intellij.psi.SdkResolveScopeProvider"/>

    <extensionPoint name="applicationService" beanClass="com.intellij.openapi.components.ServiceDescriptor"/>
    <extensionPoint name="projectModelProcessor" interface="org.consulo.projectImport.ProjectModelProcessor"/>
    <extensionPoint name="projectService" beanClass="com.intellij.openapi.components.ServiceDescriptor"/>

    <extensionPoint name="appStarter"
                    interface="com.intellij.openapi.application.ApplicationStarter"/>

    <extensionPoint name="postStartupActivity"
                    interface="com.intellij.openapi.startup.StartupActivity"/>

    <extensionPoint name="errorHandler"
                    interface="com.intellij.openapi.diagnostic.ErrorReportSubmitter"/>

    <extensionPoint name="projectConfigurable"
                    beanClass="com.intellij.openapi.options.ConfigurableEP"
                    area="CONSULO_PROJECT">
      <with attribute="instanceClass" implements="com.intellij.openapi.options.Configurable"/>
    </extensionPoint>

    <extensionPoint name="applicationConfigurable"
                    beanClass="com.intellij.openapi.options.ConfigurableEP">
      <with attribute="instanceClass" implements="com.intellij.openapi.options.Configurable"/>
    </extensionPoint>

    <extensionPoint name="selectInTarget"
                    interface="com.intellij.ide.SelectInTarget"
                    area="CONSULO_PROJECT"/>

    <extensionPoint name="fileEditorProvider"
                    interface="com.intellij.openapi.fileEditor.FileEditorProvider"/>

    <extensionPoint name="fileTypeFactory"
                    interface="com.intellij.openapi.fileTypes.FileTypeFactory"/>

    <extensionPoint name="virtualFileSystem"
                    beanClass="com.intellij.util.KeyedLazyInstanceEP">
      <with attribute="implementationClass" implements="com.intellij.openapi.vfs.VirtualFileSystem"/>
    </extensionPoint>

    <extensionPoint name="keymapExtension"
                    interface="com.intellij.openapi.keymap.KeymapExtension"/>

    <extensionPoint name="getDataRule"
                    beanClass="com.intellij.util.KeyedLazyInstanceEP">
      <with attribute="implementationClass" implements="com.intellij.ide.impl.dataRules.GetDataRule"/>
    </extensionPoint>

    <extensionPoint name="dataValidator"
                    beanClass="com.intellij.util.KeyedLazyInstanceEP">
      <with attribute="implementationClass" implements="com.intellij.ide.impl.DataValidator"/>
    </extensionPoint>

    <extensionPoint name="cutElementMarker"
                    interface="com.intellij.openapi.ide.CutElementMarker"/>

    <extensionPoint name="exportable" beanClass="com.intellij.openapi.components.ServiceBean"/>
    <extensionPoint name="schemeOwner" beanClass="com.intellij.openapi.components.ServiceBean"/>

    <extensionPoint name="ideRootPaneNorth" interface="com.intellij.openapi.wm.IdeRootPaneNorthExtension" area="CONSULO_PROJECT"/>

    <extensionPoint name="handleTypeFactory" interface="com.intellij.openapi.vcs.readOnlyHandler.HandleTypeFactory"
                    area="CONSULO_PROJECT"/>
    <extensionPoint name="customFileTypeFactory" interface="com.intellij.openapi.fileTypes.ex.CustomFileTypeFactory"/>
    <extensionPoint name="fileTypeRegistrator" interface="com.intellij.ide.highlighter.FileTypeRegistrator"/>

    <extensionPoint name="undoProvider" interface="com.intellij.openapi.command.impl.UndoProvider"/>
    <extensionPoint name="projectUndoProvider" interface="com.intellij.openapi.command.impl.UndoProvider"
                    area="CONSULO_PROJECT"/>

    <extensionPoint name="cachedValuesFactory" interface="com.intellij.util.CachedValuesFactory" area="CONSULO_PROJECT"/>

    <extensionPoint name="syntaxHighlighter"
                    beanClass="com.intellij.openapi.extensions.KeyedFactoryEPBean">
      <with attribute="implementationClass" implements="com.intellij.openapi.fileTypes.SyntaxHighlighter"/>
    </extensionPoint>

    <extensionPoint name="lang.syntaxHighlighterFactory"
                    beanClass="com.intellij.util.KeyedLazyInstanceEP">
      <with attribute="implementationClass" implements="com.intellij.openapi.fileTypes.SyntaxHighlighterFactory"/>
    </extensionPoint>

    <extensionPoint name="projectOpenProcessor"
                    interface="com.intellij.projectImport.ProjectOpenProcessor"/>

    <extensionPoint name="codeInsight.linkHandler"
                    beanClass="com.intellij.codeInsight.hint.TooltipLinkHandlerEP">
      <with attribute="handlerClass" implements="com.intellij.codeInsight.highlighting.TooltipLinkHandler"/>
    </extensionPoint>

    <extensionPoint name="directoryProjectConfigurator"
                    interface="com.intellij.platform.DirectoryProjectConfigurator"/>
    <extensionPoint name="directoryProjectGenerator"
                    interface="com.intellij.platform.DirectoryProjectGenerator"/>

    <extensionPoint name="projectTemplatesFactory"
                    interface="com.intellij.platform.ProjectTemplatesFactory"/>

    <extensionPoint name="applicationLoadListener" interface="com.intellij.ide.ApplicationLoadListener"/>
    <extensionPoint name="componentRoamingType" beanClass="com.intellij.openapi.components.impl.stores.RoamingTypeExtensionPointBean"/>

    <extensionPoint name="editorTabTitleProvider" interface="com.intellij.openapi.fileEditor.impl.EditorTabTitleProvider"/>
    <extensionPoint name="editorTabColorProvider" interface="com.intellij.openapi.fileEditor.impl.EditorTabColorProvider"/>
    <extensionPoint name="editorFileSwapper" interface="com.intellij.openapi.fileEditor.impl.EditorFileSwapper"/>
    <extensionPoint name="editorFileAssociateFinder" interface="com.intellij.openapi.fileEditor.impl.FileEditorAssociateFinder"/>

    <extensionPoint name="http.localFileFinder" interface="com.intellij.openapi.fileEditor.impl.http.LocalFileFinder"/>
    <extensionPoint name="http.fileEditorActionProvider"
                    interface="com.intellij.openapi.fileEditor.impl.http.RemoteFileEditorActionProvider"/>

    <extensionPoint name="componentConfigurationMerger" interface="com.intellij.openapi.components.XmlConfigurationMerger"/>
    <extensionPoint name="filetype.decompiler" beanClass="com.intellij.openapi.fileTypes.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.openapi.fileTypes.BinaryFileDecompiler"/>
    </extensionPoint>

    <extensionPoint name="editorActionHandler" beanClass="com.intellij.openapi.editor.actionSystem.EditorActionHandlerBean">
      <with attribute="implementationClass" implements="com.intellij.openapi.editor.actionSystem.EditorActionHandler"/>
    </extensionPoint>

    <extensionPoint name="editorTypedHandler" beanClass="com.intellij.openapi.editor.actionSystem.EditorTypedHandlerBean">
      <with attribute="implementationClass" implements="com.intellij.openapi.editor.actionSystem.TypedActionHandler"/>
    </extensionPoint>
    <extensionPoint name="contentBasedClassFileProcessor" interface="com.intellij.openapi.fileTypes.ContentBasedClassFileProcessor"/>

    <extensionPoint name="browserSettingsProvider" beanClass="com.intellij.ide.BrowserSettingsProviderEP">
      <with attribute="instance" implements="com.intellij.ide.BrowserSettingsProvider"/>
    </extensionPoint>

    <extensionPoint name="additionalTextAttributes" beanClass="com.intellij.openapi.editor.colors.impl.AdditionalTextAttributesEP"/>
    <extensionPoint name="bundledColorScheme" beanClass="com.intellij.openapi.editor.colors.impl.BundledColorSchemeEP"/>
    <extensionPoint name="bundledQuickListsProvider" interface="com.intellij.openapi.actionSystem.impl.BundledQuickListsProvider"/>
    <extensionPoint name="bundledKeymap" beanClass="com.intellij.openapi.keymap.impl.BundledKeymapEP"/>
    <extensionPoint name="bundledUITheme" beanClass="org.consulo.ui.BundledUIThemeEP"/>

    <extensionPoint name="toolWindow" beanClass="com.intellij.openapi.wm.ToolWindowEP">
      <with attribute="factoryClass" implements="com.intellij.openapi.wm.ToolWindowFactory"/>
      <with attribute="conditionClass" implements="com.intellij.openapi.util.Condition"/>
    </extensionPoint>
    <extensionPoint name="frameEditorComponentProvider" interface="com.intellij.openapi.wm.ex.FrameEditorComponentProvider"/>

    <extensionPoint name="statisticsService" interface="com.intellij.internal.statistic.connect.StatisticsService"/>
    <extensionPoint name="productivityFeaturesProvider" interface="com.intellij.featureStatistics.ProductivityFeaturesProvider"/>

    <extensionPoint name="iconDescriptorUpdater" interface="com.intellij.ide.IconDescriptorUpdater"/>

    <extensionPoint name="customizableActionGroupProvider" interface="com.intellij.ide.ui.customization.CustomizableActionGroupProvider"/>

    <extensionPoint name="generalOptionsProvider" beanClass="com.intellij.ide.GeneralSettingsConfigurableEP">
      <with attribute="instance" implements="com.intellij.openapi.options.SearchableConfigurable"/>
    </extensionPoint>

    <extensionPoint name="statusBarComponent" interface="com.intellij.openapi.wm.StatusBarCustomComponentFactory"/>

    <extensionPoint name="checkinHandlerFactory" interface="com.intellij.openapi.vcs.checkin.CheckinHandlerFactory"/>

    <extensionPoint name="writingAccessProvider" area="CONSULO_PROJECT" interface="com.intellij.openapi.vfs.WritingAccessProvider"/>
    <extensionPoint name="editorNotificationProvider" area="CONSULO_PROJECT" interface="com.intellij.ui.EditorNotifications$Provider"/>
    <extensionPoint name="featureStatBundle" interface="com.intellij.featureStatistics.FeatureStatisticsBundleProvider"/>
    <extensionPoint name="featureStatisticsBundle" beanClass="com.intellij.featureStatistics.FeatureStatisticsBundleEP"/>

    <extensionPoint name="editorCustomization" area="CONSULO_PROJECT" interface="com.intellij.ui.EditorCustomization"/>
    <extensionPoint name="editorNavigation" interface="com.intellij.openapi.editor.EditorNavigationDelegate"/>

    <extensionPoint name="statistics.usagesCollector" interface="com.intellij.internal.statistic.UsagesCollector"/>

    <extensionPoint name="xmlRpcHandler" beanClass="com.intellij.ide.XmlRpcHandlerBean"/>

    <extensionPoint name="editorHighlighterProvider" beanClass="com.intellij.openapi.fileTypes.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.openapi.fileTypes.EditorHighlighterProvider"/>
    </extensionPoint>
    <extensionPoint name="fileDocumentManagerListener" interface="com.intellij.openapi.fileEditor.FileDocumentManagerListener"/>
    <extensionPoint name="fileDocumentSynchronizationVetoer" interface="com.intellij.openapi.fileEditor.FileDocumentSynchronizationVetoer"/>

    <extensionPoint name="itemPresentationProvider" beanClass="com.intellij.openapi.util.ClassExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.navigation.ItemPresentationProvider"/>
    </extensionPoint>

    <extensionPoint name="fileTypeDetector" interface="com.intellij.openapi.fileTypes.FileTypeRegistry$FileTypeDetector"/>

    <extensionPoint name="projectAttachProcessor" interface="com.intellij.projectImport.ProjectAttachProcessor"/>

    <extensionPoint name="pathMacroFilter" interface="com.intellij.openapi.application.PathMacroFilter"/>
    <extensionPoint name="pathMacroExpendableProtocol" beanClass="com.intellij.application.options.PathMacroExpendableProtocolBean"/>

    <extensionPoint name="httpRequestHandler" interface="org.jetbrains.ide.HttpRequestHandler"/>

    <extensionPoint name="colorPickerListenerFactory" interface="com.intellij.ui.ColorPickerListenerFactory"/>

    <!--VCS-->
    <extensionPoint name="checkoutProvider"
                    interface="com.intellij.openapi.vcs.CheckoutProvider"/>
    <extensionPoint name="checkoutListener"
                    interface="com.intellij.openapi.vcs.checkout.CheckoutListener"/>
    <extensionPoint name="vcsAwareCheckoutListener"
                    interface="com.intellij.openapi.vcs.checkout.VcsAwareCheckoutListener"/>
    <extensionPoint name="checkoutCompletedListener"
                    interface="com.intellij.openapi.vcs.checkout.CheckoutListener"/>

    <extensionPoint name="vcs"
                    beanClass="com.intellij.openapi.vcs.impl.VcsEP"
                    area="CONSULO_PROJECT">
      <with attribute="vcsClass" implements="com.intellij.openapi.vcs.AbstractVcs"/>
    </extensionPoint>

    <extensionPoint name="vcsCheckinHandlerFactory"
                    interface="com.intellij.openapi.vcs.checkin.VcsCheckinHandlerFactory"/>

    <extensionPoint name="changesViewContent"
                    beanClass="com.intellij.openapi.vcs.changes.ui.ChangesViewContentEP"
                    area="CONSULO_PROJECT"/>

    <extensionPoint name="editChangelistSupport"
                    interface="com.intellij.openapi.vcs.changes.ui.EditChangelistSupport"
                    area="CONSULO_PROJECT"/>

    <extensionPoint name="vcsSelectionProvider"
                    interface="com.intellij.vcsUtil.VcsSelectionProvider"/>

    <extensionPoint name="vcsConfigurableProvider"
                    interface="com.intellij.openapi.vcs.VcsConfigurableProvider"/>

    <!--<extensionPoint name="writingAccessProvider"-->
    <!--interface="com.intellij.openapi.vfs.WritingAccessProvider"-->
    <!--area="CONSULO_PROJECT"/>-->

    <extensionPoint name="vcs.fileStatusProvider"
                    interface="com.intellij.openapi.vcs.impl.FileStatusProvider"
                    area="CONSULO_PROJECT"/>

    <extensionPoint name="vcsPopupProvider"
                    interface="com.intellij.openapi.vcs.actions.VcsQuickListContentProvider"/>
    <extensionPoint name="patch.extension" interface="com.intellij.openapi.diff.impl.patch.PatchEP" area="CONSULO_PROJECT"/>
    <extensionPoint name="vcsChangesViewRefresher" interface="com.intellij.openapi.vcs.changes.ChangesViewRefresher"/>
    <extensionPoint name="vcsAnnotationGutterActionProvider" interface="com.intellij.openapi.vcs.annotate.AnnotationGutterActionProvider"/>
    <extensionPoint name="vcschangedetails" interface="com.intellij.openapi.vcs.changes.VcsChangeDetailsProvider" area="CONSULO_PROJECT"/>
    <extensionPoint name="vcs.rootFinder" interface="com.intellij.openapi.vcs.VcsRootFinder" />
    <extensionPoint name="vcs.taskHandler" interface="com.intellij.openapi.vcs.VcsTaskHandler" />
    <extensionPoint name="antBuildGen"
                    interface="com.intellij.compiler.ant.ChunkBuildExtension"/>

    <extensionPoint name="antCustomCompiler"
                    interface="com.intellij.compiler.ant.ChunkCustomCompilerExtension"/>

    <extensionPoint name="compiler.additionalCompileScopeProvider"
                    interface="com.intellij.compiler.impl.AdditionalCompileScopeProvider"/>

    <extensionPoint name="compiler.resourceCompilerExtension"
                    interface="com.intellij.compiler.impl.resourceCompiler.ResourceCompilerExtension"/>

    <extensionPoint name="compiler.additionalOutputDirectoriesProvider"
                    interface="com.intellij.compiler.impl.AdditionalOutputDirectoriesProvider"/>
    <extensionPoint name="orderRootTypeEditor"
                    beanClass="com.intellij.openapi.extensions.KeyedFactoryEPBean">
      <with attribute="implementationClass" implements="com.intellij.openapi.roots.ui.OrderRootTypeUIFactory"/>
    </extensionPoint>

    <extensionPoint name="packaging.elementType" interface="com.intellij.packaging.elements.PackagingElementType"/>
    <extensionPoint name="packaging.artifactPropertiesProvider" interface="com.intellij.packaging.artifacts.ArtifactPropertiesProvider"/>
    <extensionPoint name="packaging.sourceItemProvider" interface="com.intellij.packaging.ui.PackagingSourceItemsProvider"/>
    <extensionPoint name="packaging.artifactType" interface="com.intellij.packaging.artifacts.ArtifactType"/>

    <!--new project wizard-->
    <extensionPoint name="wizardMode" interface="com.intellij.ide.util.newProjectWizard.modes.WizardMode"/>
    <extensionPoint name="projectImportProvider" interface="com.intellij.projectImport.ProjectImportProvider"/>
    <extensionPoint name="projectImportBuilder" interface="com.intellij.projectImport.ProjectImportBuilder"/>
    <extensionPoint name="projectStructureDetector" interface="com.intellij.ide.util.projectWizard.importSources.ProjectStructureDetector"/>

    <extensionPoint name="codeInsight.wordCompletionFilter" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.WordCompletionElementFilter"/>
    </extensionPoint>


    <extensionPoint name="compiler" area="CONSULO_PROJECT" interface="com.intellij.openapi.compiler.Compiler"/>

    <extensionPoint name="configuration.ModuleStructureExtension"
                    interface="com.intellij.openapi.roots.ui.configuration.projectRoot.ModuleStructureExtension"/>

    <extensionPoint name="projectStructureValidator"
                    interface="com.intellij.openapi.roots.ui.configuration.projectRoot.daemon.ProjectStructureValidator"/>

    <!--Lang-->
    <extensionPoint name="errorOptionsProvider" beanClass="com.intellij.profile.codeInspection.ui.ErrorOptionsProviderEP">
      <with attribute="instance" implements="com.intellij.profile.codeInspection.ui.ErrorOptionsProvider"/>
    </extensionPoint>
    <extensionPoint name="codeFoldingOptionsProvider" beanClass="com.intellij.application.options.editor.CodeFoldingOptionsProviderEP">
      <with attribute="instance" implements="com.intellij.application.options.editor.CodeFoldingOptionsProvider"/>
    </extensionPoint>
    <extensionPoint name="autoImportOptionsProvider" beanClass="com.intellij.application.options.editor.AutoImportOptionsProviderEP">
      <with attribute="instance" implements="com.intellij.application.options.editor.AutoImportOptionsProvider"/>
    </extensionPoint>
    <extensionPoint name="moduleService" beanClass="com.intellij.openapi.components.ServiceDescriptor"/>


    <extensionPoint name="indexPatternProvider"
                    interface="com.intellij.psi.search.IndexPatternProvider"/>

    <extensionPoint name="refGraphAnnotator"
                    interface="com.intellij.codeInspection.reference.RefGraphAnnotator"/>

    <!-- Code Insight -->
    <extensionPoint name="highlightVisitor"
                    interface="com.intellij.codeInsight.daemon.impl.HighlightVisitor"
                    area="CONSULO_PROJECT"/>
    <extensionPoint name="highlightErrorFilter"
                    interface="com.intellij.codeInsight.highlighting.HighlightErrorFilter"
                    area="CONSULO_PROJECT"/>
    <extensionPoint name="errorQuickFixProvider"
                    interface="com.intellij.codeInsight.daemon.impl.analysis.ErrorQuickFixProvider"/>

    <extensionPoint name="pathReferenceProvider"
                    interface="com.intellij.openapi.paths.PathReferenceProvider"/>
    <extensionPoint name="anchorReferenceProvider"
                    interface="com.intellij.openapi.paths.PathReferenceProvider"/>
    <extensionPoint name="dynamicContextProvider"
                    interface="com.intellij.openapi.paths.DynamicContextProvider"/>


    <extensionPoint name="intentionAction"
                    beanClass="com.intellij.codeInsight.intention.IntentionActionBean">
      <with tag="className" implements="com.intellij.codeInsight.intention.IntentionAction"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.unresolvedReferenceQuickFixProvider"
                    interface="com.intellij.codeInsight.quickfix.UnresolvedReferenceQuickFixProvider"/>


    <extensionPoint name="braceMatcher"
                    beanClass="com.intellij.openapi.fileTypes.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.highlighting.BraceMatcher"/>
    </extensionPoint>
    <extensionPoint name="quoteHandler"
                    beanClass="com.intellij.codeInsight.editorActions.QuoteHandlerEP"/>
    <extensionPoint name="extendWordSelectionHandler"
                    interface="com.intellij.codeInsight.editorActions.ExtendWordSelectionHandler"/>
    <extensionPoint name="basicWordSelectionFilter"
                    interface="com.intellij.openapi.util.Condition"/>
    <extensionPoint name="typedHandler"
                    interface="com.intellij.codeInsight.editorActions.TypedHandlerDelegate"/>
    <extensionPoint name="selectionDequotingFilter"
                    interface="com.intellij.codeInsight.editorActions.SelectionQuotingTypedHandler$DequotingFilter"/>

    <extensionPoint name="joinLinesHandler"
                    interface="com.intellij.codeInsight.editorActions.JoinLinesHandlerDelegate"/>
    <extensionPoint name="enterHandlerDelegate" interface="com.intellij.codeInsight.editorActions.enter.EnterHandlerDelegate"/>
    <extensionPoint name="backspaceHandlerDelegate" interface="com.intellij.codeInsight.editorActions.BackspaceHandlerDelegate"/>

    <extensionPoint name="codeStyleSettingsProvider"
                    interface="com.intellij.psi.codeStyle.CodeStyleSettingsProvider"/>

    <extensionPoint name="daemon.highlightInfoFilter"
                    interface="com.intellij.codeInsight.daemon.impl.HighlightInfoFilter"/>

    <extensionPoint name="daemon.externalAnnotatorsFilter"
                    interface="com.intellij.lang.ExternalAnnotatorsFilter"/>

    <extensionPoint name="severitiesProvider"
                    interface="com.intellij.codeInsight.daemon.impl.SeveritiesProvider"/>

    <extensionPoint name="implicitUsageProvider"
                    interface="com.intellij.codeInsight.daemon.ImplicitUsageProvider"/>

    <extensionPoint name="templateParameterTraversalPolicy"
                    interface="com.intellij.codeInsight.completion.TemplateParameterTraversalPolicy"/>

    <!-- com.intellij.psi.PsiElement -->
    <extensionPoint name="cantBeStatic"
                    interface="com.intellij.openapi.util.Condition"/>

    <extensionPoint name="daemon.changeLocalityDetector"
                    interface="com.intellij.codeInsight.daemon.ChangeLocalityDetector"/>

    <extensionPoint name="languageInjector"
                    interface="com.intellij.psi.LanguageInjector"/>
    <extensionPoint name="concatenationAwareInjector"
                    interface="com.intellij.lang.injection.ConcatenationAwareInjector"
                    area="CONSULO_PROJECT"/>
    <extensionPoint name="multiHostInjector"
                    beanClass="com.intellij.lang.injection.MultiHostInjectorExtensionPoint"
                    area="CONSULO_PROJECT">
      <with attribute="forClass" implements="com.intellij.psi.PsiElement"/>
      <with attribute="implementationClass" implements="com.intellij.lang.injection.MultiHostInjector"/>
    </extensionPoint>

    <extensionPoint name="annotator"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.annotation.Annotator"/>
    </extensionPoint>

    <extensionPoint name="externalAnnotator"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.annotation.ExternalAnnotator"/>
    </extensionPoint>

    <extensionPoint name="lang.refactoringSupport"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.refactoring.RefactoringSupportProvider"/>
    </extensionPoint>

    <extensionPoint name="lang.refactoringSupport.classMembersRefactoringSupport"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.classMembers.ClassMembersRefactoringSupport"/>
    </extensionPoint>

    <extensionPoint name="lang.documentationProvider"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.documentation.DocumentationProvider"/>
    </extensionPoint>

    <extensionPoint name="lang.namesValidator"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.refactoring.NamesValidator"/>
    </extensionPoint>

    <extensionPoint name="lang.findUsagesProvider"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.findUsages.FindUsagesProvider"/>
    </extensionPoint>

    <extensionPoint name="lang.commenter"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.Commenter"/>
    </extensionPoint>

    <extensionPoint name="lang.braceMatcher"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.PairedBraceMatcher"/>
    </extensionPoint>

    <extensionPoint name="lang.foldingBuilder"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.folding.FoldingBuilder"/>
    </extensionPoint>

    <extensionPoint name="customFoldingProvider"
                    interface="com.intellij.lang.folding.CustomFoldingProvider"/>
    <extensionPoint name="lang.psiStructureViewFactory"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.PsiStructureViewFactory"/>
    </extensionPoint>

    <extensionPoint name="lang.structureViewExtension"
                    interface="com.intellij.ide.structureView.StructureViewExtension"/>

    <extensionPoint name="lang.psi.elementFactory" interface="com.intellij.lang.PsiElementFactory"/>

    <extensionPoint name="lang.ast.lazyFactory" interface="com.intellij.lang.ASTLazyFactory"/>

    <extensionPoint name="lang.ast.leafFactory" interface="com.intellij.lang.ASTLeafFactory"/>

    <extensionPoint name="lang.ast.compositeFactory" interface="com.intellij.lang.ASTCompositeFactory"/>

    <extensionPoint name="lang.formatter" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.formatting.FormattingModelBuilder"/>
    </extensionPoint>

    <extensionPoint name="lang.formatter.restriction" interface="com.intellij.lang.LanguageFormattingRestriction"/>
    <extensionPoint name="lang.importOptimizer" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.ImportOptimizer"/>
    </extensionPoint>

    <extensionPoint name="lang.rearranger" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.codeStyle.arrangement.Rearranger"/>
    </extensionPoint>
    <extensionPoint name="rearranger.ui" interface="com.intellij.psi.codeStyle.arrangement.std.ArrangementUiComponent$Factory"/>

    <extensionPoint name="lang.surroundDescriptor" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.surroundWith.SurroundDescriptor"/>
    </extensionPoint>

    <extensionPoint name="lang.unwrapDescriptor" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.unwrap.UnwrapDescriptor"/>
    </extensionPoint>

    <extensionPoint name="lang.parserDefinition" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.ParserDefinition"/>
    </extensionPoint>

    <extensionPoint name="lang.versionResolver" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.LanguageVersionResolver"/>
    </extensionPoint>

    <extensionPoint name="lang.defineVersion" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.LanguageVersion"/>
    </extensionPoint>

    <extensionPoint name="lang.treePatcher" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.templateLanguages.TreePatcher"/>
    </extensionPoint>

    <extensionPoint name="lang.tokenSeparatorGenerator" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.TokenSeparatorGenerator"/>
    </extensionPoint>


    <extensionPoint name="lang.fileViewProviderFactory" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.FileViewProviderFactory"/>
    </extensionPoint>

    <extensionPoint name="fileType.fileViewProviderFactory" beanClass="com.intellij.openapi.fileTypes.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.FileViewProviderFactory"/>
    </extensionPoint>

    <extensionPoint name="multiLangCommenter"
                    interface="com.intellij.psi.templateLanguages.MultipleLangCommentProvider"/>

    <extensionPoint name="cacheBuilder"
                    beanClass="com.intellij.lang.cacheBuilder.CacheBuilderEP">
      <with attribute="wordsScannerClass" implements="com.intellij.lang.cacheBuilder.WordsScanner"/>
    </extensionPoint>

    <extensionPoint name="referencesSearch" interface="com.intellij.util.QueryExecutor"/>
    <extensionPoint name="definitionsSearch" interface="com.intellij.util.QueryExecutor"/>

    <extensionPoint name="searchScopeEnlarger" interface="com.intellij.psi.search.SearchScopeEnlarger"/>
    <extensionPoint name="useScopeEnlarger" interface="com.intellij.psi.search.UseScopeEnlarger"/>
    <extensionPoint name="resolveScopeEnlarger" interface="com.intellij.psi.ResolveScopeEnlarger"/>
    <extensionPoint name="resolveScopeProvider" interface="com.intellij.psi.ResolveScopeProvider"/>

    <extensionPoint name="gotoClassContributor"
                    interface="com.intellij.navigation.ChooseByNameContributor"/>
    <extensionPoint name="gotoSymbolContributor"
                    interface="com.intellij.navigation.ChooseByNameContributor"/>
    <extensionPoint name="gotoFileContributor"
                    interface="com.intellij.navigation.ChooseByNameContributor"/>
    <extensionPoint name="anonymousElementProvider"
                    interface="com.intellij.navigation.AnonymousElementProvider"/>

    <extensionPoint name="gotoRelatedProvider" interface="com.intellij.navigation.GotoRelatedProvider"/>

    <extensionPoint name="projectExtension" interface="com.intellij.openapi.roots.ProjectExtension" area="CONSULO_PROJECT"/>
    <extensionPoint name="roots.watchedRootsProvider" interface="com.intellij.openapi.roots.WatchedRootsProvider" area="CONSULO_PROJECT"/>

    <extensionPoint name="moduleExtensionProvider" beanClass="org.consulo.module.extension.ModuleExtensionProviderEP">
      <with attribute="implementationClass" implements="org.consulo.module.extension.ModuleExtensionProvider"/>
    </extensionPoint>

    <extensionPoint name="orderRootType" interface="com.intellij.openapi.roots.OrderRootType"/>
    <extensionPoint name="orderEnumerationHandlerFactory" interface="com.intellij.openapi.roots.OrderEnumerationHandler$Factory"/>
    <extensionPoint name="directoryIndexExcludePolicy" interface="com.intellij.openapi.roots.impl.DirectoryIndexExcludePolicy"
                    area="CONSULO_PROJECT"/>
    <extensionPoint name="librarySettingsProvider" interface="com.intellij.openapi.roots.ui.configuration.LibrarySettingsProvider"/>

    <extensionPoint name="smartPointerElementInfoFactory" interface="com.intellij.psi.impl.smartPointers.SmartPointerElementInfoFactory"/>
    <extensionPoint name="elementSignatureProvider" interface="com.intellij.codeInsight.folding.impl.ElementSignatureProvider"/>
    <extensionPoint name="preFormatProcessor" interface="com.intellij.psi.impl.source.codeStyle.PreFormatProcessor"/>
    <extensionPoint name="postFormatProcessor" interface="com.intellij.psi.impl.source.codeStyle.PostFormatProcessor"/>

    <extensionPoint name="declarationRangeHandler" beanClass="com.intellij.util.MixinEP">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.hint.DeclarationRangeHandler"/>
    </extensionPoint>

    <extensionPoint name="highlightUsagesHandlerFactory" interface="com.intellij.codeInsight.highlighting.HighlightUsagesHandlerFactory"/>

    <extensionPoint name="usageTargetProvider"
                    interface="com.intellij.usages.UsageTargetProvider"/>
    <extensionPoint name="usageToPsiElementProvider" interface="com.intellij.usages.UsageToPsiElementProvider"/>

    <extensionPoint name="customScopesProvider"
                    interface="com.intellij.psi.search.scope.packageSet.CustomScopesProvider"
                    area="CONSULO_PROJECT"/>

    <extensionPoint name="scopeDescriptorProvider" interface="com.intellij.ide.util.scopeChooser.ScopeDescriptorProvider"/>
    <extensionPoint name="patternDialectProvider" interface="com.intellij.packageDependencies.ui.PatternDialectProvider"/>

    <extensionPoint name="localInspection"
                    beanClass="com.intellij.codeInspection.LocalInspectionEP">
      <with attribute="implementationClass" implements="com.intellij.codeInspection.LocalInspectionTool"/>
    </extensionPoint>

    <extensionPoint name="globalInspection"
                    beanClass="com.intellij.codeInspection.InspectionEP">
      <with attribute="implementationClass" implements="com.intellij.codeInspection.GlobalInspectionTool"/>
    </extensionPoint>
    <!-- please use localInspection or globalInspection instead-->
    <extensionPoint name="specialTool"
                    beanClass="com.intellij.codeInspection.InspectionEP"/>
    <extensionPoint name="inspectionToolProvider"
                    interface="com.intellij.codeInspection.InspectionToolProvider"/>
    <extensionPoint name="inspectionToolsFactory"
                    interface="com.intellij.codeInspection.InspectionToolsFactory"/>
    <extensionPoint name="codeInspection.InspectionExtension" interface="com.intellij.codeInspection.lang.InspectionExtensionsFactory"/>

    <extensionPoint name="customPasteProvider" interface="com.intellij.ide.PasteProvider"/>

    <extensionPoint name="copyPastePreProcessor" interface="com.intellij.codeInsight.editorActions.CopyPastePreProcessor"/>
    <extensionPoint name="copyPastePostProcessor" interface="com.intellij.codeInsight.editorActions.CopyPastePostProcessor"/>

    <extensionPoint name="commentCompleteHandler" interface="com.intellij.codeInsight.editorActions.CommentCompleteHandler"/>

    <extensionPoint name="liveTemplateContext" interface="com.intellij.codeInsight.template.TemplateContextType"/>
    <extensionPoint name="liveTemplateMacro" interface="com.intellij.codeInsight.template.Macro"/>
    <extensionPoint name="liveTemplateOptionalProcessor" interface="com.intellij.codeInsight.template.impl.TemplateOptionalProcessor"/>
    <extensionPoint name="liveTemplatePreprocessor" interface="com.intellij.codeInsight.template.impl.TemplatePreprocessor"/>
    <extensionPoint name="customLiveTemplate" interface="com.intellij.codeInsight.template.CustomLiveTemplate"/>

    <extensionPoint name="fileTemplateGroup"
                    interface="com.intellij.ide.fileTemplates.FileTemplateGroupDescriptorFactory"/>
    <extensionPoint name="colorProvider"
                    interface="com.intellij.openapi.editor.ElementColorProvider"/>
    <extensionPoint name="createFromTemplateHandler"
                    interface="com.intellij.ide.fileTemplates.CreateFromTemplateHandler"/>
    <extensionPoint name="defaultTemplatePropertiesProvider"
                    interface="com.intellij.ide.fileTemplates.DefaultTemplatePropertiesProvider"/>
    <extensionPoint name="internalFileTemplate"
                    beanClass="com.intellij.ide.fileTemplates.InternalTemplateBean"/>
    <extensionPoint name="saveFileAsTemplateHandler"
                    interface="com.intellij.ide.actions.SaveFileAsTemplateHandler"/>

    <extensionPoint name="favoriteNodeProvider"
                    interface="com.intellij.ide.favoritesTreeView.FavoriteNodeProvider"
                    area="CONSULO_PROJECT"/>
    <extensionPoint name="favoritesListProvider"
                    interface="com.intellij.ide.favoritesTreeView.FavoritesListProvider"
                    area="CONSULO_PROJECT"/>

    <extensionPoint name="lang.emacs" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.editorActions.emacs.EmacsProcessingHandler"/>
    </extensionPoint>

    <!-- File-Based Index-->
    <extensionPoint name="fileBasedIndex" interface="com.intellij.util.indexing.FileBasedIndexExtension"/>
    <extensionPoint name="stubIndex" interface="com.intellij.psi.stubs.StubIndexExtension"/>
    <extensionPoint name="indexedRootsProvider" interface="com.intellij.util.indexing.IndexedRootsProvider"/>
    <extensionPoint name="include.provider" interface="com.intellij.psi.impl.include.FileIncludeProvider"/>

    <extensionPoint name="refactoring.copyHandler" interface="com.intellij.refactoring.copy.CopyHandlerDelegate"/>
    <extensionPoint name="refactoring.moveHandler" interface="com.intellij.refactoring.move.MoveHandlerDelegate"/>
    <extensionPoint name="refactoring.moveDirectoryWithClassesHelper"
                    interface="com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesHelper"/>
    <extensionPoint name="codeHighlighting.iconCreator"
                    interface="com.intellij.codeHighlighting.HighlightDisplayLevel$IconCreator"/>

    <extensionPoint name="refactoring.helper" interface="com.intellij.refactoring.RefactoringHelper"/>
    <extensionPoint name="refactoring.inlineHandler" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.refactoring.InlineHandler"/>
    </extensionPoint>

    <extensionPoint name="refactoring.safeDeleteProcessor" interface="com.intellij.refactoring.safeDelete.SafeDeleteProcessorDelegate"/>

    <extensionPoint name="refactoring.extractIncludeHandler"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.RefactoringActionHandler"/>
    </extensionPoint>

    <extensionPoint name="refactoring.changeSignatureUsageProcessor"
                    interface="com.intellij.refactoring.changeSignature.ChangeSignatureUsageProcessor"/>

    <extensionPoint name="elementDescriptionProvider" interface="com.intellij.psi.ElementDescriptionProvider"/>

    <extensionPoint name="structureViewBuilder"
                    beanClass="com.intellij.openapi.extensions.KeyedFactoryEPBean">
      <with attribute="implementationClass" implements="com.intellij.ide.structureView.StructureViewBuilder"/>
    </extensionPoint>

    <extensionPoint name="macro" interface="com.intellij.ide.macro.Macro"/>
    <extensionPoint name="printOption" interface="com.intellij.codeEditor.printing.PrintOption"/>

    <extensionPoint name="indexPatternBuilder" interface="com.intellij.psi.impl.search.IndexPatternBuilder"/>

    <extensionPoint name="configurationType"
                    interface="com.intellij.execution.configurations.ConfigurationType"/>

    <extensionPoint name="runConfigurationsSettings"
                    interface="com.intellij.execution.configurations.RunConfigurationsSettings"/>

    <extensionPoint name="programRunner"
                    interface="com.intellij.execution.runners.ProgramRunner"/>

    <extensionPoint name="executor"
                    interface="com.intellij.execution.Executor"/>

    <extensionPoint name="executionTargetProvider"
                    interface="com.intellij.execution.ExecutionTargetProvider"/>

    <extensionPoint name="runConfigurationExtension"
                    interface="com.intellij.execution.RunConfigurationExtension"/>

    <extensionPoint name="jreProvider"
                    interface="com.intellij.execution.ui.JreProvider"/>

    <extensionPoint name="stepsBeforeRunProvider"
                    interface="com.intellij.execution.BeforeRunTaskProvider"
                    area="CONSULO_PROJECT"/>

    <extensionPoint name="consoleFilterProvider" interface="com.intellij.execution.filters.ConsoleFilterProvider"/>
    <extensionPoint name="consoleInputFilterProvider" interface="com.intellij.execution.filters.ConsoleInputFilterProvider"/>
    <extensionPoint name="consoleActionsPostProcessor" interface="com.intellij.execution.actions.ConsoleActionsPostProcessor"/>

    <extensionPoint name="console.folding" interface="com.intellij.execution.ConsoleFolding"/>

    <extensionPoint name="configurationProducer"
                    interface="com.intellij.execution.junit.RuntimeConfigurationProducer"/>

    <extensionPoint name="runConfigurationProducer" interface="com.intellij.execution.actions.RunConfigurationProducer" />

    <extensionPoint name="hectorComponentProvider" interface="com.intellij.openapi.editor.HectorComponentPanelsProvider"
                    area="CONSULO_PROJECT"/>
    <extensionPoint name="scopeTreeExpander" interface="com.intellij.ide.scopeView.ScopeTreeStructureExpander" area="CONSULO_PROJECT"/>

    <extensionPoint name="lang.elementManipulator" beanClass="com.intellij.openapi.util.ClassExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.ElementManipulator"/>
    </extensionPoint>

    <extensionPoint name="fileContextProvider" interface="com.intellij.psi.FileContextProvider" area="CONSULO_PROJECT"/>
    <extensionPoint name="psi.fileReferenceHelper"
                    interface="com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceHelper"/>

    <extensionPoint name="psi.referenceContributor" beanClass="com.intellij.psi.impl.source.resolve.reference.PsiReferenceContributorEP">
      <with attribute="implementation" implements="com.intellij.psi.PsiReferenceContributor"/>
    </extensionPoint>

    <extensionPoint name="psi.referenceProvider" beanClass="com.intellij.psi.PsiReferenceProviderBean"/>
    <extensionPoint name="psi.packageSupportProvider" interface="org.consulo.psi.PsiPackageSupportProvider"/>
    <extensionPoint name="patterns.patternClass" beanClass="com.intellij.patterns.compiler.PatternClassBean"/>

    <extensionPoint name="pom.declarationSearcher" interface="com.intellij.pom.PomDeclarationSearcher"/>

    <extensionPoint name="statistician" beanClass="com.intellij.psi.statistics.StatisticsExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.statistics.Statistician"/>
    </extensionPoint>

    <extensionPoint name="weigher" beanClass="com.intellij.psi.WeigherExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.Weigher"/>
    </extensionPoint>

    <extensionPoint name="forcedElementWeigher" interface="com.intellij.psi.util.proximity.ForcedElementWeigher"/>

    <extensionPoint name="completion.contributor" beanClass="com.intellij.codeInsight.completion.CompletionContributorEP">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.completion.CompletionContributor"/>
    </extensionPoint>

    <extensionPoint name="completion.confidence" beanClass="com.intellij.codeInsight.completion.CompletionConfidenceEP">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.completion.CompletionConfidence"/>
    </extensionPoint>

    <extensionPoint name="completion.skip" interface="com.intellij.codeInsight.completion.CompletionPreselectSkipper"/>
    <extensionPoint name="lookup.charFilter" interface="com.intellij.codeInsight.lookup.CharFilter"/>
    <extensionPoint name="lookup.actionProvider" interface="com.intellij.codeInsight.lookup.LookupActionProvider"/>
    <extensionPoint name="originInfoProvider" interface="com.intellij.codeInsight.completion.originInfo.OriginInfoProvider"/>

    <extensionPoint name="highlightRangeExtension" interface="com.intellij.codeInsight.daemon.impl.HighlightRangeExtension"/>

    <extensionPoint name="elementsToHighlightFilter" interface="com.intellij.openapi.util.Condition"/>

    <extensionPoint name="sdkType" interface="com.intellij.openapi.projectRoots.SdkType"/>
    <extensionPoint name="bundledSdkProvider" interface="com.intellij.openapi.projectRoots.BundledSdkProvider"/>

    <extensionPoint name="library.presentationProvider" interface="com.intellij.openapi.roots.libraries.LibraryPresentationProvider"/>
    <extensionPoint name="library.type" interface="com.intellij.openapi.roots.libraries.LibraryType"/>

    <extensionPoint name="lang.implementationTextSelectioner"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.hint.ImplementationTextSelectioner"/>
    </extensionPoint>

    <extensionPoint name="lang.lineWrapStrategy"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.openapi.editor.LineWrapPositionStrategy"/>
    </extensionPoint>

    <extensionPoint name="lang.whiteSpaceFormattingStrategy"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.formatter.WhiteSpaceFormattingStrategy"/>
    </extensionPoint>

    <extensionPoint name="lang.indentStrategy"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.openapi.editor.IndentStrategy"/>
    </extensionPoint>

    <extensionPoint name="gotoDeclarationHandler"
                    interface="com.intellij.codeInsight.navigation.actions.GotoDeclarationHandler"/>
    <extensionPoint name="typeDeclarationProvider"
                    interface="com.intellij.codeInsight.navigation.actions.TypeDeclarationProvider"/>
    <extensionPoint name="gotoTargetRendererProvider"
                    interface="com.intellij.codeInsight.navigation.GotoTargetRendererProvider"/>

    <extensionPoint name="navbar" interface="com.intellij.ide.navigationToolbar.NavBarModelExtension"/>

    <extensionPoint name="renameHandler" interface="com.intellij.refactoring.rename.RenameHandler"/>
    <extensionPoint name="renamePsiElementProcessor" interface="com.intellij.refactoring.rename.RenamePsiElementProcessor"/>
    <extensionPoint name="updateAddedFileProcessor" interface="com.intellij.psi.impl.file.UpdateAddedFileProcessor"/>
    <extensionPoint name="moveFileHandler" interface="com.intellij.refactoring.move.moveFilesOrDirectories.MoveFileHandler"/>
    <extensionPoint name="automaticRenamerFactory" interface="com.intellij.refactoring.rename.naming.AutomaticRenamerFactory"/>
    <extensionPoint name="nameSuggestionProvider" interface="com.intellij.refactoring.rename.NameSuggestionProvider"/>
    <extensionPoint name="vetoRenameCondition" interface="com.intellij.openapi.util.Condition"/>

    <extensionPoint name="rename.inplace.resolveSnapshotProvider"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.rename.ResolveSnapshotProvider"/>
    </extensionPoint>

    <extensionPoint name="renameInputValidator" interface="com.intellij.refactoring.rename.RenameInputValidator"/>

    <extensionPoint name="findUsagesHandlerFactory" interface="com.intellij.find.findUsages.FindUsagesHandlerFactory"
                    area="CONSULO_PROJECT"/>
    <extensionPoint name="customUsageSearcher" interface="com.intellij.find.findUsages.CustomUsageSearcher"/>

    <extensionPoint name="readWriteAccessDetector" interface="com.intellij.codeInsight.highlighting.ReadWriteAccessDetector"/>

    <extensionPoint name="scopeParserExtension" interface="com.intellij.psi.search.scope.packageSet.PackageSetParserExtension"/>

    <extensionPoint name="referenceProviderType" beanClass="com.intellij.util.KeyedLazyInstanceEP"/>

    <extensionPoint name="colorSettingsPage" interface="com.intellij.openapi.options.colors.ColorSettingsPage"/>
    <extensionPoint name="colorAndFontPanelFactory" interface="com.intellij.application.options.colors.ColorAndFontPanelFactory"/>
    <extensionPoint name="colorAndFontDescriptorProvider" interface="com.intellij.openapi.options.colors.ColorAndFontDescriptorsProvider"/>

    <extensionPoint name="codeInsight.parameterInfo" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.parameterInfo.ParameterInfoHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.fillParagraph" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.editorActions.fillParagraph.ParagraphFillHandler"/>
    </extensionPoint>

    <extensionPoint name="editorOptionsProvider" beanClass="com.intellij.application.options.editor.EditorOptionsProviderEP">
      <with attribute="instance" implements="com.intellij.application.options.editor.EditorOptionsProvider"/>
    </extensionPoint>

    <extensionPoint name="fileTypeIndentOptionsProvider" interface="com.intellij.psi.codeStyle.FileTypeIndentOptionsProvider"/>
    <extensionPoint name="referenceImporter" interface="com.intellij.codeInsight.daemon.ReferenceImporter"/>
    <extensionPoint name="elementLookupRenderer" interface="com.intellij.codeInsight.lookup.impl.ElementLookupRenderer"/>

    <extensionPoint name="qualifiedNameProvider" interface="com.intellij.ide.actions.QualifiedNameProvider"/>

    <extensionPoint name="completionData"
                    beanClass="com.intellij.codeInsight.completion.CompletionDataEP"/>

    <extensionPoint name="usageFilteringRuleProvider"
                    interface="com.intellij.usages.rules.UsageFilteringRuleProvider"/>
    <extensionPoint name="importFilteringRule"
                    interface="com.intellij.usages.rules.ImportFilteringRule"/>
    <extensionPoint name="usageGroupingRuleProvider"
                    interface="com.intellij.usages.rules.UsageGroupingRuleProvider"/>
    <extensionPoint name="usageTypeProvider"
                    interface="com.intellij.usages.impl.rules.UsageTypeProvider"/>
    <extensionPoint name="fileStructureGroupRuleProvider"
                    interface="com.intellij.usages.impl.FileStructureGroupRuleProvider"/>
    <extensionPoint name="usageContextPanelProvider"
                    interface="com.intellij.usages.UsageContextPanel$Provider"
                    area="CONSULO_PROJECT"/>

    <extensionPoint name="treeStructureProvider"
                    interface="com.intellij.ide.projectView.TreeStructureProvider"
                    area="CONSULO_PROJECT"/>

    <extensionPoint name="defaultLiveTemplatesProvider"
                    interface="com.intellij.codeInsight.template.impl.DefaultLiveTemplatesProvider"/>

    <extensionPoint name="codeInsight.implementMethod" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.LanguageCodeInsightActionHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.overrideMethod" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.LanguageCodeInsightActionHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.delegateMethods" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.LanguageCodeInsightActionHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.gotoSuper" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.lang.LanguageCodeInsightActionHandler"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.lineMarkerProvider" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.daemon.LineMarkerProvider"/>
    </extensionPoint>

    <extensionPoint name="codeInsight.surroundWithRangeAdjuster"
                    interface="com.intellij.codeInsight.generation.surroundWith.SurroundWithRangeAdjuster"/>

    <extensionPoint name="lang.substitutor" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.LanguageSubstitutor"/>
    </extensionPoint>

    <extensionPoint name="createFromTemplateActionReplacer"
                    interface="com.intellij.ide.fileTemplates.CreateFromTemplateActionReplacer"/>

    <extensionPoint name="filetype.stubBuilder"
                    beanClass="com.intellij.openapi.fileTypes.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.stubs.BinaryFileStubBuilder"/>
    </extensionPoint>

    <extensionPoint name="stubElementTypeHolder"
                    beanClass="com.intellij.psi.stubs.StubElementTypeHolderEP"/>

    <extensionPoint name="moduleBuilder"
                    beanClass="com.intellij.ide.util.projectWizard.ModuleBuilderFactory">
      <with attribute="builderClass" implements="com.intellij.ide.util.projectWizard.ModuleBuilder"/>
    </extensionPoint>

    <extensionPoint name="projectTemplateParameterFactory"
                    interface="com.intellij.ide.util.projectWizard.ProjectTemplateParameterFactory"/>
    <extensionPoint name="projectTemplateFileProcessor"
                    interface="com.intellij.ide.util.projectWizard.ProjectTemplateFileProcessor"/>

    <extensionPoint name="methodNavigationOffsetProvider"
                    interface="com.intellij.codeInsight.navigation.MethodNavigationOffsetProvider"/>

    <extensionPoint name="filePasteProvider"
                    interface="com.intellij.ide.PasteProvider"/>

    <extensionPoint name="testFinder"
                    interface="com.intellij.testIntegration.TestFinder"/>
    <extensionPoint name="testSrcLocator"
                    interface="com.intellij.testIntegration.TestLocationProvider"/>

    <extensionPoint name="testCreator"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.testIntegration.TestCreator"/>
    </extensionPoint>

    <extensionPoint name="lang.smartEnterProcessor"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.editorActions.smartEnter.SmartEnterProcessor"/>
    </extensionPoint>

    <extensionPoint name="callHierarchyProvider" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.ide.hierarchy.HierarchyProvider"/>
    </extensionPoint>
    <extensionPoint name="methodHierarchyProvider" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.ide.hierarchy.HierarchyProvider"/>
    </extensionPoint>

    <extensionPoint name="typeHierarchyProvider" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.ide.hierarchy.HierarchyProvider"/>
    </extensionPoint>

    <extensionPoint name="editorAppearanceConfigurable" beanClass="com.intellij.application.options.editor.EditorAppearanceConfigurableEP">
      <with attribute="instance" implements="com.intellij.application.options.editor.EditorAppearanceConfigurable"/>
    </extensionPoint>

    <extensionPoint name="editorSmartKeysConfigurable" beanClass="com.intellij.application.options.editor.EditorSmartKeysConfigurableEP">
      <with attribute="instance" implements="com.intellij.application.options.editor.EditorSmartKeysConfigurable"/>
    </extensionPoint>

    <extensionPoint name="optionsApplicabilityFilter" interface="com.intellij.application.options.OptionsApplicabilityFilter"/>

    <extensionPoint name="metaDataContributor" interface="com.intellij.psi.meta.MetaDataContributor"/>

    <extensionPoint name="documentationProvider"
                    interface="com.intellij.lang.documentation.DocumentationProvider"/>

    <extensionPoint name="lang.documentationFixer" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.documentation.DocCommentFixer"/>
    </extensionPoint>

    <extensionPoint name="templateCompletionProcessor"
                    interface="com.intellij.codeInsight.template.macro.TemplateCompletionProcessor"/>

    <extensionPoint name="targetElementEvaluator" beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.TargetElementEvaluator"/>
    </extensionPoint>

    <extensionPoint name="statementUpDownMover" interface="com.intellij.codeInsight.editorActions.moveUpDown.StatementUpDownMover"/>

    <extensionPoint name="fileLookupInfoProvider" interface="com.intellij.psi.file.FileLookupInfoProvider"/>

    <extensionPoint name="idIndexer" beanClass="com.intellij.openapi.fileTypes.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.psi.impl.cache.impl.id.FileTypeIdIndexer"/>
    </extensionPoint>

    <extensionPoint name="todoIndexer" beanClass="com.intellij.openapi.fileTypes.FileTypeExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.util.indexing.DataIndexer"/>
    </extensionPoint>

    <extensionPoint name="refactoring.elementListenerProvider"
                    interface="com.intellij.refactoring.listeners.RefactoringElementListenerProvider"
                    area="CONSULO_PROJECT"/>

    <extensionPoint name="fileTemplateDefaultExtension" beanClass="com.intellij.ide.fileTemplates.FileTemplateDefaultExtension"/>

    <extensionPoint name="problemFileHighlightFilter" interface="com.intellij.openapi.util.Condition" area="CONSULO_PROJECT"/>

    <extensionPoint name="problemHighlightFilter" interface="com.intellij.codeInsight.daemon.ProblemHighlightFilter"/>

    <extensionPoint name="uiDebuggerExtension" interface="com.intellij.ui.debugger.UiDebuggerExtension"/>

    <extensionPoint name="projectViewPane" interface="com.intellij.ide.projectView.impl.AbstractProjectViewPane" area="CONSULO_PROJECT"/>

    <extensionPoint name="inlineActionHandler" interface="com.intellij.lang.refactoring.InlineActionHandler"/>

    <extensionPoint name="projectViewNodeDecorator" interface="com.intellij.ide.projectView.ProjectViewNodeDecorator"
                    area="CONSULO_PROJECT"/>

    <extensionPoint name="previewHintProvider" interface="com.intellij.codeInsight.preview.PreviewHintProvider"/>
    <extensionPoint name="testActionProvider" interface="com.intellij.execution.testframework.ToggleModelActionProvider"/>

    <extensionPoint name="psiViewerExtension" interface="com.intellij.internal.psiView.PsiViewerExtension"/>

    <extensionPoint name="diffPreviewProvider" interface="com.intellij.openapi.diff.impl.settings.DiffPreviewProvider"/>

    <extensionPoint name="filePropertyPusher" interface="com.intellij.openapi.roots.impl.FilePropertyPusher"/>

    <extensionPoint name="langCodeStyleSettingsProvider" interface="com.intellij.psi.codeStyle.LanguageCodeStyleSettingsProvider"/>

    <extensionPoint name="predefinedCodeStyle" interface="com.intellij.psi.codeStyle.PredefinedCodeStyle"/>

    <extensionPoint name="semContributor"
                    beanClass="com.intellij.semantic.SemContributorEP" area="CONSULO_PROJECT">
      <with attribute="implementation" implements="com.intellij.semantic.SemContributor"/>
    </extensionPoint>

    <extensionPoint name="typeName" beanClass="com.intellij.ide.TypeNameEP"/>

    <extensionPoint name="typeIcon" beanClass="com.intellij.ide.TypeIconEP"/>

    <extensionPoint name="analyzeStacktraceFilter" interface="com.intellij.execution.filters.Filter" area="CONSULO_PROJECT"/>

    <extensionPoint name="stacktrace.fold" beanClass="com.intellij.execution.console.CustomizableConsoleFoldingBean"/>
    <extensionPoint name="changeSignatureDetector"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.refactoring.changeSignature.LanguageChangeSignatureDetector"/>
    </extensionPoint>

    <extensionPoint name="preserveIndentOnPaste" beanClass="com.intellij.codeInsight.editorActions.PreserveIndentOnPasteBean"/>

    <extensionPoint name="aliasingPsiTargetMapper" interface="com.intellij.psi.targets.AliasingPsiTargetMapper"/>

    <extensionPoint name="inspectionsReportConverter"
                    interface="com.intellij.codeInspection.InspectionsReportConverter"/>

    <extensionPoint name="patternProvider"
                    interface="com.intellij.codeInsight.generation.PatternProvider"/>

    <extensionPoint name="project.converterProvider"
                    interface="com.intellij.conversion.ConverterProvider"/>

    <extensionPoint name="treeCopyHandler"
                    interface="com.intellij.psi.impl.source.tree.TreeCopyHandler"/>
    <extensionPoint name="treeGenerator"
                    interface="com.intellij.psi.impl.source.tree.TreeGenerator"/>

    <extensionPoint name="psi.treeChangePreprocessor"
                    interface="com.intellij.psi.impl.PsiTreeChangePreprocessor"
                    area="CONSULO_PROJECT"/>

    <extensionPoint name="codeBlockProvider"
                    beanClass="com.intellij.lang.LanguageExtensionPoint">
      <with attribute="implementationClass" implements="com.intellij.codeInsight.editorActions.CodeBlockProvider"/>
    </extensionPoint>

    <extensionPoint name="toolsProvider" interface="com.intellij.tools.ToolsProvider"/>

    <extensionPoint name="defaultHighlightingSettingProvider"
                    interface="com.intellij.codeInsight.daemon.impl.analysis.DefaultHighlightingSettingProvider"/>

    <extensionPoint name="xdebugger.settings" interface="com.intellij.xdebugger.settings.XDebuggerSettings"/>
    <extensionPoint name="xdebugger.breakpointType" interface="com.intellij.xdebugger.breakpoints.XBreakpointType"/>
    <extensionPoint name="xdebugger.debuggerSupport" interface="com.intellij.xdebugger.impl.DebuggerSupport"/>
    <extensionPoint name="testFramework" interface="com.intellij.testIntegration.TestFramework"/>
    <extensionPoint name="unusedDeclarationFixProvider"
                    interface="com.intellij.codeInspection.reference.UnusedDeclarationFixProvider"/>
    <extensionPoint name="psi.packageResolver" interface="org.consulo.psi.PsiPackageResolver"/>
    <extensionPoint name="library.dependencyScopeSuggester" interface="com.intellij.openapi.roots.LibraryDependencyScopeSuggester"/>

    <!--External system-->
    <extensionPoint name="externalSystemManager" interface="com.intellij.openapi.externalSystem.ExternalSystemManager"/>
    <extensionPoint name="externalProjectDataService"
                    interface="com.intellij.openapi.externalSystem.service.project.manage.ProjectDataService"/>
    <extensionPoint name="externalSystemNotificationExtension"
                    interface="com.intellij.openapi.externalSystem.service.notification.ExternalSystemNotificationExtension" />
    <!--Remote servers-->
    <extensionPoint name="remoteServer.type" interface="com.intellij.remoteServer.ServerType"/>
    <extensionPoint name="remoteServer.deploymentSource.type" interface="com.intellij.remoteServer.configuration.deployment.DeploymentSourceType"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>
    <appStarter implementation="com.intellij.openapi.diff.DiffApplication"/>
    <appStarter implementation="com.intellij.openapi.diff.MergeApplication"/>

    <applicationService serviceInterface="com.intellij.ide.util.PropertiesComponent"
                        serviceImplementation="com.intellij.ide.util.AppPropertiesComponentImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.fileTypes.FileNameMatcherFactory"
                        serviceImplementation="com.intellij.openapi.fileTypes.impl.FileNameMatcherFactoryImpl" />

    <applicationService serviceInterface="com.intellij.openapi.projectRoots.impl.JdkVersionDetector"
                        serviceImplementation="com.intellij.openapi.projectRoots.impl.JdkVersionDetectorImpl" />

    <projectService serviceInterface="com.intellij.ide.util.PropertiesComponent"
                    serviceImplementation="com.intellij.ide.util.ProjectPropertiesComponentImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.actionSystem.JBAwtEventQueue"
                        serviceImplementation="com.intellij.openapi.actionSystem.impl.JBAwtEventQueueImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.vfs.tracker.VirtualFileTracker"
                        serviceImplementation="com.intellij.openapi.vfs.tracker.VirtualFileTrackerImpl"/>

    <applicationService serviceInterface="com.intellij.concurrency.JobScheduler"
                        serviceImplementation="com.intellij.concurrency.JobSchedulerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.options.ShowSettingsUtil"
                        serviceImplementation="com.intellij.ide.actions.ShowSettingsUtilImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.help.HelpManager"
                        serviceImplementation="com.intellij.help.impl.HelpManagerImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.fileChooser.FileChooserFactory"
                        serviceImplementation="com.intellij.openapi.fileChooser.impl.FileChooserFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.progress.ProgressManager"
                        serviceImplementation="com.intellij.openapi.progress.impl.ProgressManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.ide.ui.customization.CustomActionsSchema"/>
    <exportable serviceInterface="com.intellij.ide.ui.customization.CustomActionsSchema"/>

    <applicationService serviceInterface="com.intellij.openapi.project.DefaultProjectFactory"
                        serviceImplementation="com.intellij.openapi.project.DefaultProjectFactoryImpl"/>

    <undoProvider implementation="com.intellij.openapi.command.impl.FileUndoProvider"/>
    <projectUndoProvider implementation="com.intellij.openapi.command.impl.FileUndoProvider"/>

    <applicationService serviceInterface="com.intellij.openapi.command.CommandProcessor"
                        serviceImplementation="com.intellij.openapi.command.impl.CommandProcessorImpl"/>

    <applicationService serviceInterface="com.intellij.ide.CommonActionsManager"
                        serviceImplementation="com.intellij.ide.impl.CommonActionsManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.ide.CopyPasteManager"
                        serviceImplementation="com.intellij.ide.CopyPasteManagerEx"/>
    <applicationService serviceInterface="com.intellij.openapi.ui.popup.JBPopupFactory"
                        serviceImplementation="com.intellij.ui.popup.PopupFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.diff.DiffManager"
                        serviceImplementation="com.intellij.openapi.diff.impl.external.DiffManagerImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.fileEditor.ex.FileEditorProviderManager"
                        serviceImplementation="com.intellij.openapi.fileEditor.impl.FileEditorProviderManagerImpl"/>
    <applicationService serviceInterface="com.intellij.ide.ui.search.SearchableOptionsRegistrar"
                        serviceImplementation="com.intellij.ide.ui.search.SearchableOptionsRegistrarImpl"/>

    <applicationService serviceImplementation="com.intellij.openapi.options.ex.IdeConfigurablesGroup"/>

    <applicationService serviceInterface="com.intellij.diagnostic.ErrorReportConfigurable"
                        serviceImplementation="com.intellij.diagnostic.ErrorReportConfigurable"/>
    <applicationService serviceInterface="com.intellij.openapi.vfs.impl.http.RemoteFileManager"
                        serviceImplementation="com.intellij.openapi.vfs.impl.http.RemoteFileManagerImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.vfs.newvfs.RefreshQueue"
                        serviceImplementation="com.intellij.openapi.vfs.newvfs.RefreshQueueImpl"
                        serviceImplementationForCompilerServer="org.consulo.compiler.server.fileSystem.CompilerServerRefreshQueueImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.ui.DialogWrapperPeerFactory"
                        serviceImplementation="com.intellij.openapi.ui.impl.DialogWrapperPeerFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.ui.content.ContentFactory"
                        serviceImplementation="com.intellij.ui.content.ContentFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.ui.TreeUIHelper"
                        serviceImplementation="com.intellij.ui.TreeUIHelperImpl"/>
    <applicationService serviceInterface="com.intellij.ui.ExpandableItemsHandlerFactory"
                        serviceImplementation="com.intellij.ui.ExpandTipHandlerFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.diff.DiffRequestFactory"
                        serviceImplementation="com.intellij.openapi.diff.impl.mergeTool.DiffRequestFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.ui.SystemNotifications"
                        serviceImplementation="com.intellij.ui.SystemNotificationsImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.keymap.KeymapGroupFactory"
                        serviceImplementation="com.intellij.openapi.keymap.impl.KeymapGroupFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.highlighter.EditorHighlighterFactory"
                        serviceImplementation="com.intellij.openapi.editor.highlighter.EditorHighlighterFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.ide.dnd.DnDManager"
                        serviceImplementation="com.intellij.ide.dnd.DnDManagerImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.vfs.encoding.EncodingManager"
                        serviceImplementation="com.intellij.openapi.vfs.encoding.EncodingManagerImpl"/>
    <applicationService serviceInterface="com.intellij.ui.errorView.ErrorViewFactory"
                        serviceImplementation="com.intellij.ui.errorView.impl.ErrorViewFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.fileChooser.FileSystemTreeFactory"
                        serviceImplementation="com.intellij.openapi.fileChooser.ex.FileSystemTreeFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.ide.plugins.PluginManagerUISettings"
                        serviceImplementation="com.intellij.ide.plugins.PluginManagerUISettings"/>
    <applicationService serviceInterface="com.intellij.codeInsight.hint.HintManager"
                        serviceImplementation="com.intellij.codeInsight.hint.HintManagerImpl"/>
    <applicationService serviceInterface="com.intellij.codeInsight.hint.TooltipController"
                        serviceImplementation="com.intellij.codeInsight.hint.TooltipController"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.actionSystem.EditorActionManager"
                        serviceImplementation="com.intellij.openapi.editor.impl.EditorActionManagerImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.updateSettings.impl.UpdateSettings"
                        serviceImplementation="com.intellij.openapi.updateSettings.impl.UpdateSettings"/>
    <applicationService serviceInterface="com.intellij.featureStatistics.FeatureUsageTracker"
                        serviceImplementation="com.intellij.featureStatistics.FeatureUsageTrackerImpl"/>
    <applicationService serviceInterface="com.intellij.featureStatistics.ProductivityFeaturesRegistry"
                        serviceImplementation="com.intellij.featureStatistics.ProductivityFeaturesRegistryImpl"/>
    <applicationService serviceInterface="com.intellij.util.InstanceofCheckerGenerator"
                        serviceImplementation="com.intellij.util.InstanceofCheckerGeneratorImpl"/>
    <applicationService serviceInterface="com.intellij.internal.psiView.PsiViewerSettings"
                        serviceImplementation="com.intellij.internal.psiView.PsiViewerSettings"/>

    <applicationService serviceInterface="com.intellij.util.graph.GraphAlgorithms"
                        serviceImplementation="com.intellij.util.graph.impl.GraphAlgorithmsImpl"/>

    <applicationService serviceInterface="com.intellij.concurrency.AsyncFutureFactory"
                        serviceImplementation="com.intellij.concurrency.AsyncFutureFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.keymap.impl.DefaultKeymap"
                        serviceImplementation="com.intellij.openapi.keymap.impl.DefaultKeymap"/>

    <applicationService serviceInterface="com.intellij.ide.passwordSafe.impl.providers.masterKey.PasswordDatabase"
                        serviceImplementation="com.intellij.ide.passwordSafe.impl.providers.masterKey.PasswordDatabase"/>
    <applicationService serviceInterface="com.intellij.ide.passwordSafe.config.PasswordSafeSettings"
                        serviceImplementation="com.intellij.ide.passwordSafe.config.PasswordSafeSettings"/>
    <applicationService serviceInterface="com.intellij.ide.passwordSafe.PasswordSafe"
                        serviceImplementation="com.intellij.ide.passwordSafe.impl.PasswordSafeImpl"/>
    <applicationConfigurable instance="com.intellij.ide.passwordSafe.config.PasswordSafeConfigurable" id="application.passwordSafe"
                             displayName="Passwords"/>
    <applicationService serviceInterface="com.intellij.execution.process.ColoredOutputTypeRegistry"
                        serviceImplementation="com.intellij.execution.process.ColoredOutputTypeRegistry"/>
    <applicationService serviceInterface="com.intellij.execution.process.OSProcessManager"
                        serviceImplementation="com.intellij.execution.process.impl.OSProcessManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.options.SchemesManagerFactory"
                        serviceImplementation="com.intellij.openapi.options.SchemesManagerFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.editor.colors.ex.DefaultColorSchemesManager"
                        serviceImplementation="com.intellij.openapi.editor.colors.ex.DefaultColorSchemesManager"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.colors.TextAttributesKey$TextAttributeKeyDefaultsProvider"
                        serviceImplementation="com.intellij.openapi.editor.colors.impl.TextAttributeKeyDefaultsProviderImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.colors.EditorColorsManager"
                        serviceImplementation="com.intellij.openapi.editor.colors.impl.EditorColorsManagerImpl"/>
    <exportable serviceInterface="com.intellij.openapi.editor.colors.EditorColorsManager"/>
    <schemeOwner serviceInterface="com.intellij.openapi.editor.colors.EditorColorsManager"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ui.FileAppearanceService"
                        serviceImplementation="com.intellij.openapi.roots.ui.FileAppearanceServiceImpl"/>

    <applicationService serviceImplementation="com.intellij.internal.statistic.UsageTrigger"/>

    <projectService serviceInterface="com.intellij.openapi.vfs.ReadonlyStatusHandler"
                    serviceImplementation="com.intellij.openapi.vcs.readOnlyHandler.ReadonlyStatusHandlerImpl"/>
    <projectService serviceInterface="com.intellij.openapi.startup.StartupManager"
                    serviceImplementation="com.intellij.ide.startup.impl.StartupManagerImpl"/>
    <projectService serviceInterface="com.intellij.openapi.ui.MasterDetailsStateService"
                    serviceImplementation="com.intellij.openapi.ui.MasterDetailsStateService"/>
    <projectService serviceInterface="com.intellij.ide.SelectInManager" serviceImplementation="com.intellij.ide.SelectInManager"/>

    <projectService serviceInterface="com.intellij.ide.errorTreeView.impl.ErrorTreeViewConfiguration"
                    serviceImplementation="com.intellij.ide.errorTreeView.impl.ErrorTreeViewConfiguration"/>

    <projectService serviceInterface="com.intellij.ui.docking.DockManager"
                    serviceImplementation="com.intellij.ui.docking.impl.DockManagerImpl"/>
    <projectService serviceInterface="com.intellij.ide.SelectInEditorManager"
                    serviceImplementation="com.intellij.ide.impl.SelectInEditorManagerImpl"/>
    <projectService serviceInterface="com.intellij.ui.RecentsManager"
                    serviceImplementation="com.intellij.ui.RecentsManager"/>
    <projectService serviceInterface="com.intellij.ui.content.MessageView"
                    serviceImplementation="com.intellij.ui.content.impl.MessageViewImpl"/>

    <projectService serviceInterface="com.intellij.ui.tabs.FileColorSharedConfigurationManager"
                    serviceImplementation="com.intellij.ui.tabs.FileColorSharedConfigurationManager"/>

    <projectService serviceInterface="com.intellij.openapi.project.DumbService"
                    serviceImplementation="com.intellij.openapi.project.DumbServiceImpl"/>

    <projectService serviceInterface="com.intellij.psi.util.CachedValuesManager"
                    serviceImplementation="com.intellij.util.CachedValuesManagerImpl"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.impl.projectlevelman.AllVcsesI"
                    serviceImplementation="com.intellij.openapi.vcs.impl.projectlevelman.AllVcses"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.changes.RemoteRevisionsCache"
                    serviceImplementation="com.intellij.openapi.vcs.changes.RemoteRevisionsCache"/>

    <projectService serviceInterface="com.intellij.execution.testframework.export.ExportTestResultsConfiguration"
                    serviceImplementation="com.intellij.execution.testframework.export.ExportTestResultsConfiguration"/>

    <projectService serviceInterface="com.intellij.execution.testframework.autotest.AutoTestManager"
                    serviceImplementation="com.intellij.execution.testframework.autotest.AutoTestManager"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.VcsFileListenerContextHelper"
                    serviceImplementation="com.intellij.openapi.vcs.VcsFileListenerContextHelper"/>

    <!-- General -->
    <applicationConfigurable instance="com.intellij.ide.GeneralSettingsConfigurable"/>

    <!-- Appearance -->
    <applicationConfigurable instance="com.intellij.ide.ui.AppearanceConfigurable" id="appearance" key="title.appearance"
                             bundle="messages.IdeBundle"/>

    <!-- Keymap -->
    <applicationConfigurable instance="com.intellij.openapi.keymap.impl.ui.KeymapPanel" id="preferences.keymap" key="keymap.display.name"
                             bundle="messages.KeyMapBundle"/>
    <applicationConfigurable instance="com.intellij.openapi.keymap.impl.ui.QuickListsPanel" id="reference.idesettings.quicklists"
                             displayName="Quick Lists"/>

    <!-- Customizations -->
    <applicationConfigurable instance="com.intellij.ide.ui.customization.CustomizationConfigurable" id="preferences.customizations"
                             key="title.customizations" bundle="messages.IdeBundle"/>

    <!-- Web Browser -->
    <applicationConfigurable instance="com.intellij.ide.BrowserSettings" id="reference.settings.ide.settings.web.browsers"
                             key="browsers.settings" bundle="messages.IdeBundle"/>

    <!-- Notifications -->
    <applicationConfigurable instance="com.intellij.notification.impl.NotificationsConfigurable"/>

    <!-- Plugins -->
    <applicationConfigurable instance="com.intellij.ide.plugins.PluginManagerConfigurable" id="preferences.pluginManager"
                             displayName="Plugins"/>
    <applicationConfigurable instance="com.intellij.util.net.HTTPProxySettingsPanel" id="http.proxy" displayName="HTTP Proxy"/>
    <applicationConfigurable instance="com.intellij.openapi.diff.impl.external.DiffOptionsForm" id="diff"
                             displayName="External Diff Tools"/>
    <!--<applicationConfigurable instance="com.intellij.ui.switcher.QuickAccessConfigurable"/>-->

    <fileTypeFactory implementation="com.intellij.openapi.fileTypes.impl.PlatformFileTypeFactory"/>
    <postStartupActivity implementation="com.intellij.openapi.fileTypes.impl.ApproveRemovedMappingsActivity"/>
    <applicationService serviceInterface="com.intellij.openapi.options.colors.ColorSettingsPages"
                        serviceImplementation="com.intellij.openapi.options.colors.pages.ColorSettingsPagesImpl"/>

    <applicationConfigurable instance="com.intellij.openapi.updateSettings.impl.UpdateSettingsConfigurable" id="preferences.updates"
                             key="updates.settings.title" bundle="messages.IdeBundle"/>

    <applicationService serviceInterface="com.intellij.psi.search.scope.packageSet.PackageSetFactory"
                        serviceImplementation="com.intellij.psi.search.scope.packageSet.PackageSetFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.ui.ColorChooserService"
                        serviceImplementation="com.intellij.ui.ColorChooserServiceImpl"/>

    <scopeParserExtension implementation="com.intellij.psi.search.scope.packageSet.FilePackageSetParserExtension"/>
    <applicationService serviceInterface="com.intellij.openapi.ui.popup.StackingPopupDispatcher"
                        serviceImplementation="com.intellij.ui.popup.StackingPopupDispatcherImpl"/>

    <projectService serviceInterface="org.consulo.psi.PsiPackageManager"
                    serviceImplementation="org.consulo.psi.impl.PsiPackageManagerImpl"/>
    <fileEditorProvider implementation="com.intellij.openapi.fileEditor.impl.http.HttpFileEditorProvider"/>
    <componentConfigurationMerger implementation="com.intellij.openapi.vcs.changes.shelf.ShelfManagerConfigurationMerger"/>
    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.codeInsight.hint.EscapeHandler" id="hide-hints"/>
    <componentRoamingType component="ChangeListManager" type="DISABLED"/>
    <componentRoamingType component="RestoreUpdateTree" type="DISABLED"/>
    <componentRoamingType component="PropertiesComponent" type="DISABLED"/>


    <bundledKeymap file="/keymap/Keymap_Default.xml"/>
    <bundledKeymap file="/keymap/Keymap_Mac.xml"/>
    <bundledKeymap file="/keymap/Keymap_MacClassic.xml"/>
    <bundledKeymap file="/keymap/Keymap_Emacs.xml"/>
    <bundledKeymap file="/keymap/Keymap_VisualStudio.xml"/>
    <bundledKeymap file="/keymap/Keymap_XWin.xml"/>
    <bundledKeymap file="/keymap/Keymap_GNOME.xml"/>
    <bundledKeymap file="/keymap/Keymap_KDE.xml"/>
    <bundledKeymap file="/keymap/Keymap_Eclipse.xml"/>
    <bundledKeymap file="/keymap/Keymap_EclipseMac.xml"/>
    <bundledKeymap file="/keymap/Keymap_Netbeans.xml"/>
    <bundledKeymap file="/keymap/JBuilderKeymap.xml"/>
    <!-- <checkinHandlerFactory implementation="com.intellij.openapi.vcs.CheckRemoteStatusCheckinHandlerFactory"/> -->

    <statistics.usagesCollector implementation="com.intellij.ide.plugins.DisabledPluginsUsagesCollector"/>
    <statistics.usagesCollector implementation="com.intellij.ide.plugins.NonBundledPluginsUsagesCollector"/>
    <statistics.usagesCollector implementation="com.intellij.featureStatistics.FeaturesUsageCollector"/>
    <statistics.usagesCollector implementation="com.intellij.openapi.vcs.statistics.VcsUsagesCollector"/>
    <statistics.usagesCollector implementation="com.intellij.internal.statistic.UsageTrigger$MyCollector"/>
    <!--<statistics.usagesCollector implementation="com.intellij.internal.statistic.ideSettings.IdeSettingsUsagesCollector"/>-->
    <statistics.usagesCollector implementation="com.intellij.internal.statistic.ideSettings.LaFUsagesCollector"/>

    <applicationConfigurable instance="com.intellij.internal.statistic.configurable.StatisticsConfigurable" id="usage.statistics"
                             displayName="Usage Statistics"/>

    <virtualFileSystem key="dummy" implementationClass="com.intellij.openapi.vfs.ex.dummy.DummyFileSystem"/>
    <virtualFileSystem key="http" implementationClass="com.intellij.openapi.vfs.impl.http.HttpFileSystemImpl"/>
    <virtualFileSystem key="https" implementationClass="com.intellij.openapi.vfs.impl.http.HttpsFileSystem"/>

    <toolWindow id="Event Log" anchor="bottom" secondary="true"
                icon="AllIcons.Ide.NoNotifications13"
                factoryClass="com.intellij.notification.EventLogToolWindowFactory"/>

    <projectService serviceInterface="com.intellij.openapi.wm.impl.ProjectFrameBounds"
                    serviceImplementation="com.intellij.openapi.wm.impl.ProjectFrameBounds"/>

    <applicationService serviceInterface="com.intellij.ide.TypePresentationService"
                        serviceImplementation="com.intellij.ide.TypePresentationServiceImpl"/>

    <postStartupActivity implementation="com.intellij.ide.TipOfTheDayManager"/>
    <postStartupActivity implementation="com.intellij.openapi.actionSystem.impl.ActionPreloader"/>
    <postStartupActivity id="OpenFilesActivity" implementation="com.intellij.openapi.fileEditor.impl.OpenFilesActivity"/>

    <patch.extension implementation="com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP"/>
    <patch.extension implementation="com.intellij.openapi.diff.impl.patch.CharsetEP"/>

    <iconDescriptorUpdater implementation="com.intellij.ide.LockedIconDescriptorUpdater" />

    <fileEditorProvider implementation="com.intellij.openapi.fileEditor.impl.text.LargeFileEditorProvider"/>
    <frameEditorComponentProvider implementation="com.intellij.openapi.wm.ex.DefaultFrameEditorComponentProvider"/>

    <xmlRpcHandler name="fileOpener" implementation="com.intellij.ide.OpenFileXmlRpcHandler"/>

    <applicationService serviceInterface="org.jetbrains.ide.BuiltInServerManager"
                        serviceImplementation="org.jetbrains.ide.BuiltInServerManagerImpl"/>
    <applicationService serviceInterface="com.intellij.ide.XmlRpcServer" serviceImplementation="com.intellij.ide.XmlRpcServerImpl"/>
    <httpRequestHandler implementation="com.intellij.ide.XmlRpcServerImpl$XmlRpcRequestHandler"/>
    <postStartupActivity implementation="org.jetbrains.ide.BuiltInServerManagerImpl$MyPostStartupActivity"/>

    <editorNotificationProvider implementation="com.intellij.ide.FileChangedNotificationProvider"/>

    <getDataRule key="context.ProjectFileDirectory" implementationClass="com.intellij.ide.impl.dataRules.ProjectFileDirectoryRule"/>

    <localInspection shortName="InconsistentLineSeparators" bundle="messages.InspectionsBundle" key="inconsistent.line.separators"
                     groupKey="group.names.portability.issues" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeStyle.InconsistentLineSeparatorsInspection"/>

    <!--VCS-->
    <applicationService serviceInterface="com.intellij.openapi.vcs.actions.VcsContextFactory"
                        serviceImplementation="com.intellij.peer.impl.VcsContextFactoryImpl"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.AbstractVcsHelper"
                    serviceImplementation="com.intellij.openapi.vcs.impl.AbstractVcsHelperImpl"/>
    <projectService serviceInterface="com.intellij.openapi.vcs.IssueNavigationConfiguration"
                    serviceImplementation="com.intellij.openapi.vcs.IssueNavigationConfiguration"/>
    <projectService serviceInterface="com.intellij.openapi.diff.DirDiffManager"
                    serviceImplementation="com.intellij.openapi.diff.impl.dir.DirDiffManagerImpl"/>
    <projectService serviceImplementation="com.intellij.openapi.vcs.VcsConfiguration"/>
    <projectService serviceImplementation="com.intellij.openapi.vcs.contentAnnotation.VcsContentAnnotationSettings"/>
    <projectService serviceImplementation="com.intellij.openapi.diff.impl.settings.MergeToolSettings"/>
    <projectService serviceImplementation="com.intellij.openapi.diff.impl.settings.DiffToolSettings"/>

    <selectInTarget implementation="com.intellij.openapi.vcs.changes.SelectInChangesViewTarget"/>

    <projectConfigurable instance="com.intellij.openapi.vcs.configurable.VcsManagerConfigurable" id="vcs"/>

    <changesViewContent tabName="Repository" className="com.intellij.openapi.vcs.changes.committed.CommittedChangesViewManager"
                        predicateClassName="com.intellij.openapi.vcs.changes.committed.CommittedChangesVisibilityPredicate"/>
    <changesViewContent tabName="Incoming" className="com.intellij.openapi.vcs.changes.committed.IncomingChangesViewProvider"
                        predicateClassName="com.intellij.openapi.vcs.changes.committed.IncomingChangesVisibilityPredicate"/>

    <vcs.fileStatusProvider implementation="com.intellij.openapi.vcs.changes.conflicts.ChangelistConflictFileStatusProvider"/>
    <writingAccessProvider implementation="com.intellij.openapi.vcs.changes.conflicts.ChangelistConflictAccessProvider"/>
    <editorNotificationProvider implementation="com.intellij.openapi.vcs.changes.conflicts.ChangelistConflictNotificationProvider"/>

    <handleTypeFactory implementation="com.intellij.openapi.vcs.readOnlyHandler.VcsHandleTypeFactory"/>

    <keymapExtension implementation="com.intellij.openapi.vcs.impl.VcsKeymapExtension"/>
    <fileTypeFactory implementation="com.intellij.openapi.vcs.impl.VcsFileTypeFactory"/>
    <virtualFileSystem key="vcs" implementationClass="com.intellij.openapi.vcs.vfs.VcsFileSystem"/>
    <fileDocumentSynchronizationVetoer implementation="com.intellij.openapi.vcs.changes.SaveCommittingDocumentsVetoer"/>

    <applicationService serviceImplementation="com.intellij.openapi.vcs.VcsApplicationSettings"/>
    <applicationService serviceInterface="com.intellij.openapi.vcs.impl.CheckinHandlersManager"
                        serviceImplementation="com.intellij.openapi.vcs.impl.CheckinHandlersManagerImpl"/>
    <pathMacroFilter implementation="com.intellij.openapi.vcs.VcsPathMacroFilter"/>

    <!--Rich-->
    <projectViewPane implementation="com.intellij.ide.projectView.impl.ProjectViewPane"/>
    <projectViewPane implementation="com.intellij.ide.projectView.impl.PackageViewPane"/>

    <appStarter implementation="com.intellij.compiler.ant.GenerateAntMain"/>

    <renameHandler implementation="com.intellij.ide.projectView.impl.RenameModuleHandler"/>
    <renameHandler implementation="com.intellij.openapi.roots.impl.libraries.RenameLibraryHandler"/>

    <fileTypeFactory implementation="com.intellij.openapi.fileTypes.impl.InternalFileTypeFactory"/>

    <packaging.sourceItemProvider
        implementation="com.intellij.openapi.roots.ui.configuration.artifacts.sourceItems.ModulesAndLibrariesSourceItemsProvider"/>
    <packaging.sourceItemProvider
        implementation="com.intellij.openapi.roots.ui.configuration.artifacts.sourceItems.ArtifactsSourceItemsProvider"/>
    <packaging.artifactType implementation="com.intellij.packaging.impl.artifacts.ZipArtifactType" order="first" id="zip-artifact"/>
    <packaging.artifactType implementation="com.intellij.packaging.impl.artifacts.PlainArtifactType" order="last"/>
    <compiler.additionalCompileScopeProvider implementation="com.intellij.packaging.impl.compiler.ArtifactAdditionalCompileScopeProvider"/>
    <gotoRelatedProvider implementation="com.intellij.testIntegration.GotoTestRelatedProvider"/>


    <applicationService serviceInterface="com.intellij.compiler.ant.BuildTargetsFactory"
                        serviceImplementation="com.intellij.compiler.ant.BuildTargetsFactoryImpl"/>


    <applicationService serviceInterface="com.intellij.packaging.elements.PackagingElementFactory"
                        serviceImplementation="com.intellij.packaging.impl.elements.PackagingElementFactoryImpl"/>


    <applicationService serviceInterface="com.intellij.openapi.roots.ui.OrderEntryAppearanceService"
                        serviceImplementation="com.intellij.openapi.roots.ui.OrderEntryAppearanceServiceImpl"/>

    <projectService serviceInterface="com.intellij.packaging.artifacts.ArtifactPointerManager"
                    serviceImplementation="com.intellij.packaging.impl.artifacts.ArtifactPointerManagerImpl"/>
    <projectService serviceInterface="com.intellij.packaging.impl.artifacts.ArtifactBySourceFileFinder"
                    serviceImplementation="com.intellij.packaging.impl.artifacts.ArtifactBySourceFileFinderImpl"/>
    <projectService serviceInterface="com.intellij.packaging.impl.artifacts.ArtifactSortingUtil"
                    serviceImplementation="com.intellij.packaging.impl.artifacts.ArtifactSortingUtilImpl"/>
    <applicationService serviceImplementation="com.intellij.packaging.impl.artifacts.InvalidArtifactType"/>

    <projectService serviceInterface="com.intellij.openapi.compiler.CompilerManager"
                    serviceImplementation="org.consulo.compiler.impl.CompilerManagerImpl"/>

    <projectService serviceInterface="com.intellij.compiler.CompilerConfiguration"
                    serviceImplementation="com.intellij.compiler.CompilerConfigurationImpl"/>

    <projectService serviceInterface="com.intellij.compiler.CompilerEncodingService"
                    serviceImplementation="com.intellij.compiler.CompilerEncodingServiceImpl"/>

    <projectService serviceInterface="com.intellij.packaging.impl.compiler.ArtifactsWorkspaceSettings"
                    serviceImplementation="com.intellij.packaging.impl.compiler.ArtifactsWorkspaceSettings"/>

    <projectService serviceInterface="com.intellij.compiler.CompilerWorkspaceConfiguration"
                    serviceImplementation="com.intellij.compiler.CompilerWorkspaceConfiguration"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.changes.ui.ChangesGroupingPolicyFactory"
                    serviceImplementation="com.intellij.openapi.vcs.changes.ui.ChangesModuleGroupingPolicyFactory"/>

    <projectService serviceInterface="com.intellij.openapi.roots.FileIndexFacade"
                    serviceImplementation="com.intellij.openapi.roots.impl.ProjectFileIndexFacade"/>
    <projectService serviceInterface="com.intellij.openapi.vcs.impl.VcsPathPresenter"
                    serviceImplementation="com.intellij.openapi.vcs.impl.ModuleVcsPathPresenter"/>

    <projectService serviceInterface="com.intellij.compiler.impl.javaCompiler.javac.JavacConfiguration"
                    serviceImplementation="com.intellij.compiler.impl.javaCompiler.javac.JavacConfiguration"/>
    <projectService serviceInterface="com.intellij.compiler.impl.javaCompiler.api.CompilerAPIConfiguration"
                    serviceImplementation="com.intellij.compiler.impl.javaCompiler.api.CompilerAPIConfiguration"/>
    <projectService serviceInterface="com.intellij.compiler.impl.javaCompiler.eclipse.EclipseCompilerConfiguration"
                    serviceImplementation="com.intellij.compiler.impl.javaCompiler.eclipse.EclipseCompilerConfiguration"/>
    <projectService serviceInterface="com.intellij.compiler.impl.javaCompiler.eclipse.EclipseEmbeddedCompilerConfiguration"
                    serviceImplementation="com.intellij.compiler.impl.javaCompiler.eclipse.EclipseEmbeddedCompilerConfiguration"/>
    <projectService serviceInterface="com.intellij.compiler.impl.rmiCompiler.RmicConfiguration"
                    serviceImplementation="com.intellij.compiler.impl.rmiCompiler.RmicConfiguration"/>
    <projectService serviceInterface="com.intellij.compiler.impl.javaCompiler.jikes.JikesConfiguration"
                    serviceImplementation="com.intellij.compiler.impl.javaCompiler.jikes.JikesConfiguration"/>

    <applicationService serviceInterface="com.intellij.openapi.wm.impl.FrameTitleBuilder"
                        serviceImplementation="com.intellij.openapi.wm.IdeaFrameTitleBuilder"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.ui.configuration.libraries.LibraryPresentationManager"
                        serviceImplementation="com.intellij.openapi.roots.ui.configuration.libraries.impl.LibraryPresentationManagerImpl"/>
    <projectService serviceInterface="com.intellij.openapi.roots.ui.configuration.dependencyAnalysis.AnalyzeDependenciesSettings"
                    serviceImplementation="com.intellij.openapi.roots.ui.configuration.dependencyAnalysis.AnalyzeDependenciesSettings"/>

    <daemon.highlightInfoFilter implementation="com.intellij.codeInsight.daemon.impl.HighlightInfoFilterImpl"/>


    <!-- Project Configurables -->
    <projectService serviceImplementation="com.intellij.openapi.roots.ui.configuration.projectRoot.ModuleStructureConfigurable"/>
    <projectService serviceImplementation="com.intellij.openapi.roots.ui.configuration.artifacts.ArtifactsStructureConfigurable"/>
    <projectService serviceImplementation="com.intellij.openapi.roots.ui.configuration.projectRoot.ProjectLibrariesConfigurable"/>
    <projectService serviceImplementation="com.intellij.openapi.roots.ui.configuration.projectRoot.GlobalLibrariesConfigurable"/>
    <projectService serviceImplementation="com.intellij.openapi.roots.ui.configuration.projectRoot.SdkListConfigurable"/>
    <projectService serviceInterface="com.intellij.ide.projectView.impl.nodes.BaseProjectViewDirectoryHelper"
                    serviceImplementation="com.intellij.ide.projectView.impl.DefaultProjectViewDirectoryHelper"/>

    <!-- Compiler -->
    <projectConfigurable instance="com.intellij.compiler.options.CompilerConfigurable" id="project.propCompiler"
                         key="compiler.configurable.display.name" bundle="messages.CompilerBundle" order="after project"/>

    <projectConfigurable id="project.propCompiler.excluded" bundle="messages.CompilerBundle" key="actions.exclude.from.compile.text"
                         parentId="project.propCompiler"
                         instance="com.intellij.compiler.options.CompilerExcludedConfigurable"/>

    <projectConfigurable instance="com.intellij.psi.templateLanguages.TemplateDataLanguageConfigurable" id="Template Data Languages"
                         key="template.data.language.configurable" bundle="messages.LangBundle"/>


    <!-- Application Configurables -->

    <!-- Path Variables -->
    <!-- the implementation of this configurable is in platform-impl but it's not registered in platform because
         it's only required in full IDEA -->
    <applicationConfigurable instance="com.intellij.application.options.pathMacros.PathMacroConfigurable" id="preferences.pathVariables"
                             key="title.path.variables" bundle="messages.ApplicationBundle"/>

    <applicationConfigurable instance="com.intellij.execution.console.ConsoleFoldingConfigurable" id="Console Folding"
                             displayName="Console Folding"/>

    <checkoutListener implementation="com.intellij.openapi.vcs.checkout.ProjectCheckoutListener"/>
    <checkoutListener implementation="com.intellij.openapi.vcs.checkout.ProjectDirCheckoutListener"/>
    <checkoutListener implementation="com.intellij.openapi.vcs.checkout.ProjectImporterCheckoutListener"/>
    <vcsAwareCheckoutListener implementation="com.intellij.openapi.vcs.checkout.NewProjectCheckoutListener"/>

    <codeStyleSettingsProvider implementation="com.intellij.application.options.CommonCodeStyleSettingsProvider"/>

    <!-- new project wizard -->
    <wizardMode implementation="com.intellij.ide.util.newProjectWizard.modes.CreateFromTemplateMode" id="CreateFromTemplateMode"
                order="after CreateFromScratchMode"/>
    <wizardMode implementation="com.intellij.ide.util.newProjectWizard.modes.ImportMode" order="before ImportImlMode"/>
    <wizardMode implementation="com.intellij.ide.util.newProjectWizard.modes.ImportImlMode" id="ImportImlMode"/>

    <projectImportProvider implementation="com.intellij.ide.util.projectWizard.ImportFromSourcesProvider"/>

    <projectTemplatesFactory implementation="com.intellij.platform.templates.ArchivedTemplatesFactory"/>
    <!--
    <projectTemplatesFactory implementation="com.intellij.platform.templates.RemoteTemplatesFactory"/>
    -->
    <projectTemplatesFactory implementation="com.intellij.platform.templates.PlainModuleTemplatesFactory"/>
    <projectTemplateFileProcessor implementation="com.intellij.platform.templates.SystemFileProcessor"/>

    <applicationService serviceImplementation="com.intellij.ide.util.newProjectWizard.SelectTemplateSettings"/>

    <gotoFileContributor implementation="com.intellij.ide.util.gotoByName.ProjectBaseDirNavigationContributor"/>


    <orderRootTypeEditor key="DOCUMENTATION"
                     implementationClass="com.intellij.openapi.roots.ui.configuration.libraryEditor.DocumentationOrderRootTypeUIFactory"/>
    <orderRootTypeEditor key="CLASSES"
                     implementationClass="com.intellij.openapi.roots.ui.configuration.libraryEditor.ClassesOrderRootTypeUIFactory"/>
    <orderRootTypeEditor key="SOURCES"
                     implementationClass="com.intellij.openapi.roots.ui.configuration.libraryEditor.SourcesOrderRootTypeUIFactory"/>

    <statistics.usagesCollector implementation="com.intellij.openapi.roots.ui.configuration.libraries.impl.LibraryUsageCollector"/>
    <!--TODO [VISTALL] <statistics.usagesCollector implementation="com.intellij.compiler.CompilerSettingsUsageCollector"/>    -->

    <keymapExtension implementation="com.intellij.xdebugger.impl.actions.DebuggerKeymapExtension"/>

    <copyPastePostProcessor implementation="com.intellij.codeInsight.editorActions.CopyPasteFoldingProcessor"/>


    <stepsBeforeRunProvider implementation="com.intellij.compiler.options.CompileStepBeforeRun" id="compileBeforeRun"/>
    <stepsBeforeRunProvider implementation="com.intellij.compiler.options.CompileStepBeforeRunNoErrorCheck"
                            id="compileBeforeRunNoErrorCheck" order="after compileBeforeRun"/>
    <stepsBeforeRunProvider implementation="com.intellij.packaging.impl.run.BuildArtifactsBeforeRunTaskProvider"
                            order="after compileBeforeRunNoErrorCheck"/>
    <stepsBeforeRunProvider implementation="com.intellij.execution.impl.RunConfigurationBeforeRunProvider"/>

    <hectorComponentProvider implementation="com.intellij.codeInsight.daemon.impl.ImportPopupHectorComponentProvider"/>


    <usageFilteringRuleProvider implementation="com.intellij.usages.impl.ImportUsageFilteringRuleProvider"/>
    <applicationService serviceInterface="com.intellij.usages.impl.ImportFilteringUsageViewSetting"
                        serviceImplementation="com.intellij.usages.impl.ImportFilteringUsageViewSetting"/>

    <!-- this depends on TemplateLanguageConfigurable which isn't registered in LangExtensions, so it should go here as well -->
    <errorQuickFixProvider implementation="com.intellij.psi.templateLanguages.TemplateLanguageErrorQuickFixProvider"/>

    <!-- File Exclusions -->
    <!--
    <projectService serviceInterface="com.intellij.openapi.file.exclude.ProjectFileExclusionManager"
                    serviceImplementation="com.intellij.openapi.file.exclude.ProjectFileExclusionManagerImpl"/>
    <projectConfigurable instance="com.intellij.openapi.file.exclude.ui.ExcludedFilesConfigurable"/>
    -->
    <fileTypeFactory implementation="com.intellij.openapi.file.exclude.EnforcedPlainTextFileTypeFactory"/>
    <applicationService serviceInterface="com.intellij.openapi.file.exclude.EnforcedPlainTextFileTypeManager"
                        serviceImplementation="com.intellij.openapi.file.exclude.EnforcedPlainTextFileTypeManager"/>
    <projectService serviceInterface="com.intellij.openapi.file.exclude.ProjectPlainTextFileTypeManager"
                    serviceImplementation="com.intellij.openapi.file.exclude.ProjectPlainTextFileTypeManager"/>

    <projectService serviceInterface="org.consulo.compiler.CompilerPathsManager"
                    serviceImplementation="org.consulo.compiler.impl.CompilerPathsManagerImpl"/>
    <roots.watchedRootsProvider implementation="org.consulo.compiler.impl.CompilerPathsManagerImpl$MyWatchedRootsProvider"/>
    <projectService serviceInterface="com.intellij.openapi.roots.ui.configuration.projectRoot.daemon.ProjectStructureProblemsSettings"
                    serviceImplementation="com.intellij.openapi.roots.ui.configuration.projectRoot.daemon.ProjectStructureProblemsSettingsImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.roots.ui.configuration.projectRoot.daemon.ProjectStructureProblemsSettings"
                        serviceImplementation="com.intellij.openapi.roots.ui.configuration.projectRoot.daemon.GlobalProjectStructureProblemsSettings"/>

    <!--Lang-->
    <appStarter implementation="com.intellij.codeInspection.InspectionMain"/>
    <appStarter implementation="com.intellij.ide.ui.search.TraverseUIStarter"/>

    <referencesSearch implementation="com.intellij.psi.impl.search.CachesBasedRefSearcher"/>

    <applicationService serviceInterface="com.intellij.codeInsight.completion.CompletionService"
                        serviceImplementation="com.intellij.codeInsight.completion.impl.CompletionServiceImpl"/>

    <applicationService serviceInterface="com.intellij.lang.cacheBuilder.CacheBuilderRegistry"
                        serviceImplementation="com.intellij.lang.cacheBuilder.CacheBuilderRegistryImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.intention.IntentionManager"
                        serviceImplementation="com.intellij.codeInsight.intention.impl.config.IntentionManagerImpl"/>

    <applicationService serviceInterface="com.intellij.concurrency.JobLauncher"
                        serviceImplementation="com.intellij.concurrency.JobLauncherImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.project.ProjectLocator"
                        serviceImplementation="com.intellij.openapi.project.ProjectLocatorImpl"/>

    <applicationService serviceInterface="com.intellij.packageDependencies.DependencyUISettings"
                        serviceImplementation="com.intellij.packageDependencies.DependencyUISettings"/>

    <applicationService serviceInterface="com.intellij.ide.fileTemplates.FileTemplateManager"
                        serviceImplementation="com.intellij.ide.fileTemplates.impl.FileTemplateManagerImpl"/>
    <applicationService serviceInterface="com.intellij.ide.fileTemplates.impl.ExportableFileTemplateSettings"
                        serviceImplementation="com.intellij.ide.fileTemplates.impl.ExportableFileTemplateSettings"/>
    <exportable serviceInterface="com.intellij.ide.fileTemplates.impl.ExportableFileTemplateSettings"/>

    <applicationService serviceInterface="com.intellij.ide.PsiCopyPasteManager"
                        serviceImplementation="com.intellij.ide.PsiCopyPasteManager"/>

    <applicationService serviceInterface="com.intellij.usages.UsageViewSettings"
                        serviceImplementation="com.intellij.usages.UsageViewSettings"/>
    <applicationService serviceInterface="com.intellij.refactoring.RefactoringSettings"
                        serviceImplementation="com.intellij.refactoring.RefactoringSettings"/>
    <applicationService serviceInterface="com.intellij.refactoring.RefactoringActionHandlerFactory"
                        serviceImplementation="com.intellij.refactoring.openapi.impl.RefactoringActionHandlerFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.execution.filters.TextConsoleBuilderFactory"
                        serviceImplementation="com.intellij.execution.filters.TextConsoleBuilderFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.lang.PsiBuilderFactory"
                        serviceImplementation="com.intellij.lang.impl.PsiBuilderFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.documentation.DocumentationManagerUtil"
                        serviceImplementation="com.intellij.codeInsight.documentation.DocumentationManagerUtil"/>

    <applicationService serviceInterface="com.intellij.navigation.ChooseByNameRegistry"
                        serviceImplementation="com.intellij.navigation.ChooseByNameRegistry"/>

    <applicationService serviceInterface="com.intellij.application.options.CodeStyleSettingsUtil"
                        serviceImplementation="com.intellij.application.options.CodeStyleSettingsUtilImpl"/>

    <applicationService serviceInterface="com.intellij.ide.PsiActionSupportFactory"
                        serviceImplementation="com.intellij.ide.PsiActionSupportFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.codeInspection.ex.InspectionToolRegistrar"
                        serviceImplementation="com.intellij.codeInspection.ex.InspectionToolRegistrar"/>
    <applicationService serviceInterface="com.intellij.codeInsight.template.impl.TemplateSettings"
                        serviceImplementation="com.intellij.codeInsight.template.impl.TemplateSettings"/>
    <applicationService serviceInterface="com.intellij.codeInsight.template.impl.ExportableTemplateSettings"
                        serviceImplementation="com.intellij.codeInsight.template.impl.ExportableTemplateSettings"/>
    <applicationService serviceInterface="com.intellij.execution.ui.layout.impl.RunnerLayoutSettings"
                        serviceImplementation="com.intellij.execution.ui.layout.impl.RunnerLayoutSettings"/>
    <exportable serviceInterface="com.intellij.codeInsight.template.impl.TemplateSettings"/>

    <applicationService serviceInterface="com.intellij.codeEditor.printing.PrintSettings"
                        serviceImplementation="com.intellij.codeEditor.printing.PrintSettings"/>
    <exportable serviceInterface="com.intellij.codeEditor.printing.PrintSettings"/>
    <applicationService serviceInterface="com.intellij.codeInsight.daemon.DaemonCodeAnalyzerSettings"
                        serviceImplementation="com.intellij.codeInsight.daemon.DaemonCodeAnalyzerSettingsImpl"/>
    <exportable serviceInterface="com.intellij.codeInsight.daemon.DaemonCodeAnalyzerSettings"/>

    <projectService serviceInterface="com.intellij.pom.references.PomService"
                    serviceImplementation="com.intellij.pom.references.PomServiceImpl"/>

    <projectService serviceInterface="com.intellij.psi.search.PsiSearchHelper"
                    serviceImplementation="com.intellij.psi.impl.search.PsiSearchHelperImpl"/>

    <projectService serviceInterface="com.intellij.psi.search.PsiTodoSearchHelper"
                    serviceImplementation="com.intellij.psi.impl.search.PsiTodoSearchHelperImpl"/>

    <projectService serviceInterface="com.intellij.codeInsight.lookup.LookupManager"
                    serviceImplementation="com.intellij.codeInsight.lookup.impl.LookupManagerImpl"/>

    <applicationService serviceInterface="com.intellij.psi.meta.MetaDataRegistrar"
                        serviceImplementation="com.intellij.psi.impl.meta.MetaRegistry"/>

    <applicationService serviceInterface="com.intellij.openapi.paths.PathReferenceManager"
                        serviceImplementation="com.intellij.openapi.paths.PathReferenceManagerImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.folding.CodeFoldingSettings"
                        serviceImplementation="com.intellij.codeInsight.folding.CodeFoldingSettingsImpl"/>
    <exportable serviceInterface="com.intellij.codeInsight.folding.CodeFoldingSettings"/>

    <applicationService serviceInterface="com.intellij.psi.statistics.StatisticsManager"
                        serviceImplementation="com.intellij.psi.statistics.impl.StatisticsManagerImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.intention.impl.config.IntentionManagerSettings"
                        serviceImplementation="com.intellij.codeInsight.intention.impl.config.IntentionManagerSettings"/>

    <applicationService serviceInterface="com.intellij.find.FindSettings"
                        serviceImplementation="com.intellij.find.impl.FindSettingsImpl"/>

    <applicationService serviceInterface="com.intellij.codeInsight.CodeInsightSettings"
                        serviceImplementation="com.intellij.codeInsight.CodeInsightSettings"/>
    <exportable serviceInterface="com.intellij.codeInsight.CodeInsightSettings"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.impl.libraries.ApplicationLibraryTable"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.ExportableApplicationLibraryTable"/>
    <exportable serviceInterface="com.intellij.openapi.roots.impl.libraries.ApplicationLibraryTable"/>

    <applicationService serviceInterface="com.intellij.psi.codeStyle.CodeStyleSchemes"
                        serviceImplementation="com.intellij.psi.impl.source.codeStyle.PersistableCodeStyleSchemes"/>
    <applicationService serviceInterface="com.intellij.psi.impl.source.codeStyle.LegacyCodeStyleSchemesSettings"
                        serviceImplementation="com.intellij.psi.impl.source.codeStyle.LegacyCodeStyleSchemesSettings"/>
    <exportable serviceInterface="com.intellij.psi.codeStyle.CodeStyleSchemes"/>
    <schemeOwner serviceInterface="com.intellij.psi.codeStyle.CodeStyleSchemes"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.libraries.LibraryTablesRegistrar"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.LibraryTablesRegistrarImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.libraries.LibraryDetectionManager"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.LibraryDetectionManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.libraries.LibraryTypeService"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.LibraryTypeServiceImpl"/>

    <applicationService serviceInterface="com.intellij.usageView.UsageTreeColorsScheme"
                        serviceImplementation="com.intellij.usageView.UsageTreeColorsScheme"/>

    <applicationService serviceInterface="com.intellij.ui.IconDeferrer"
                        serviceImplementation="com.intellij.ui.IconDeferrerImpl"/>

    <applicationService serviceInterface="com.intellij.ui.mac.MacMessages"
                        serviceImplementation="com.intellij.ui.mac.MacMessagesImpl"/>

    <applicationService serviceInterface="com.intellij.psi.codeStyle.AppCodeStyleSettingsManager"
                        serviceImplementation="com.intellij.psi.codeStyle.AppCodeStyleSettingsManager"/>

    <applicationService serviceInterface="com.intellij.psi.impl.source.resolve.reference.impl.providers.FileInfoManager"
                        serviceImplementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.FileInfoManager"/>

    <applicationService serviceInterface="com.intellij.psi.PsiReferenceService"
                        serviceImplementation="com.intellij.psi.PsiReferenceServiceImpl"/>

    <applicationService serviceInterface="com.intellij.patterns.compiler.PatternCompilerFactory"
                        serviceImplementation="com.intellij.patterns.compiler.PatternCompilerFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.ide.PowerSaveMode"
                        serviceImplementation="com.intellij.ide.PowerSaveMode"/>

    <applicationService serviceInterface="com.intellij.util.download.DownloadableFileService"
                        serviceImplementation="com.intellij.util.download.impl.DownloadableFileServiceImpl"/>

    <applicationService serviceInterface="com.intellij.psi.impl.DocumentCommitThread"
                        serviceImplementation="com.intellij.psi.impl.DocumentCommitThread"/>

    <applicationService serviceInterface="com.intellij.psi.stubs.StubTreeLoader"
                        serviceImplementation="com.intellij.psi.stubs.StubTreeLoaderImpl"/>

    <applicationService serviceInterface="com.intellij.ide.util.PsiNavigationSupport"
                        serviceImplementation="com.intellij.ide.util.PsiNavigationSupportImpl"/>

    <applicationService serviceInterface="com.intellij.psi.impl.source.codeStyle.IndentHelper"
                        serviceImplementation="com.intellij.psi.impl.source.codeStyle.IndentHelperImpl"/>

    <applicationService serviceInterface="com.intellij.lang.DefaultASTFactory"
                        serviceImplementation="com.intellij.lang.DefaultASTFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.conversion.ConversionService"
                        serviceImplementation="com.intellij.conversion.impl.ConversionServiceImpl"/>

    <applicationService serviceInterface="com.intellij.psi.search.searches.IndexPatternSearch"
                        serviceImplementation="com.intellij.psi.impl.search.IndexPatternSearchImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.fileEditor.UniqueVFilePathBuilder"
                        serviceImplementation="com.intellij.openapi.fileEditor.impl.UniqueVFilePathBuilderImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.roots.impl.libraries.JarDirectoryWatcherFactory"
                        serviceImplementation="com.intellij.openapi.roots.impl.libraries.JarDirectoryWatcherFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.codeStyle.CodeStyleFacade"
                        serviceImplementation="com.intellij.psi.impl.source.codeStyle.CodeStyleFacadeImpl"/>

    <applicationService serviceImplementation="com.intellij.psi.codeStyle.arrangement.engine.ArrangementEngine"/>
    <applicationService serviceImplementation="com.intellij.psi.codeStyle.arrangement.MemberOrderService"/>

    <applicationService serviceInterface="org.consulo.sdk.SdkPointerManager"
                        serviceImplementation="org.consulo.sdk.impl.SdkPointerManagerImpl"/>
    <rearranger.ui implementation="com.intellij.application.options.codeStyle.arrangement.component.DefaultArrangementUiComponentFactory"/>

    <projectService serviceInterface="com.intellij.ui.EditorTextFieldProvider"
                    serviceImplementation="com.intellij.ui.EditorTextFieldProviderImpl"/>

    <projectService serviceInterface="com.intellij.psi.codeStyle.ProjectCodeStyleSettingsManager"
                    serviceImplementation="com.intellij.psi.codeStyle.ProjectCodeStyleSettingsManager"/>

    <projectService serviceInterface="com.intellij.psi.codeStyle.LegacyCodeStyleSettingsManager"
                    serviceImplementation="com.intellij.psi.codeStyle.LegacyCodeStyleSettingsManager"/>

    <projectService serviceInterface="com.intellij.codeInsight.daemon.impl.analysis.HighlightingSettingsPerFile"
                    serviceImplementation="com.intellij.codeInsight.daemon.impl.analysis.HighlightingSettingsPerFile"/>

    <projectService serviceInterface="com.intellij.find.findInProject.FindInProjectManager"
                    serviceImplementation="com.intellij.find.findInProject.FindInProjectManager"/>
    <projectService serviceInterface="com.intellij.find.replaceInProject.ReplaceInProjectManager"
                    serviceImplementation="com.intellij.find.replaceInProject.ReplaceInProjectManager"/>
    <projectService serviceInterface="com.intellij.codeHighlighting.TextEditorHighlightingPassRegistrar"
                    serviceImplementation="com.intellij.codeInsight.daemon.impl.TextEditorHighlightingPassRegistrarImpl"/>
    <projectService serviceInterface="com.intellij.psi.PsiFileFactory"
                    serviceImplementation="com.intellij.psi.impl.PsiFileFactoryImpl"/>
    <projectService serviceInterface="com.intellij.psi.text.BlockSupport"
                    serviceImplementation="com.intellij.psi.impl.source.text.BlockSupportImpl"/>
    <projectService serviceInterface="com.intellij.psi.SmartPointerManager"
                    serviceImplementation="com.intellij.psi.impl.smartPointers.SmartPointerManagerImpl"/>
    <projectService serviceInterface="com.intellij.psi.codeStyle.CodeStyleManager"
                    serviceImplementation="com.intellij.psi.impl.source.codeStyle.CodeStyleManagerImpl"/>
    <projectService serviceInterface="com.intellij.pom.PomModel"
                    serviceImplementation="com.intellij.pom.core.impl.PomModelImpl"/>
    <projectService serviceInterface="com.intellij.psi.impl.include.FileIncludeManager"
                    serviceImplementation="com.intellij.psi.impl.include.FileIncludeManagerImpl"/>
    <projectService serviceInterface="com.intellij.util.CachedValuesFactory"
                    serviceImplementation="com.intellij.psi.impl.PsiCachedValuesFactory"/>


    <projectService serviceInterface="com.intellij.openapi.roots.impl.libraries.ProjectLibraryTable"
                    serviceImplementation="com.intellij.openapi.roots.impl.libraries.ProjectLibraryTable"/>

    <projectService serviceInterface="com.intellij.psi.search.ProjectScopeBuilder"
                    serviceImplementation="com.intellij.psi.search.ProjectScopeBuilderImpl"/>

    <projectService serviceInterface="com.intellij.openapi.module.ProjectLoadingErrorsNotifier"
                    serviceImplementation="com.intellij.openapi.module.impl.ProjectLoadingErrorsNotifierImpl"/>

    <projectService serviceInterface="com.intellij.codeInsight.AutoPopupController"
                    serviceImplementation="com.intellij.codeInsight.AutoPopupController"/>

    <projectService serviceInterface="com.intellij.codeStyle.CodeStyleFacade"
                    serviceImplementation="com.intellij.psi.impl.source.codeStyle.CodeStyleFacadeImpl"/>

    <projectService serviceInterface="com.intellij.usages.UsageViewManager"
                    serviceImplementation="com.intellij.usages.impl.UsageViewManagerImpl"/>

    <projectService serviceInterface="com.intellij.analysis.AnalysisUIOptions"
                    serviceImplementation="com.intellij.analysis.AnalysisUIOptions"/>

    <projectService serviceInterface="com.intellij.ide.util.gotoByName.ChooseByNameFactory"
                    serviceImplementation="com.intellij.ide.util.gotoByName.ChooseByNameFactoryImpl"/>

    <projectService serviceInterface="com.intellij.refactoring.listeners.RefactoringListenerManager"
                    serviceImplementation="com.intellij.refactoring.listeners.impl.RefactoringListenerManagerImpl"/>

    <projectService serviceInterface="com.intellij.util.LogicalRootsManager"
                    serviceImplementation="com.intellij.util.LogicalRootsManagerImpl"/>

    <projectService serviceInterface="com.intellij.codeEditor.printing.ExportToHTMLSettings"
                    serviceImplementation="com.intellij.codeEditor.printing.ExportToHTMLSettings"/>

    <projectService serviceInterface="com.intellij.diagnostic.logging.LogConsolePreferences"
                    serviceImplementation="com.intellij.diagnostic.logging.LogConsolePreferences"/>

    <applicationService serviceInterface="com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry"
                        serviceImplementation="com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl"/>

    <projectService serviceInterface="com.intellij.find.FindManager"
                    serviceImplementation="com.intellij.find.impl.FindManagerImpl"/>

    <projectService serviceInterface="com.intellij.psi.PsiParserFacade"
                    serviceImplementation="com.intellij.psi.impl.PsiParserFacadeImpl"/>

    <projectService serviceInterface="com.intellij.ide.util.gotoByName.GotoFileConfiguration"
                    serviceImplementation="com.intellij.ide.util.gotoByName.GotoFileConfiguration"/>
    <projectService serviceInterface="com.intellij.ide.util.gotoByName.GotoClassSymbolConfiguration"
                    serviceImplementation="com.intellij.ide.util.gotoByName.GotoClassSymbolConfiguration"/>

    <projectService serviceInterface="com.intellij.ide.hierarchy.HierarchyBrowserManager"
                    serviceImplementation="com.intellij.ide.hierarchy.HierarchyBrowserManager"/>

    <projectService serviceInterface="com.intellij.psi.search.scope.packageSet.NamedScopeManager"
                    serviceImplementation="com.intellij.psi.search.scope.packageSet.NamedScopeManager"/>
    <projectService serviceInterface="com.intellij.packageDependencies.DependencyValidationManager"
                    serviceImplementation="com.intellij.packageDependencies.DependencyValidationManagerImpl"/>
    <projectService serviceInterface="com.intellij.packageDependencies.DependenciesToolWindow"
                    serviceImplementation="com.intellij.packageDependencies.DependenciesToolWindow"/>

    <projectService serviceInterface="com.intellij.codeInsight.documentation.DocumentationManager"
                    serviceImplementation="com.intellij.codeInsight.documentation.DocumentationManager"/>

    <projectService serviceInterface="com.intellij.moduleDependencies.DependenciesAnalyzeManager"
                    serviceImplementation="com.intellij.moduleDependencies.DependenciesAnalyzeManager"/>

    <projectService serviceInterface="com.intellij.ide.util.TreeFileChooserFactory"
                    serviceImplementation="com.intellij.ide.util.TreeFileChooserFactoryImpl"/>

    <projectService serviceInterface="com.intellij.psi.impl.cache.CacheManager"
                    serviceImplementation="com.intellij.psi.impl.cache.impl.IndexCacheManagerImpl"/>
    <projectService serviceInterface="com.intellij.psi.impl.cache.TodoCacheManager"
                    serviceImplementation="com.intellij.psi.impl.cache.impl.IndexTodoCacheManagerImpl"/>
    <projectService serviceInterface="com.intellij.psi.impl.ResolveScopeManager"
                    serviceImplementation="com.intellij.psi.impl.file.impl.ResolveScopeManagerImpl"/>
    <projectService serviceInterface="com.intellij.openapi.roots.ProjectFileIndex"
                    serviceImplementation="com.intellij.openapi.roots.impl.ProjectFileIndexImpl"/>
    <projectService serviceInterface="com.intellij.psi.impl.source.resolve.ResolveCache"
                    serviceImplementation="com.intellij.psi.impl.source.resolve.ResolveCache"/>
    <projectService serviceInterface="com.intellij.openapi.roots.ProjectRootModificationTracker"
                    serviceImplementation="com.intellij.openapi.roots.ProjectRootModificationTrackerImpl"/>

    <projectService serviceInterface="com.intellij.ui.FileColorManager"
                    serviceImplementation="com.intellij.ui.tabs.FileColorManagerImpl"/>

    <projectService serviceInterface="com.intellij.openapi.roots.impl.LibraryScopeCache"
                    serviceImplementation="com.intellij.openapi.roots.impl.LibraryScopeCache"/>

    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.GeneralColorsPage" id="general"/>
    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.DefaultLanguageColorsPage" id="defaultLanguage"/>
    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.ANSIColoredConsoleColorsPage" id="ansi"/>
    <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.CustomColorsPage" id="custom"/>

    <elementDescriptionProvider implementation="com.intellij.psi.impl.DefaultPomTargetDescriptionProvider" order="last" id="pomDefault"/>

    <applicationService serviceInterface="com.intellij.codeInspection.ex.AppInspectionProfilesVisibleTreeState"
                        serviceImplementation="com.intellij.codeInspection.ex.AppInspectionProfilesVisibleTreeState"/>
    <projectService serviceInterface="com.intellij.codeInspection.ex.ProjectInspectionProfilesVisibleTreeState"
                    serviceImplementation="com.intellij.codeInspection.ex.ProjectInspectionProfilesVisibleTreeState"/>

    <!-- Editor -->
    <applicationConfigurable instance="com.intellij.application.options.editor.EditorOptions" id="editor" key="title.editor"
                             bundle="messages.ApplicationBundle" order="after appearance"
                             childrenEPName="com.intellij.editorOptionsProvider"/>

    <projectService serviceInterface="com.intellij.semantic.SemService" serviceImplementation="com.intellij.semantic.SemServiceImpl"/>

    <!-- Global Code Style -->
    <projectConfigurable instance="com.intellij.application.options.CodeStyleSchemesConfigurable" order="after colors"/>

    <!-- File Types -->
    <applicationConfigurable instance="com.intellij.openapi.fileTypes.impl.FileTypeConfigurable" id="preferences.fileTypes"
                             key="filetype.settings.title" bundle="messages.FileTypesBundle"/>

    <applicationConfigurable instance="com.intellij.codeInsight.intention.impl.config.IntentionSettingsConfigurable" id="intentions"/>

    <!-- Live Templates -->
    <applicationConfigurable instance="com.intellij.codeInsight.template.impl.LiveTemplatesConfigurable" id="editing.templates"
                             key="templates.settings.page.title" bundle="messages.CodeInsightBundle"/>
    <lookup.actionProvider implementation="com.intellij.codeInsight.template.impl.LiveTemplateLookupActionProvider"/>

    <!-- File Templates-->
    <applicationConfigurable instance="com.intellij.ide.fileTemplates.impl.AllFileTemplatesConfigurable" id="fileTemplates"
                             key="title.file.templates" bundle="messages.IdeBundle"/>

    <!-- T.O.D.O -->
    <applicationConfigurable instance="com.intellij.ide.todo.configurable.TodoConfigurable" id="preferences.toDoOptions" key="title.todo"
                             bundle="messages.IdeBundle"/>

    <!-- External Tools -->
    <applicationConfigurable instance="com.intellij.tools.ToolConfigurable" id="preferences.externalTools" key="tools.settings.title"
                             bundle="messages.ToolsBundle"/>
    <stepsBeforeRunProvider implementation="com.intellij.tools.ToolBeforeRunTaskProvider"/>
    <checkinHandlerFactory implementation="com.intellij.tools.ExternalToolsCheckinHandlerFactory"/>
    <projectService serviceInterface="com.intellij.tools.ToolsProjectConfig"
                    serviceImplementation="com.intellij.tools.ToolsProjectConfig"/>

    <lang.parserDefinition language="TEXT" implementationClass="com.intellij.openapi.fileTypes.PlainTextParserDefinition"/>
    <lang.syntaxHighlighterFactory key="TEXT" implementationClass="com.intellij.openapi.fileTypes.PlainTextSyntaxHighlighterFactory"/>
    <braceMatcher filetype="PLAIN_TEXT" implementationClass="com.intellij.ide.highlighter.custom.impl.CustomFileTypeBraceMatcher"/>
    <lang.ast.leafFactory implementation="com.intellij.psi.impl.source.tree.PlainTextASTLeafFactory"/>

    <getDataRule key="psi.File" implementationClass="com.intellij.ide.impl.dataRules.PsiFileRule"/>
    <getDataRule key="psi.Element" implementationClass="com.intellij.ide.impl.dataRules.PsiElementFromSelectionRule"/>
    <getDataRule key="psi.Element.array" implementationClass="com.intellij.ide.impl.dataRules.PsiElementFromSelectionsRule"/>
    <getDataRule key="psi.pasteTargetElement" implementationClass="com.intellij.ide.impl.dataRules.PasteTargetRule"/>
    <getDataRule key="virtualFile" implementationClass="com.intellij.ide.impl.dataRules.VirtualFileRule"/>
    <getDataRule key="virtualFileArray" implementationClass="com.intellij.ide.impl.dataRules.VirtualFileArrayRule"/>
    <getDataRule key="Navigatable" implementationClass="com.intellij.ide.impl.dataRules.NavigatableRule"/>
    <getDataRule key="usageTarget" implementationClass="com.intellij.ide.impl.dataRules.UsageTargetsRule"/>
    <getDataRule key="UsageInfo.List" implementationClass="com.intellij.ide.impl.dataRules.UsageInfo2ListRule"/>
    <getDataRule key="module" implementationClass="com.intellij.ide.impl.dataRules.ModuleRule"/>

    <dataValidator key="psi.File" implementationClass="com.intellij.ide.impl.PsiElementDataValidator"/>
    <dataValidator key="psi.Element" implementationClass="com.intellij.ide.impl.PsiElementDataValidator"/>
    <dataValidator key="psi.Element.array" implementationClass="com.intellij.ide.impl.PsiElementArrayDataValidator"/>
    <dataValidator key="module" implementationClass="com.intellij.ide.impl.ModuleDataValidator"/>

    <patternDialectProvider implementation="com.intellij.packageDependencies.ui.ProjectPatternProvider" id="file"/>
    <customScopesProvider implementation="com.intellij.packageDependencies.DefaultScopesProvider"/>
    <customScopesProvider implementation="com.intellij.packageDependencies.TestScopeProvider"/>
    <customScopesProvider implementation="com.intellij.packageDependencies.ResourceScopeProvider"/>
    <customScopesProvider implementation="com.intellij.packageDependencies.TestResourceScopeProvider"/>
    <customScopesProvider implementation="com.intellij.packageDependencies.SourceScopeProvider"/>
    <customScopesProvider implementation="com.intellij.packageDependencies.ChangeListsScopesProvider" order="last"/>
    <refactoring.elementListenerProvider implementation="com.intellij.packageDependencies.ui.RefactoringScopeElementListenerProvider"/>

    <highlightVisitor implementation="com.intellij.codeInsight.daemon.impl.DefaultHighlightVisitor"/>
    <daemon.changeLocalityDetector implementation="com.intellij.codeInsight.daemon.impl.DefaultChangeLocalityDetector"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentDateMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentTimeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CurrentUserMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CapitalizeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.DecapitalizeMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FirstWordMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ReplaceUnderscoresWithSpacesMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.LineNumberMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FileNameMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.FileNameWithoutExtensionMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ReplaceUnderscoresToCamelCaseMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CapitalizeAndUnderscoreMacro"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CompleteMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.CompleteSmartMacro"/>
    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.ClassNameCompleteMacro"/>

    <liveTemplateMacro implementation="com.intellij.codeInsight.template.macro.EnumMacro"/>
    <internalFileTemplate name="Html"/>
    <internalFileTemplate name="Html5"/>
    <internalFileTemplate name="Xhtml"/>
    <fileBasedIndex implementation="com.intellij.psi.impl.cache.impl.todo.TodoIndex"/>
    <fileBasedIndex implementation="com.intellij.psi.impl.cache.impl.id.IdIndex"/>
    <fileBasedIndex implementation="com.intellij.psi.search.FilenameIndex"/>
    <fileBasedIndex implementation="com.intellij.psi.search.FileTypeIndex"/>
    <fileBasedIndex implementation="com.intellij.psi.stubs.StubUpdatingIndex"/>

    <fileBasedIndex implementation="com.intellij.find.ngrams.TrigramIndex"/>

    <fileBasedIndex implementation="com.intellij.psi.impl.include.FileIncludeIndex"/>

    <syntaxHighlighter factoryClass="com.intellij.openapi.fileTypes.LanguageFileTypeHighlighterProvider"/>
    <structureViewBuilder factoryClass="com.intellij.ide.highlighter.LanguageFileTypeStructureViewBuilderProvider"/>

    <lang.elementManipulator forClass="com.intellij.psi.PsiPlainTextFile"
                             implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.manipulators.PlainFileManipulator"/>
    <lang.elementManipulator forClass="com.intellij.psi.PsiComment"
                             implementationClass="com.intellij.psi.impl.source.resolve.reference.impl.manipulators.PsiCommentManipulator"/>

    <applicationService serviceInterface="com.intellij.ide.macro.MacroManager" serviceImplementation="com.intellij.ide.macro.MacroManager"/>
    <hectorComponentProvider implementation="com.intellij.codeInsight.daemon.impl.FileIncludeContextHectorProvider"/>

    <programRunner implementation="com.intellij.tools.ToolProgramRunner"/>

    <ideRootPaneNorth implementation="com.intellij.ide.navigationToolbar.NavBarRootPaneExtension"/>
    <navbar implementation="com.intellij.ide.navigationToolbar.DefaultNavBarExtension" id="defaultNavbar"/>

    <statistician key="completion" implementationClass="com.intellij.codeInsight.completion.DecoratorCompletionStatistician" order="first"
                  id="decorator"/>
    <statistician key="completion" implementationClass="com.intellij.codeInsight.completion.DefaultCompletionStatistician" order="last"/>

    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.OpenedInEditorWeigher" id="openedInEditor"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SameLogicalRootWeigher" id="sameLogicalRoot"
             order="after openedInEditor"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SameModuleWeigher" id="sameModule"
             order="after sameLogicalRoot"/>
    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SdkOrLibraryWeigher" id="sdkOrLibrary"
             order="after sameModule"/>

    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.PriorityWeigher" id="priority" order="first"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.StatisticsWeigher" id="stats"
             order="after priority"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.PrefixMatchingWeigher" id="prefix"
             order="after stats"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.ExplicitProximityWeigher" id="explicitProximity"
             order="after prefix"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.LookupElementProximityWeigher" id="proximity"
             order="after explicitProximity"/>
    <weigher key="completion" implementationClass="com.intellij.codeInsight.completion.GroupingWeigher" id="grouping"
             order="last"/>

    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.DefaultCompletionContributor"
                            id="default"
                            order="last"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.ComboEditorCompletionContributor"
                            id="comboEditor" order="first"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.WordCompletionContributor"
                            id="wordCompletion" order="last"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.LegacyCompletionContributor" id="legacy"
                            order="last"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.completion.FilePathCompletionContributor"
                            id="filePath" order="before javaClassName"/>
    <completion.contributor language="any" implementationClass="com.intellij.codeInsight.template.impl.LiveTemplateCompletionContributor"
                            id="liveTemplates" order="first"/>

    <completion.skip implementation="com.intellij.codeInsight.template.impl.LiveTemplateCompletionContributor$Skipper"
                     id="skipLiveTemplate"/>

    <completion.contributor language="TEXT" implementationClass="com.intellij.openapi.vcs.CommitCompletionContributor" id="commitCompletion"
                            order="first, before liveTemplates"/>


    <applicationService serviceInterface="com.intellij.execution.console.ConsoleFoldingSettings"
                        serviceImplementation="com.intellij.execution.console.ConsoleFoldingSettings"/>
    <console.folding implementation="com.intellij.execution.console.SubstringConsoleFolding"/>

    <lookup.charFilter implementation="com.intellij.codeInsight.template.impl.LiveTemplateCharFilter" order="first" id="liveTemplate"/>
    <lookup.charFilter implementation="com.intellij.codeInsight.completion.CompletionCharFilter" order="last" id="completion"/>
    <lookup.charFilter implementation="com.intellij.refactoring.IdentifierCharFilter" id="identifier" order="last"/>
    <lookup.charFilter implementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReferenceCharFilter" id="fileRef"
                       order="before completion"/>

    <gotoFileContributor implementation="com.intellij.ide.util.gotoByName.DefaultFileNavigationContributor"/>
    <gotoTargetRendererProvider implementation="com.intellij.xml.impl.schema.GotoXmlSchemaTypeRendererProvider"/>
    <gotoRelatedProvider implementation="com.intellij.ide.actions.RelatedItemLineMarkerGotoAdapter"/>

    <selectInTarget implementation="com.intellij.ide.impl.ProjectViewSelectInGroupTarget"/>
    <selectInTarget implementation="com.intellij.ide.navigationToolbar.SelectInNavBarTarget"/>
    <selectInTarget implementation="com.intellij.ide.impl.StructureViewSelectInTarget"/>
    <selectInTarget implementation="com.intellij.ide.impl.ProjectViewSelectInExplorerTarget"/>
    <selectInTarget implementation="com.intellij.ide.favoritesTreeView.FavoritesViewSelectInTarget"/>

    <elementLookupRenderer implementation="com.intellij.codeInsight.template.impl.TemplateLookupRenderer"/>

    <customPasteProvider implementation="com.intellij.ide.actions.PasteReferenceProvider"/>

    <usageFilteringRuleProvider implementation="com.intellij.usages.impl.UsageFilteringRuleProviderImpl"/>
    <usageGroupingRuleProvider implementation="com.intellij.usages.impl.UsageGroupingRuleProviderImpl"/>

    <projectService serviceInterface="com.intellij.psi.templateLanguages.TemplateDataLanguageMappings"
                    serviceImplementation="com.intellij.psi.templateLanguages.TemplateDataLanguageMappings"/>
    <applicationService serviceInterface="com.intellij.psi.templateLanguages.TemplateDataLanguagePatterns"
                        serviceImplementation="com.intellij.psi.templateLanguages.TemplateDataLanguagePatterns"/>

    <!-- execution -->
    <executor implementation="com.intellij.execution.executors.DefaultRunExecutor" order="first" id="run"/>
    <executionTargetProvider implementation="com.intellij.execution.DefaultExecutionTargetProvider"/>

    <findUsagesHandlerFactory implementation="com.intellij.find.findUsages.DefaultFindUsagesHandlerFactory" id="default" order="last"/>
    <usageTargetProvider implementation="com.intellij.find.findUsages.DefaultUsageTargetProvider" id="default" order="last"/>

    <cutElementMarker implementation="com.intellij.ide.PsiCutElementMarker"/>

    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.PlainTextLineSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.NaturalLanguageTextSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.WordSelectioner"/>
    <extendWordSelectionHandler implementation="com.intellij.codeInsight.editorActions.wordSelection.LineCommentSelectioner"/>

    <syntaxHighlighter factoryClass="com.intellij.ide.highlighter.custom.impl.CustomFileTypeHighlighterProvider"/>
    <fileTypeRegistrator implementation="com.intellij.ide.highlighter.custom.impl.StandardFileTypeRegistrator"/>

    <directoryProjectConfigurator implementation="com.intellij.platform.PlatformProjectViewOpener"/>

    <statementUpDownMover implementation="com.intellij.codeInsight.editorActions.moveUpDown.LineMover" id="line" order="last"/>

    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterInStringLiteralHandler"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterInLineCommentHandler"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterAfterUnmatchedBraceHandler"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterBetweenBracesHandler"
                          id="EnterBetweenBracesHandler"/>
    <enterHandlerDelegate implementation="com.intellij.codeInsight.editorActions.enter.EnterAfterJavadocTagHandler"/>

    <codeInsight.linkHandler prefix="#inspection/" handlerClass="com.intellij.codeInsight.hint.InspectionDescriptionLinkHandler"/>
    <codeInsight.linkHandler prefix="#navigation/" handlerClass="com.intellij.codeInsight.hint.NavigationLinkHandler"/>

    <codeFoldingOptionsProvider instance="com.intellij.application.options.editor.BaseCodeFoldingOptionsProvider" order="first"/>
    <editorOptionsProvider instance="com.intellij.application.options.editor.EditorSmartKeysConfigurable" id="editor.preferences.smartKeys"
                           displayName="Smart Keys"/>
    <editorOptionsProvider instance="com.intellij.application.options.editor.EditorAppearanceConfigurable"
                           id="editor.preferences.appearance"
                           key="tab.editor.settings.appearance" bundle="messages.ApplicationBundle"/>
    <editorCustomization implementation="com.intellij.ui.SoftWrapsEditorCustomization"/>
    <editorCustomization implementation="com.intellij.ui.HorizontalScrollBarEditorCustomization"/>
    <editorCustomization implementation="com.intellij.ui.AdditionalPageAtBottomEditorCustomization"/>
    <editorCustomization implementation="com.intellij.ui.OneLineEditorCustomization"/>
    <editorCustomization implementation="com.intellij.ui.RightMarginEditorCustomization"/>

    <!-- Colors & Fonts-->
    <editorOptionsProvider instance="com.intellij.application.options.colors.ColorAndFontOptions"
                           id="reference.settingsdialog.IDE.editor.colors"/>
    <editorOptionsProvider instance="com.intellij.application.options.editor.EditorTabsConfigurable" id="editor.preferences.tabs"
                           displayName="Editor Tabs"/>
    <editorOptionsProvider instance="com.intellij.application.options.editor.CodeFoldingConfigurable" id="editor.preferences.folding"
                           key="group.code.folding" bundle="messages.ApplicationBundle"/>
    <editorOptionsProvider instance="com.intellij.application.options.CodeCompletionOptions" id="editor.preferences.completion"
                           key="title.code.completion" bundle="messages.ApplicationBundle"/>
    <editorOptionsProvider instance="com.intellij.application.options.editor.AutoImportOptionsConfigurable" id="editor.preferences.import"
                           key="auto.import" bundle="messages.ApplicationBundle"/>

    <editorTabColorProvider implementation="com.intellij.ui.tabs.EditorTabColorProviderImpl"/>

    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.EditFoldingOptionsAction</className>
    </intentionAction>
    <intentionAction>
      <className>com.intellij.codeInsight.intention.impl.QuickEditAction</className>
      <category>Language Injection</category>
    </intentionAction>

    <!-- CodeInsightSettings -->
    <editorActionHandler action="EditorEnter" implementationClass="com.intellij.codeInsight.editorActions.EnterHandler" id="editorEnter"/>
    <editorActionHandler action="EditorLineEnd" implementationClass="com.intellij.codeInsight.editorActions.EndHandler"/>
    <editorActionHandler action="EditorSelectWord" implementationClass="com.intellij.codeInsight.editorActions.SelectWordHandler"/>
    <editorActionHandler action="EditorUnSelectWord" implementationClass="com.intellij.codeInsight.editorActions.UnSelectWordHandler"/>
    <editorActionHandler action="EditorPaste" implementationClass="com.intellij.codeInsight.editorActions.PasteHandler"/>
    <editorActionHandler action="EditorCopy" implementationClass="com.intellij.codeInsight.editorActions.CopyHandler"/>
    <editorActionHandler action="EditorCut" implementationClass="com.intellij.codeInsight.editorActions.CutHandler"/>
    <editorActionHandler action="EditorJoinLines" implementationClass="com.intellij.codeInsight.editorActions.JoinLinesHandler"/>
    <editorActionHandler action="EditorBackSpace" implementationClass="com.intellij.codeInsight.editorActions.BackspaceHandler"/>
    <editorActionHandler action="EditorDeleteToWordStart"
                         implementationClass="com.intellij.codeInsight.editorActions.BackspaceToWordStartHandler"/>
    <editorTypedHandler implementationClass="com.intellij.codeInsight.editorActions.TypedHandler"/>

    <editorActionHandler action="EditorDuplicate" implementationClass="com.intellij.openapi.editor.actions.NamedElementDuplicateHandler"/>

    <!-- LookupManagerActions -->
    <editorActionHandler action="EditorUp" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$UpHandler"/>
    <editorActionHandler action="EditorDown" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$DownHandler"/>
    <editorActionHandler action="EditorPageUp"
                         implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$PageUpHandler"/>
    <editorActionHandler action="EditorPageDown"
                         implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$PageDownHandler"/>
    <editorActionHandler action="EditorLeft" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$LeftHandler"/>
    <editorActionHandler action="EditorRight" implementationClass="com.intellij.codeInsight.lookup.impl.LookupActionHandler$RightHandler"/>
    <editorActionHandler action="EditorLineStart" implementationClass="com.intellij.codeInsight.lookup.impl.HomeHandler"/>
    <editorActionHandler action="EditorLineEnd" implementationClass="com.intellij.codeInsight.lookup.impl.EndHandler"/>
    <editorActionHandler action="EditorBackSpace" implementationClass="com.intellij.codeInsight.lookup.impl.BackspaceHandler"/>

    <!-- TemplateManagerActions -->
    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.codeInsight.template.impl.editorActions.EscapeHandler"
                         id="templateEscape" order="after hide-hints"/>
    <editorActionHandler action="EditorEnter" implementationClass="com.intellij.codeInsight.template.impl.editorActions.EnterHandler"
                         id="templateEnter" order="before editorEnter"/>
    <editorActionHandler action="EditorLineStart" implementationClass="com.intellij.codeInsight.template.impl.editorActions.HomeHandler"/>
    <editorActionHandler action="EditorLineStartWithSelection"
                         implementationClass="com.intellij.codeInsight.template.impl.editorActions.LineStartWithSelectionHandler"/>
    <editorActionHandler action="EditorLineEnd" implementationClass="com.intellij.codeInsight.template.impl.editorActions.EndHandler"/>
    <editorActionHandler action="EditorLineEndWithSelection"
                         implementationClass="com.intellij.codeInsight.template.impl.editorActions.LineEndWithSelectionHandler"/>
    <editorActionHandler action="$SelectAll" implementationClass="com.intellij.codeInsight.template.impl.editorActions.SelectAllHandler"/>
    <editorTypedHandler implementationClass="com.intellij.codeInsight.template.impl.editorActions.SpaceHandler"/>

    <!-- HighlightManagerActions -->
    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.codeInsight.highlighting.EscapeHandler"
                         order="after hide-hints"/>
    <editorActionHandler action="EditorEscape" implementationClass="com.intellij.refactoring.rename.inplace.EscapeHandler"
                         order="before hide-hints"/>

    <typedHandler implementation="com.intellij.codeInsight.lookup.impl.LookupTypedHandler" id="lookup" order="first"/>
    <typedHandler implementation="com.intellij.codeInsight.editorActions.CompletionAutoPopupHandler" id="completionAutoPopup"
                  order="first"/>
    <typedHandler implementation="com.intellij.codeInsight.editorActions.SelectionQuotingTypedHandler" id="selectionQuoting"/>

    <templateCompletionProcessor implementation="com.intellij.codeInsight.template.macro.DirectoryTemplateCompletionProcessor"/>

    <liveTemplateContext id="OTHER" implementation="com.intellij.codeInsight.template.EverywhereContextType" order="last"/>


    <!-- SM Test runner tests locations -->
    <testSrcLocator implementation="com.intellij.execution.testframework.sm.FileUrlProvider"/>

    <dynamicContextProvider implementation="com.intellij.openapi.paths.GenericDynamicContextProvider"/>

    <codeStyleSettingsProvider implementation="com.intellij.application.options.GeneralCodeStyleSettingsProvider"/>
    <codeStyleSettingsProvider implementation="com.intellij.application.options.OtherTabsAndIndentsProvider"/>

    <projectService serviceInterface="com.intellij.ide.todo.TodoView"
                    serviceImplementation="com.intellij.ide.todo.TodoView"/>
    <projectService serviceInterface="com.intellij.ide.structureView.StructureViewFactory"
                    serviceImplementation="com.intellij.ide.structureView.impl.StructureViewFactoryImpl"/>
    <projectService serviceInterface="com.intellij.codeInspection.InspectionManager"
                    serviceImplementation="com.intellij.codeInspection.ex.InspectionManagerEx"/>
    <projectService serviceInterface="com.intellij.usageView.UsageViewManager"
                    serviceImplementation="com.intellij.usageView.impl.UsageViewManagerImpl"/>
    <projectService serviceInterface="com.intellij.ide.projectView.ProjectView"
                    serviceImplementation="com.intellij.ide.projectView.impl.ProjectViewImpl"/>
    <projectService serviceInterface="com.intellij.execution.ui.RunnerLayoutUi$Factory"
                    serviceImplementation="com.intellij.execution.ui.layout.impl.RunnerLayoutUiFactoryImpl"/>
    <projectService serviceInterface="com.intellij.compiler.ProblemsView"
                    serviceImplementation="com.intellij.compiler.impl.ProblemsViewImpl"/>

    <http.fileEditorActionProvider implementation="com.intellij.openapi.fileEditor.impl.http.LangRemoteFileEditorActionProvider"/>

    <toolWindow id="Project" anchor="left" icon="AllIcons.Toolwindows.ToolWindowProject"
                factoryClass="com.intellij.ide.projectView.impl.ProjectViewToolWindowFactory"/>
    <toolWindow id="TODO" anchor="bottom" icon="AllIcons.Toolwindows.ToolWindowTodo"
                factoryClass="com.intellij.ide.todo.TodoToolWindowFactory" canCloseContents="true"/>
    <toolWindow id="Structure" anchor="left" icon="AllIcons.Toolwindows.ToolWindowStructure" secondary="true"
                factoryClass="com.intellij.ide.structureView.impl.StructureViewToolWindowFactory"/>
    <toolWindow id="Favorites" anchor="left" icon="AllIcons.Toolwindows.ToolWindowFavorites" secondary="true"
                factoryClass="com.intellij.ide.projectView.impl.FavoritesViewToolWindowFactory"/>

    <psi.fileReferenceHelper implementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.PsiFileReferenceHelper"/>
    <psi.fileReferenceHelper implementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.JarFileReferenceHelper"/>
    <projectConfigurable instance="com.intellij.openapi.vfs.encoding.FileEncodingConfigurable"/>
    <projectConfigurable instance="com.intellij.ui.tabs.FileColorsConfigurable" id="fileColors" displayName="File Colors"/>

    <uiDebuggerExtension implementation="com.intellij.ui.debugger.extensions.PlaybackDebugger"/>
    <uiDebuggerExtension implementation="com.intellij.ui.debugger.extensions.ActionTracer"/>
    <uiDebuggerExtension implementation="com.intellij.openapi.util.objectTree.DisposerDebugger"/>

    <applicationService serviceInterface="com.intellij.ui.debugger.extensions.PlaybackDebugger$PlaybackDebuggerState"
                        serviceImplementation="com.intellij.ui.debugger.extensions.PlaybackDebugger$PlaybackDebuggerState"/>

    <globalInspection shortName="Annotator" displayName="Annotator" groupName="General" enabledByDefault="true" level="ERROR"
                      implementationClass="com.intellij.codeInspection.DefaultHighlightVisitorBasedInspection$AnnotatorBasedInspection"/>
    <globalInspection shortName="SyntaxError" displayName="Syntax error" groupName="General" enabledByDefault="true" level="ERROR"
                      implementationClass="com.intellij.codeInspection.DefaultHighlightVisitorBasedInspection$SyntaxErrorInspection"/>
    <localInspection shortName="LossyEncoding" bundle="messages.InspectionsBundle" key="lossy.encoding"
                     groupKey="group.names.internationalization.issues" enabledByDefault="false" level="WARNING"
                     implementationClass="com.intellij.codeInspection.LossyEncodingInspection"/>

    <applicationService serviceInterface="com.intellij.codeInsight.template.TemplateBuilderFactory"
                        serviceImplementation="com.intellij.codeInsight.template.TemplateBuilderFactoryImpl"/>

    <projectViewPane implementation="com.intellij.ide.favoritesTreeView.FavoritesProjectViewPane"/>
    <projectViewPane implementation="com.intellij.ide.scopeView.ScopeViewPane"/>

    <renameHandler implementation="com.intellij.refactoring.rename.inplace.VariableInplaceRenameHandler"/>
    <renameHandler implementation="com.intellij.refactoring.rename.inplace.MemberInplaceRenameHandler"/>
    <completion.contributor language="any"
                            implementationClass="com.intellij.refactoring.rename.inplace.CompletionContributorForInplaceRename"
                            order="first"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.changes.ui.ChangesFileNameDecorator"
                    serviceImplementation="com.intellij.openapi.vcs.changes.ui.WolfChangesFileNameDecorator"/>

    <filePasteProvider implementation="com.intellij.ide.FileListPasteProvider"/>

    <definitionsSearch implementation="com.intellij.pom.PomDefinitionSearch"/>


    <applicationService serviceInterface="com.intellij.ide.todo.TodoConfiguration"
                        serviceImplementation="com.intellij.ide.todo.TodoConfiguration"/>
    <indexPatternProvider implementation="com.intellij.ide.todo.TodoIndexPatternProvider"/>

    <applicationService serviceImplementation="com.intellij.codeInsight.documentation.QuickDocOnMouseOverManager"/>
    <postStartupActivity implementation="com.intellij.codeInsight.documentation.QuickDocOnMouseOverStartupActivity"/>

    <hectorComponentProvider implementation="com.intellij.codeInsight.daemon.PowerSaveHectorProvider"/>

    <copyPastePostProcessor implementation="com.intellij.codeInsight.editorActions.CopyPasteIndentProcessor"/>
    <statistics.usagesCollector implementation="com.intellij.execution.impl.statistics.RunConfigurationTypeUsagesCollector"/>
    <statistics.usagesCollector implementation="com.intellij.execution.impl.statistics.TemporaryRunConfigurationTypeUsagesCollector"/>
    <statistics.usagesCollector implementation="com.intellij.openapi.fileTypes.FileTypeUsagesCollector"/>

    <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenamePsiFileProcessor" order="last"/>
    <renameInputValidator implementation="com.intellij.refactoring.rename.RenameToIgnoredDirectoryFileInputValidator" order="last"/>

    <refactoring.elementListenerProvider implementation="com.intellij.execution.impl.RunConfigurationRefactoringElementListenerProvider"/>

    <keymapExtension implementation="com.intellij.tools.ToolKeymapExtension"/>

    <inspectionsReportConverter implementation="com.intellij.codeInspection.ex.PlainTextFormatter"/>

    <documentationProvider implementation="com.intellij.openapi.paths.WebReferenceDocumentationProvider"/>

    <refactoring.moveDirectoryWithClassesHelper
        implementation="com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesHelper$Default" order="last"/>
    <codeHighlighting.iconCreator implementation="com.intellij.codeHighlighting.DefaultIconCreator"/>

    <checkinHandlerFactory implementation="com.intellij.openapi.vcs.checkin.ReformatCheckinHandlerFactory"/>
    <checkinHandlerFactory implementation="com.intellij.openapi.vcs.checkin.OptimizeOptionsCheckinHandlerFactory"/>
    <checkinHandlerFactory implementation="com.intellij.openapi.vcs.checkin.CodeAnalysisCheckinHandlerFactory"/>
    <checkinHandlerFactory implementation="com.intellij.openapi.vcs.checkin.TodoCheckinHandlerFactory"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.CodeSmellDetector"
                    serviceImplementation="com.intellij.openapi.vcs.impl.CodeSmellDetectorImpl"/>

    <editorTabTitleProvider implementation="com.intellij.openapi.fileEditor.impl.UniqueNameEditorTabTitleProvider"/>

    <projectService serviceInterface="com.intellij.psi.util.PsiModificationTracker"
                    serviceImplementation="com.intellij.psi.impl.PsiModificationTrackerImpl"/>

    <itemPresentationProvider forClass="com.intellij.psi.PsiDirectory"
                              implementationClass="com.intellij.navigation.DirectoryPresentationProvider"/>

    <projectService serviceInterface="com.intellij.openapi.module.ModulePointerManager"
                    serviceImplementation="com.intellij.openapi.module.impl.ModulePointerManagerImpl"/>

    <customFoldingProvider implementation="com.intellij.lang.customFolding.NetBeansCustomFoldingProvider"/>
    <customFoldingProvider implementation="com.intellij.lang.customFolding.VisualStudioCustomFoldingProvider"/>

    <completion.contributor language="TEXT" implementationClass="com.intellij.ui.TextFieldWithAutoCompletionContributor"
                            order="first, before commitCompletion"/>

    <completion.contributor language="TEXT" implementationClass="com.intellij.util.CompletionContributorForTextField"
                            order="first, before commitCompletion"/>

    <pathMacroFilter implementation="com.intellij.execution.configuration.RunConfigurationPathMacroFilter"/>
    <pathMacroFilter implementation="com.intellij.openapi.application.StructuralSearchPathMacroFilter"/>

    <postStartupActivity implementation="com.intellij.codeInsight.highlighting.BraceHighlighter"/>
    <usageContextPanelProvider implementation="com.intellij.usages.impl.UsagePreviewPanel$Provider"/>
    <usageContextPanelProvider implementation="com.intellij.usageView.impl.UsageContextCallHierarchyPanel$Provider"/>
    <fileDocumentSynchronizationVetoer implementation="com.intellij.codeInsight.lookup.impl.LookupDocumentSavingVetoer"/>
    <toolsProvider implementation="com.intellij.tools.LocalToolsProvider"/>

    <favoritesListProvider implementation="com.intellij.ide.bookmarks.BookmarksFavoriteListProvider"/>
    <favoritesListProvider implementation="com.intellij.xdebugger.impl.breakpoints.BreakpointsFavoriteListProvider"/>
    <applicationService serviceInterface="com.intellij.codeInsight.FileModificationService"
                        serviceImplementation="com.intellij.codeInsight.CodeInsightUtilBase"/>

    <!--Platform-->
    <applicationService serviceInterface="com.intellij.packageDependencies.DependenciesVisitorFactory"
                        serviceImplementation="com.intellij.packageDependencies.DependenciesVisitorFactory"/>
    <applicationService serviceInterface="com.intellij.openapi.projectRoots.SdkTable"
                        serviceImplementation="com.intellij.openapi.projectRoots.impl.SdkTableImpl"/>
    <applicationService serviceInterface="com.intellij.codeInsight.TargetElementUtilBase"
                        serviceImplementation="com.intellij.codeInsight.TargetElementUtilBase"/>

    <exportable serviceInterface="com.intellij.openapi.projectRoots.SdkTable"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.impl.DefaultVcsRootPolicy"
                    serviceImplementation="com.intellij.openapi.vcs.impl.ModuleDefaultVcsRootPolicy"/>

    <projectService serviceInterface="com.intellij.psi.impl.file.PsiDirectoryFactory"
                    serviceImplementation="com.intellij.psi.impl.file.PsiDirectoryFactoryImpl"/>

    <projectService serviceInterface="com.intellij.openapi.roots.ui.configuration.ProjectSettingsService"
                    serviceImplementation="com.intellij.openapi.roots.ui.configuration.IdeaProjectSettingsService"/>

    <projectService serviceInterface="com.intellij.refactoring.RefactoringFactory"
                    serviceImplementation="com.intellij.refactoring.openapi.impl.RefactoringFactoryImpl"/>

    <projectService serviceInterface="com.intellij.platform.ProjectBaseDirectory"
                    serviceImplementation="com.intellij.platform.ProjectBaseDirectory"/>
    <projectService serviceImplementation="com.intellij.openapi.roots.ui.configuration.ProjectStructureConfigurable"/>

    <projectService serviceInterface="com.intellij.lang.injection.InjectedLanguageManager"
                    serviceImplementation="com.intellij.psi.impl.source.tree.injected.InjectedLanguageManagerImpl"/>
    <projectService serviceInterface="com.intellij.openapi.vcs.changes.patch.PatchBaseDirectoryDetector"
                    serviceImplementation="com.intellij.openapi.vcs.changes.patch.PsiPatchBaseDirectoryDetector"/>
    <applicationService serviceInterface="com.intellij.openapi.roots.ModifiableModelsProvider"
                        serviceImplementation="com.intellij.openapi.roots.PlatformModifiableModelsProvider"/>


    <refactoring.copyHandler implementation="com.intellij.refactoring.copy.CopyFilesOrDirectoriesHandler"/>
    <refactoring.moveHandler implementation="com.intellij.refactoring.move.moveFilesOrDirectories.MoveFilesOrDirectoriesHandler"
                             id="moveFileOrDir"/>
    <applicationService serviceInterface="com.intellij.codeEditor.printing.FileSeparatorProvider"
                        serviceImplementation="com.intellij.codeEditor.printing.FileSeparatorProvider"/>

    <treeStructureProvider implementation="com.intellij.platform.PlatformProjectViewStructureProvider"/>

    <programRunner implementation="com.intellij.execution.runners.BasicProgramRunner" order="last"/>

    <projectConfigurable provider="com.intellij.profile.codeInspection.ui.ProjectInspectionToolsConfigurableProvider"
                         order="before intentions"/>
    <projectConfigurable instance="com.intellij.ide.util.scopeChooser.ScopeChooserConfigurable" id="project.scopes"
                         key="scopes.display.name" bundle="messages.IdeBundle"/>

    <checkoutCompletedListener implementation="com.intellij.openapi.vcs.checkout.PlatformProjectCheckoutListener"
                               id="PlatformProjectCheckoutListener"/>

    <weigher key="proximity" implementationClass="com.intellij.psi.util.proximity.SameDirectoryWeigher" id="sameDirectory"
             order="after openedInEditor"/>

    <colorSettingsPage implementation="com.intellij.xdebugger.impl.ui.DebuggerColorsPage"/>

    <applicationService serviceInterface="com.intellij.xdebugger.impl.settings.XDebuggerSettingsManager"
                        serviceImplementation="com.intellij.xdebugger.impl.settings.XDebuggerSettingsManager"/>

    <applicationService serviceInterface="com.intellij.xdebugger.XDebuggerUtil"
                        serviceImplementation="com.intellij.xdebugger.impl.XDebuggerUtilImpl"/>

    <projectService serviceImplementation="com.intellij.xdebugger.impl.evaluate.quick.common.ValueLookupManager"/>

    <projectService serviceInterface="com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory"
                    serviceImplementation="com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory"/>

    <projectService serviceInterface="com.intellij.xdebugger.impl.XDebuggerHistoryManager"
                    serviceImplementation="com.intellij.xdebugger.impl.XDebuggerHistoryManager"/>

    <applicationConfigurable provider="com.intellij.xdebugger.impl.settings.DebuggerConfigurableProvider"/>

    <customizableActionGroupProvider implementation="com.intellij.xdebugger.impl.ui.XDebugTabCustomizableActionGroupProvider"/>

    <xdebugger.debuggerSupport implementation="com.intellij.xdebugger.impl.XDebuggerSupport" order="first"/>

    <executor implementation="com.intellij.execution.executors.DefaultDebugExecutor" order="first,after run"/>

    <bundledColorScheme path="/colorSchemes/Consulo Light.xml"/>
    <bundledColorScheme path="/colorSchemes/Darcula.xml"/>
    <bundledColorScheme path="/colorSchemes/all_hallows_eve.xml"/>
    <bundledColorScheme path="/colorSchemes/blackboard.xml"/>
    <bundledColorScheme path="/colorSchemes/cobalt.xml"/>
    <bundledColorScheme path="/colorSchemes/github.xml"/>
    <bundledColorScheme path="/colorSchemes/monokai.xml"/>
    <bundledColorScheme path="/colorSchemes/rails_casts.xml"/>
    <bundledColorScheme path="/colorSchemes/twilight.xml"/>
    <bundledColorScheme path="/colorSchemes/vibrant_ink.xml"/>
    <bundledColorScheme path="/colorSchemes/WarmNeon.xml"/>

    <iconDescriptorUpdater implementation="com.intellij.psi.impl.DefaultIconDescriptorUpdater" id="default" order="last"/>
    <psi.packageResolver implementation="org.consulo.psi.impl.DefaultPsiPackageResolver"/>
    <psi.packageResolver implementation="org.consulo.psi.impl.LibraryPsiPackageResolver"/>

    <lang.ast.lazyFactory implementation="com.intellij.lang.impl.DefaultASTLazyFactory" order="last"/>
    <lang.ast.leafFactory implementation="com.intellij.lang.impl.DefaultASTLeafFactory" order="last"/>
    <lang.ast.compositeFactory implementation="com.intellij.lang.impl.DefaultASTCompositeFactory" order="last"/>
    <lang.psi.elementFactory implementation="com.intellij.lang.impl.DefaultPsiElementFactory" order="last"/>
    <iconDescriptorUpdater implementation="org.consulo.compiler.CompilerIconDescriptorUpdater" />

    <directoryIndexExcludePolicy implementation="com.intellij.openapi.roots.impl.ExcludeCompilerOutputPolicy"/>
    <compiler implementation="com.intellij.packaging.impl.compiler.ArtifactsCompiler" id="artifactsCompiler" order="last"/>
    <compiler implementation="com.intellij.compiler.impl.resourceCompiler.ResourceCompiler" id="resourceCompiler"/>
    <projectService serviceInterface="org.consulo.compiler.impl.resourceCompiler.ResourceCompilerConfiguration"
                    serviceImplementation="org.consulo.compiler.impl.resourceCompiler.ResourceCompilerConfiguration"/>

    <projectConfigurable parentId="project.propCompiler"
                         instance="org.consulo.compiler.impl.resourceCompiler.ResourceCompilerConfigurable"
                         key="resource.compiler.description" bundle="messages.CompilerBundle"/>

    <!--External system-->
    <postStartupActivity implementation="com.intellij.openapi.externalSystem.service.ExternalSystemStartupActivity"/>

    <!--Generic services-->
    <applicationService serviceImplementation="com.intellij.openapi.externalSystem.service.ExternalSystemFacadeManager"/>
    <applicationService
        serviceInterface="com.intellij.openapi.externalSystem.service.notification.ExternalSystemProgressNotificationManager"
        serviceImplementation="com.intellij.openapi.externalSystem.service.remote.ExternalSystemProgressNotificationManagerImpl"/>
    <applicationService serviceImplementation="com.intellij.openapi.externalSystem.service.RemoteExternalSystemCommunicationManager"/>
    <applicationService serviceImplementation="com.intellij.openapi.externalSystem.service.InProcessExternalSystemCommunicationManager"/>
    <applicationService serviceInterface="com.intellij.openapi.externalSystem.service.project.PlatformFacade"
                        serviceImplementation="com.intellij.openapi.externalSystem.service.project.PlatformFacadeImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.externalSystem.service.project.ExternalLibraryPathTypeMapper"
                        serviceImplementation="com.intellij.openapi.externalSystem.service.project.ExternalLibraryPathTypeMapperImpl"/>
    <applicationService serviceImplementation="com.intellij.openapi.externalSystem.settings.ExternalSystemSettingsManager"/>
    <applicationService serviceImplementation="com.intellij.openapi.externalSystem.service.project.ProjectStructureHelper"/>
    <applicationService serviceImplementation="com.intellij.openapi.externalSystem.service.internal.ExternalSystemProcessingManager"/>
    <applicationService
        serviceImplementation="com.intellij.openapi.externalSystem.service.notification.ExternalSystemIdeNotificationManager"/>

    <!--Project structure management services-->
    <applicationService serviceImplementation="com.intellij.openapi.externalSystem.service.project.manage.ProjectDataManager"/>
    <externalProjectDataService implementation="com.intellij.openapi.externalSystem.service.project.manage.ProjectDataServiceImpl"/>
    <externalProjectDataService implementation="com.intellij.openapi.externalSystem.service.project.manage.LibraryDataService"/>
    <externalProjectDataService implementation="com.intellij.openapi.externalSystem.service.project.manage.ModuleDataService"/>
    <externalProjectDataService implementation="com.intellij.openapi.externalSystem.service.project.manage.ContentRootDataService"/>
    <externalProjectDataService implementation="com.intellij.openapi.externalSystem.service.project.manage.LibraryDependencyDataService"/>
    <externalProjectDataService implementation="com.intellij.openapi.externalSystem.service.project.manage.ModuleDependencyDataService"/>

    <!--Tool window services-->
    <externalProjectDataService implementation="com.intellij.openapi.externalSystem.service.task.ToolWindowProjectService"/>
    <externalProjectDataService implementation="com.intellij.openapi.externalSystem.service.task.ToolWindowModuleService"/>
    <externalProjectDataService implementation="com.intellij.openapi.externalSystem.service.task.ToolWindowTaskService"/>

    <!--Remote servers-->
    <applicationService serviceInterface="com.intellij.remoteServer.configuration.RemoteServersManager"
                        serviceImplementation="com.intellij.remoteServer.impl.configuration.RemoteServersManagerImpl"/>
    <applicationService serviceInterface="com.intellij.remoteServer.runtime.ServerConnectionManager"
                        serviceImplementation="com.intellij.remoteServer.impl.runtime.ServerConnectionManagerImpl"/>
    <applicationConfigurable instance="com.intellij.remoteServer.impl.configuration.RemoteServerListConfigurable"/>
    <programRunner implementation="com.intellij.remoteServer.impl.runtime.DeployToServerRunner"/>

    <remoteServer.deploymentSource.type implementation="com.intellij.remoteServer.impl.configuration.deploySource.ModuleDeploymentSourceType"/>
    <remoteServer.deploymentSource.type implementation="com.intellij.remoteServer.impl.configuration.deploySource.ArtifactDeploymentSourceType"/>

    <projectService serviceInterface="com.intellij.remoteServer.runtime.ui.RemoteServersView"
                    serviceImplementation="com.intellij.remoteServer.impl.ui.RemoteServersViewImpl" />

    <iconDescriptorUpdater implementation="com.intellij.execution.testframework.TestIconDescriptorUpdater" order="before default"/>

    <directoryProjectGenerator implementation="com.intellij.platform.DefaultDirectoryProjectGenerator" />

    <search.topHitProvider implementation="com.intellij.platform.DefaultPlatformTopHitProvider" />
    <search.topHitProvider implementation="com.intellij.ide.ui.UISimpleSettingsProvider" />

    <applicationService serviceInterface="com.intellij.profile.codeInspection.InspectionProfileManager"
                        serviceImplementation="com.intellij.profile.codeInspection.InspectionProfileManagerImpl"/>

    <exportable serviceInterface="com.intellij.profile.codeInspection.InspectionProfileManager"/>
    <schemeOwner serviceInterface="com.intellij.profile.codeInspection.InspectionProfileManager"/>

    <projectService serviceInterface="com.intellij.codeInsight.daemon.impl.analysis.HighlightingLevelManager"
                    serviceImplementation="com.intellij.codeInsight.daemon.impl.analysis.HighlightingSettingsPerFile"/>

    <applicationService serviceInterface="org.consulo.ui.UIThemeManager" serviceImplementation="org.consulo.ui.impl.UIThemeManagerImpl" />

    <bundledUITheme file="/uiThemes/default.clt" />
  </extensions>
</idea-plugin>
